<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>大学毕业那一瞬间，所有人都回到了自己的阶层</title>
    <link href="/2025/01/05/%E5%A4%A7%E5%AD%A6%E6%AF%95%E4%B8%9A%E9%82%A3%E4%B8%80%E7%9E%AC%E9%97%B4%EF%BC%8C%E6%89%80%E6%9C%89%E4%BA%BA%E9%83%BD%E5%9B%9E%E5%88%B0%E4%BA%86%E8%87%AA%E5%B7%B1%E7%9A%84%E9%98%B6%E5%B1%82/"/>
    <url>/2025/01/05/%E5%A4%A7%E5%AD%A6%E6%AF%95%E4%B8%9A%E9%82%A3%E4%B8%80%E7%9E%AC%E9%97%B4%EF%BC%8C%E6%89%80%E6%9C%89%E4%BA%BA%E9%83%BD%E5%9B%9E%E5%88%B0%E4%BA%86%E8%87%AA%E5%B7%B1%E7%9A%84%E9%98%B6%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="大学毕业那一瞬间，所有人都回到了自己的阶层"><a href="#大学毕业那一瞬间，所有人都回到了自己的阶层" class="headerlink" title="大学毕业那一瞬间，所有人都回到了自己的阶层"></a>大学毕业那一瞬间，所有人都回到了自己的阶层</h1><p>又到了一年的毕业季，大学毕业那一瞬间，所有人都<strong>回到了自己的阶层</strong>，这是一种无力又真实的触感。 </p><p>终将投入劳动市场，才恍然发现自己手上有价值的筹码（实习经历、职场经验、家庭背景、社会关系等），贫瘠到近乎可笑。 </p><p>从这个角度看，大学可能只是延缓你与社会过早接触的中转站，若不及时浮出水面“自救”，它可能还是压垮你的最后一根稻草。 </p><p>王志文有一句经典的台词：“<font color="red">这个世界是有两套规则运行的；一套说的规则，一套做的规则</font>。” </p><p>第一套是我们学校里学的，仁义礼智信，温良恭俭让，这是我们的入世资本。也就是说你必须懂这一套，不然大家就会认为你没有教养，都不喜欢你，都不愿意和你接触。 </p><p>第二套规则是在暗中的，不能直接讲，需要你去悟，它的核心就两个字，那就是利益。 </p><p>我们生活在一个充满复杂人际关系的世界，这个世界既有明面上的道德标准，也有人们默认的潜规则。 </p><p><strong>学校学的是儒家理论，社会是诸子百家，三十六计实战经验</strong>。 </p><p>对于这两套规则，理解和运用得当，才能在社会中立足。</p><p> <font color="red">只要你不掌握生产资源，只要你是靠出卖智力体力来生存的。不管你处于什么阶级，你都只是可以随时被收割的对象</font>。 </p><p>社会的游戏规则，一层一层的难度系数和代价，都锁死着不同的人，层层递进。 </p><p>成年人，最终是被筛选出来的。 </p><p>想要有所作为，还要有大格局、运筹帷幄的能力，拥有帝王心态。 </p><p>要知道，失败是普通人的常态，困境是领导的常态，灾难是领袖的常态。 </p><p>有些人欠了二三十万就自杀了；有些人负债几十亿谈笑风生；有些人一败涂地，又东山再起，注定了下一个更高事业的辉煌。 </p><p>人生没有谁是一帆风顺的，一个男人若是没有足够的实力，没有一定的格局，这个世界也不会因为你的懦弱多一分怜悯。 </p><p>帝王心态即是“没有先河，我便开了这先河”的魄力，拥有匪气与领袖并存的气质。我们渴望成功，就必须练就不怕死的狠劲、不服输的精神和俯视一切的傲气。 </p><p>告诉你一个秘密：只要你担心别人会怎么看你，他们就能奴役你，只有你再也不从自身之外寻求肯定，那你才能真正成为自己的主人。 只要心足够黑，崩溃的就是他人。 </p><p>人生本就是自我主导的一场游戏，自己则是运筹帷幄的帝王，心如帝王，则行有尊严；思如帝王，则决断有力。 如果说人拥有匪气，就拥有了强大的气场震慑四方，那么，拥有了帝王心态，便有了强大的对内驱动，内外兼修，毫无破绽，所向披靡。</p>]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>寄语大学毕业生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年回顾与总结&amp;2025年目标与计划</title>
    <link href="/2025/01/05/2024%E5%B9%B4%E5%9B%9E%E9%A1%BE%E4%B8%8E%E6%80%BB%E7%BB%93&amp;2025%E5%B9%B4%E7%9B%AE%E6%A0%87%E4%B8%8E%E8%AE%A1%E5%88%92/"/>
    <url>/2025/01/05/2024%E5%B9%B4%E5%9B%9E%E9%A1%BE%E4%B8%8E%E6%80%BB%E7%BB%93&amp;2025%E5%B9%B4%E7%9B%AE%E6%A0%87%E4%B8%8E%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3e0a11b2788b170922c92ae33a9264df37b58c7b4cfa534a1642fc48b0e84abd"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>年终总结和展望</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始搭建Ubuntu系统教程</title>
    <link href="/2025/01/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAUbuntu%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/"/>
    <url>/2025/01/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAUbuntu%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="从零开始搭建Ubuntu系统教程"><a href="#从零开始搭建Ubuntu系统教程" class="headerlink" title="从零开始搭建Ubuntu系统教程"></a>从零开始搭建Ubuntu系统教程</h1><p>由于最近新购入联想小新Pro16，所以考虑把之前的笔记本做成Ubuntu系统，这样方便利用双系统进行工作。<br>本文主要介绍了系统的安装以及后续一些必备软件的安装，以后遇到此类情况，可以快速响应。</p><h2 id="安装Ubuntu系统"><a href="#安装Ubuntu系统" class="headerlink" title="安装Ubuntu系统"></a>安装Ubuntu系统</h2><p>首先，需要我们去<a href="https://ubuntu.com/download">官网</a>下载镜像文件，但是由于官方的服务器搭建在境外，因此我们更倾向于使用国内镜像进行下载，比如<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/">清华大学镜像</a>，一般来说，比较常用的是16.04和18.04版本，这里我选择了18.04版本，注意最好是64位，之前安装了32位，后来又重装了。<br><img src="/images/0104_01.png"><br>大概等个十分钟，就可以安装完成。</p><h2 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>做一个启动盘，这里使用的Rufus启动盘，制作很简单，首先去网上下载一个<a href="https://rufus.ie/zh/">Rufus安装包</a>,安装后打开，在‘‘引导类型选择’’这栏选择自己之前下载的ubuntu的ios镜像文件，再点‘‘确定’’。注意，<strong>这步操作会将U盘格式化</strong>，如果U盘里面有重要的文件，记得提前备份。</p><p>完后进行第二步操作后，会有一个‘‘状态’’的进度条，当进度条进行到100%后启动盘就制作完成了。<br><img src="/images/0104_02.png"></p><h2 id="进入BIOS"><a href="#进入BIOS" class="headerlink" title="进入BIOS"></a>进入BIOS</h2><p>我的电脑是联想G50-80，进入BIOS的方式是FN+F2，不同电脑进入方式大同小异，百度一下即可。</p><h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><p>今日BIOS之后，选择安装Ubuntu，选择好对应的配置，就可以了，重启机器，一般就完成了安装。但是，我在安装的过程中出现了acpi error、花屏等问题，我是按住e键，就可以直接跳过，然后顺利完成安装。</p><h3 id="Clash-for-Windows"><a href="#Clash-for-Windows" class="headerlink" title="Clash for Windows"></a>Clash for Windows</h3><p>第一步，肯定是要把工具搭建起来，网上看了下，clash应该属于最简单的方式了。</p><p>clash是近期比较著名的软件，其便捷、多平台的特点吸引了大量的用户。clash有三种Clash For Windows 、Clash For Linux和clash for android 三个主要的分支，大家在使用时，可能会将分支Clash For Windows中的windows理解成windows系统下专用的分支。其实在这里，windows指的是带GUI界面的clash软件。在ubuntu中，相比较于安装Clash For Linux，Clash For Windows更为方便和直观，下面就来介绍Clash for Windows 软件在ubuntu下的安装过程。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>首先从GitHub上下载clash<br><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">下载链接</a><br>下载Clash.for.Windows-0.18.8-x64-linux.tar.gz（一般个人电脑请选择x64-linux）<br><img src="/images/0104_03.png"></p><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><p>进入到对应的文件夹，tar -zxvf 解压文件，进入到解压后的文件夹，在当前终端运行命令 .&#x2F;cfw  就可以打开GUI界面了。</p><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p>打开设置-网络-网络代理（齿轮），将http&#x2F;https代理指向本机的clash默认端口7890（clash界面启动页可以修改Port）<br><img src="/images/0104_04.png"></p><h5 id="设置订阅链接"><a href="#设置订阅链接" class="headerlink" title="设置订阅链接"></a>设置订阅链接</h5><p>从服务商处获取订阅链接，填入clash,选好节点即可<br><img src="/images/0104_05.png"></p><h3 id="xshell连接本地Ubuntu"><a href="#xshell连接本地Ubuntu" class="headerlink" title="xshell连接本地Ubuntu"></a>xshell连接本地Ubuntu</h3><p>由于处在同一局域网下，来回跑比较麻烦，就直接在window连接ubuntu进行操作了，配置如下。</p><p>Ubuntu 下安装 OpenSSH Server 是无比轻松的一件事情，需要的命令只有一条：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install openssh-server <span class="hljs-comment">##安装ssh服务</span><br></code></pre></td></tr></table></figure><p>查询ssh是否启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -e | grep ssh <span class="hljs-comment">##查询ssh进程是否启动成功</span><br></code></pre></td></tr></table></figure><p>如果只有ssh-agent那ssh-server还没有启动，需要&#x2F;etc&#x2F;init.d&#x2F;ssh start，如果看到sshd那说明ssh-server已经启动了。<br>ssh-server配置文件位于&#x2F; etc&#x2F;ssh&#x2F;sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如23。然后重启SSH服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> /etc/init.d/ssh resart <span class="hljs-comment">##重新启动ssh服务</span><br></code></pre></td></tr></table></figure><p>现在Linux端的ssh已经安装完成了,可以在Windows上使用远程连接工具连接了，我们使用ifconfig命令查看下ip地址，在xshell里面连接即可。<br><img src="/images/0104_06.png"></p><h3 id="chrome下载"><a href="#chrome下载" class="headerlink" title="chrome下载"></a>chrome下载</h3><p>使用wget来下载 Google Chrome .deb 软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb<br></code></pre></td></tr></table></figure><p>在 Ubuntu 系统上安装软件包需要管理员权限。以 sudo 用户身份在你的系统上运行下面的命令来安装 Chrome .deb软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install ./google-chrome-stable_current_amd64.deb<br></code></pre></td></tr></table></figure><p>在被提示时，输入你的密码，安装将会开始。</p><p>此时，你已经在你的 Ubuntu 系统上安装好了 Chrome。</p><p>在活动搜索栏输入”Google Chrome”，并且点击图标，启动这个应用。</p><h3 id="卸载FireFox"><a href="#卸载FireFox" class="headerlink" title="卸载FireFox"></a>卸载FireFox</h3><p>查看已安装的火狐浏览器及其扩展：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg --get-selections | grep firefox<br></code></pre></td></tr></table></figure><p>卸载软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get purge firefox   firefox-globalmenu  firefox-gnome-support   firefox-locale-en   firefox-locale-zh-hans<br></code></pre></td></tr></table></figure><p>后面有别的软件或者环境搭建，还会继续补充，先写到这里。</p><p><img src="/images/1202_14.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>解决方案</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决方案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Namesilo域名购买及解析使用方法</title>
    <link href="/2024/12/29/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E8%A7%A3%E6%9E%90%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2024/12/29/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E8%A7%A3%E6%9E%90%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Namesilo域名购买及解析使用方法"><a href="#Namesilo域名购买及解析使用方法" class="headerlink" title="Namesilo域名购买及解析使用方法"></a>Namesilo域名购买及解析使用方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文是 Namesilo 中文教程，详细介绍下 Namesilo 的优势和特点，以及从域名购买到域名解析使用的方法，和 Namesilo 优惠码。</p><h2 id="Namesilo-简介"><a href="#Namesilo-简介" class="headerlink" title="Namesilo 简介"></a>Namesilo 简介</h2><p><a href="https://www.namesilo.com/?rid=d27fa32do">Namesilo</a> 是 ICANN 认证的域名域名注册商之一，注册和转入都很方便，安全保护到位而且性价比很高。</p><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><p><strong>价格便宜稳定，无套路</strong></p><p>Namesilo 域名本身价格就比较便宜，COM 域名 $8.99&#x2F;year，除了一个一美元优惠码（优惠码 <code>okoff</code> 或者 <code>go2think</code>），基本没有其他大幅度促销活动，域名续费和首年购买价格一致。</p><p>套路指那些首年极其便宜，但次年续费很贵的。如 Godaddy，首年一美元，次年续费 102 元人民币，而且隐私保护还需要额外再加 60 元。</p><p><strong>永久免费的隐私保护</strong></p><p>Namesilo 提供永久免费的域名隐私保护，防止别人通过 WHOIS 查询获取域名所有者的个人注册信息。作为对比，Godaddy 的隐私保护是 60 元&#x2F;年，Namecheap 是免费提供第一年。</p><p><strong>安全性高</strong></p><p>支持账户登陆二次验证和 Domain Defender，保护账户和域名安全。登陆、解锁域名等，都可以设置邮件或短信提醒。</p><p><strong>支付方便</strong></p><p>支持支付宝、Paypal、信用卡等多种方式付款。</p><h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><p>网站风格比较 “传统”，英文页面，功能强大的同时也带来了很多的选项，对于不熟悉的新手可能不太好找。</p><p><strong>总结：</strong>个人体验和服务上，我觉得除了第一次使用时面板选项不太好找外，其它方面真的没啥黑点和问题，网上评价也很高，以后除了续费也不需要管太多。已经把域名全部迁移到这里了。</p><h2 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h2><p>进入 <a href="https://www.namesilo.com/?rid=d27fa32do">Namesilo</a> ，点击右上角头像注册账号。可以直接注册或者用指定方式尽心登录。</p><p><img src="/images/1229_01.png"></p><h2 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h2><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>激活账户并登陆，进入<a href="https://www.namesilo.com/?rid=d27fa32do">主页</a>，在搜索框中输入想要注册的域名，<strong>“SEARCH”</strong>。</p><p><img src="/images/1229_02.png"></p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>选择需要的域名后缀，点击蓝色购物车。</p><p><img src="/images/1229_03.png"></p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>确认订单，设置域名续费规则、注册时长、支付方式等。在 “Have a Coupon……” 处输入优惠码 <code>okoff</code> 或者 <code>go2think</code> ，点击 “Submit” 应用，优惠一美元。</p><p><strong>优惠码：</strong> <code>**okoff**</code> <strong>或者</strong> <code>**go2think**</code></p><p>（Namesilo 价格本来就很低了，只有这一个1美元优惠码，每个用户限用一次）</p><p>完成后点击 <strong>“CONTINUE”</strong> 进入下一步。</p><p><strong>其中：</strong></p><ul><li>NameServers：域名解析服务器设置，未确定的可以等稍后在后台设置也一样；</li><li>Auto-Renew：自动续费，如果决定长期使用，可以选择 Yes；</li><li>Privacy Setting：隐私保护，选择 “WHOIS Privacy”；</li><li>Set all years to：注册时长，如果是活动价格，则只能选择一年。</li></ul><p>付款。支持支付宝、Paypal 等。支付宝付款：在右侧输入框填写支付宝绑定的邮箱，点击 <strong>“GO”</strong> 跳转扫码界面支付。</p><p><img src="https://miro.medium.com/v2/resize:fit:953/0*_XEXk2Filrox6rYe" alt="img"></p><p><strong>完成！(๑•̀ㅂ•́)و✧</strong></p><h2 id="域名解析-设置DNS服务器"><a href="#域名解析-设置DNS服务器" class="headerlink" title="域名解析 &#x2F; 设置DNS服务器"></a>域名解析 &#x2F; 设置DNS服务器</h2><p><strong>域名解析，有NS和A记录两种方法。二选一，不要同时使用。</strong></p><p><strong>解析方式一、域名A记录解析IP</strong></p><p>1、访问 <a href="https://www.zhudc.com/go/namesilo">www.namesilo.com</a> ，登入Namesilo。</p><p>登陆后，会跳转到账户管理页面，点击My Account，然后点击左下角的Manage进入域名管理。</p><p><img src="/images/1229_04.png"></p><p>2、进入域名管理后显示的就是我们已经购买的域名，开始解析。</p><p><img src="/images/1229_05.png"></p><p>修改的域名后面，点击蓝色的球，开始修改A记录解析IP。</p><p><img src="https://www.zhudc.com/wp-content/uploads/2019/03/Namesilo%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B-3.png" alt="img"></p><p>进入 DNS 解析页面后，Namesilo默认有几条解析记录，先把这几条已存在的 解析记录都删除，清空。（<strong>删除不掉，有提示，没关系，多点几次就能删除</strong>）</p><p><img src="/images/1229_06.png"></p><p>删除默认解析后，点击上方的 Add&#x2F;Edit a Resource Record 里的 A，开始添加解析A记录。</p><p><img src="https://www.zhudc.com/wp-content/uploads/2019/03/Namesilo%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B-5.png" alt="img"></p><p><strong>说明：</strong></p><p>点击A之后会出来填写框。如上图。我们要创建两个 A 记录。一个是主域名的解析，一个是 www 域名的解析。</p><p>第一个 Hostname 留空，并在 IPV4 ADDRESS 那里输入服务器 IP地址，点击 SUBMIT。</p><p>第二个在Hostname 处填写 www，并在 IPV4 ADDRESS 那里输入服务器 IP地址 ，点击 SUBMIT。</p><p><strong>设置后就是以下的效果。</strong></p><p><img src="https://www.zhudc.com/wp-content/uploads/2019/03/Namesilo%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B-6.png" alt="img"></p><p>如果你要添加其他的记录，可以在点击上面相应的记录选项进行设置即可，比如企业邮箱解析。</p><p>做完上面的设置，对域名的解析就算完成了。</p><p><strong>注：解析生效的时间大概在半个小时左右，我们可以通过ping IP的方式查看域名解析是否生效。或者使用dns网址查询：<a href="https://www.whatsmydns.net/">www.whatsmydns.net</a>，如果域名A记录指向了我们设置的ip地址，解析成功。</strong></p><p><strong>如果长时间解析不成功，重新确认设置是否正确。</strong></p><p><img src="/images/1229_07.png"></p>]]></content>
    
    
    <categories>
      
      <category>解决方案</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决方案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大多数人的两种职业形态</title>
    <link href="/2024/12/24/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E8%81%8C%E4%B8%9A%E5%BD%A2%E6%80%81/"/>
    <url>/2024/12/24/%E5%A4%A7%E5%A4%9A%E6%95%B0%E4%BA%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E8%81%8C%E4%B8%9A%E5%BD%A2%E6%80%81/</url>
    
    <content type="html"><![CDATA[<h1 id="大多数人的两种职业形态"><a href="#大多数人的两种职业形态" class="headerlink" title="大多数人的两种职业形态"></a>大多数人的两种职业形态</h1><p>其实大多数的大学生，在毕业后十几年后，都会进入死胡同，这种殊途同归式的悲伤，才是引起很多读者上午唏嘘的原因。</p><p>咱们来想想看，若无背景，亦无天赋，也无奇遇的情况下，9成以上的普通大学生，毕业之后，你都会面对一个岔路口。</p><p><font color="red">这个岔路的左手边指向业务，右手边指向实现</font>。</p><p>不管你是什么行业的，你仔细想想看，是不是都是这么划分的？</p><p><font color="red">业务就是直面客户的</font>。</p><p>客户无论是要什么需求，要什么功能，要什么产品，形形色色最后都可以看作一类。</p><p>反正你是面向客户的，你的考核也是直接围绕客户的。</p><p><font color="red">实现就是躲在后面，不直面客户，而是面向自己内部的同事</font>。</p><p>简单说，任何组织最后都能分成AB两组，<strong>A负责对接，B负责干活</strong>。</p><p>不会合并的，能合并就说明组织结构不大，没啥雇人的需要。</p><p>比如一个烧饼铺的老板，他既负责接待客户，也负责烙饼，那这不是组织，这是个体户。</p><p>稍微大一点点，哪怕到了夫妻店的组织结构，都是老板娘在前面接待客人，老板在后面颠勺炒菜。</p><p>大学生一毕业，遇到这个岔路口，你要么往左，要么往右。</p><p>如果你选择了业务。你最终的局面一定是做不完，真的做不完。</p><p>你会发现客人给你的需求永远都是拍脑袋的，永远都是拎不清的，他想象了一个东西，很美好，他要一个迪拜宫殿。</p><p>然后他们家面积多少呢？80平。</p><p>装修预算多少呢？10万。</p><p>这就叫客人，他没有概念的。</p><p>他只是想要好，钱花得值，但他对于接下来要做的事情一无所知。</p><p>无论他提什么需求，你都接，那么接下来就是越来越奇葩的要求，比如五彩斑斓的黑，漆黑一片的亮…….</p><p>反过来，<font color="red">如果他提什么需求，你都挡，那么接下来就是你失去这个客人，他被别的公司的业务部门的人，给招揽了去</font>。</p><p>这是对外，两难。</p><p>对内也是两难。</p><p><strong>作为业务部门，客人提什么要求，你都一律转交实现部门，结局就是老板认为你没有存在的必要</strong>。</p><p>因为既然需求100%通过你，那要你干嘛？你不起<strong>过滤器</strong>的作用呀，开掉你还能节省成本。</p><p>反之，如果客人的要求不能通过你转换成对实现部门的工作要求，老板同样认为你没有存在的必要。</p><p>因为你无法驱动实现部门的工作，而且你也留不住客人呀。</p><p>我们转过身来，<font color="red">再来看那些当初选择了实现部门的同学们,他们的工作特点在于不知道自己到底在干嘛</font>。</p><p>这个东西是我实现的没错，但我不直面市场，我得到的所有的指令，都是经过了业务部门过滤的。</p><p>客户的要求也许是珍珠翡翠白玉汤，但是我得到的来自内部业务部门的命令是豆腐菠菜熬成汤。</p><p><strong>这份豆腐菠菜汤端出去之后，它到底在商业环境中，是为了满足什么需求，起到什么作用，有什么价值，他们都是瞒着我的</strong>。</p><p><strong>那么假如我任由他们长期蒙着我的眼睛，我就会陷入一个尴尬的局面。首先，我很紧张，我不确定自己到底有没有商业价值。因为我的价值评判并不直接来自市场，我的价值是被内部打分，内部评判的。于是为了讨好内部的这些打分者，我就不得不996，甚至007的今天去熬制菠菜汤，明天去炖豆腐丸子</strong>。</p><p>可我会老的呀。</p><p>长江后浪推前浪，前浪死在沙滩上，总有更年轻的小伙子会凌晨一两点还不离开后厨，就为了年底打分不要被打个3.25。</p><p>其次，在你们这家公司里面，被你们这帮业务部门的人翻译成了豆腐菠菜，在别的公司里，也许不这么翻译的。</p><p>我熬了十年的豆腐菠菜，在别的公司眼里，也许人家不这么熬，那我的工作积累呢？我跳槽之后的价值评估呢？</p><p>我辛辛苦苦给你干，最后我自己能积累什么，<strong>能在脱离这家公司以外的地方，得到怎样的价值认可呢？</strong></p><p>十个大学生，九个最后都会走进死胡同，无非是走进业务部门的死胡同，还是走进实现部门的死胡同。</p><p>终归都是死胡同。</p><p><strong>上班这件事听起来很简单，但实际上，你由着对方玩你自己，你最后不会有结果的</strong>。</p><p>老谋子的《大红灯笼高高挂》看过的吧？</p><p>无论业务部门还是实现部门，基层就如同剧中的丫鬟，管理层就如同剧中的姨太太。<strong>你要是不经思考的参与这个游戏，指望随波逐流的在大宅门里活下去，那是痴心妄想。你最后都会被那个老爷，给玩死的</strong>。</p><p>也有些人不知道是受到什么肥皂剧的影响，误以为黑化就可以升天，丫鬟就可以上位做姨太太了。</p><p>好不容易逮住一个跟大老板说话的机会，也不顾场合，也不知道对方到底在思考什么，他就自顾自的嘚啵。一股脑的输出，趋红踩黑，各种浮夸，完了之后还洋洋得意，觉得自己终于抓住了表现机会。</p><p>实际上呢？老板私下批示：建议此人送精神病院…….这样用力过猛的可怜虫，我见过太多了。</p><p>说到底，无论是擅于谋事，拙于谋身的老实人，还是以为黑化万能的又蠢又坏的可怜虫。</p><p>问题的本质就一个，你压根儿没弄清游戏在玩啥。<font color="red">这个游戏，重点根本就不在于丫鬟和姨太太，重点在于视角。你上来就是平面视角，你已经输了，各个宅门的墙，挡住了你的视线</font>。</p>]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>认知</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓APP-HTTPS抓包Frida Hook教程</title>
    <link href="/2024/12/23/%E5%AE%89%E5%8D%93APP-HTTPS%E6%8A%93%E5%8C%85Frida%20Hook%E6%95%99%E7%A8%8B/"/>
    <url>/2024/12/23/%E5%AE%89%E5%8D%93APP-HTTPS%E6%8A%93%E5%8C%85Frida%20Hook%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="安卓APP-HTTPS抓包Frida-Hook教程"><a href="#安卓APP-HTTPS抓包Frida-Hook教程" class="headerlink" title="安卓APP-HTTPS抓包Frida Hook教程"></a>安卓APP-HTTPS抓包Frida Hook教程</h1><h2 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h2><ul><li>windows 11</li><li>bluestacks 5.11.56.1003 p64</li><li>adb 31.0.2</li><li>Root Checker 6.5.3</li><li>wireshark 4.0.5</li><li>frida 16.5.9</li><li>jadx-gui 1.4.7</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="bluestacks-环境搭建"><a href="#bluestacks-环境搭建" class="headerlink" title="bluestacks 环境搭建"></a>bluestacks 环境搭建</h3><p>目前Android模拟器竞品很多，选择Bluestacks <strong>5</strong>是因为它能和windows的hyper-v完美兼容，root过程也相对简单。</p><p>下载地址：<a href="https://www.bluestacks.com/download.html">https://www.bluestacks.com/download.html</a></p><p><strong>首先需要root Bluestacks环境</strong>。</p><ol><li><p>下载安装Bluestacks。</p></li><li><p>运行Bluestacks Multi-instance Manager，发现默认安装的版本为Android Pie 64bit版本，即Android 9.0。此时退出bluestack所有程序。</p><p><img src="/images/1223_01.jpg"></p></li><li><p>关闭bluestack后编辑bluestacks配置文件， <code>%programdata%\BlueStacks_nxt\bluestacks.conf</code></p><p><img src="/images/1223_02.jpg"></p></li><li><p>在配置文件中查找root关键词，对应值修改为1，共两处。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">bst.feature.rooting</span>=<span class="hljs-string">&quot;1&quot;</span><br><span class="hljs-attr">bst.instance.Pie64.enable_root_access</span>=<span class="hljs-string">&quot;1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/images/1223_03.jpg"></p></li><li><p>启动bluestack模拟器，安装 <code>Root Checker</code> APP，点击验证root，即可发现root已成功。</p><p><img src="/images/1223_04.jpg"></p></li></ol><p><strong>打开 adb调试</strong></p><p>1.bluestack设置-高级中打开Adb调试，并记录下端口</p><p><img src="/images/1223_05.jpg"></p><p>2.打开主机命令行，运行 <code>adb connect localhost:6652</code>，端口号修改为上一步的端口号，即可连接。再运行<code>adb devices</code>，如有对应设备则连接成功。</p><p>3.进入<code>adb shell</code>，执行su进入root权限，命令行标识由<code>$</code>变为<code>#</code>，即表示adb 进入root权限成功。</p><p><img src="/images/1223_06.jpg"></p><h3 id="frida环境搭建"><a href="#frida环境搭建" class="headerlink" title="frida环境搭建"></a>frida环境搭建</h3><p>frida是大名鼎鼎的动态分析的hook神器，用它可以直接访问修改二进制的内存、函数和对象，非常方便。它对于Android的支持也是很完美。</p><p>frida的运行采用C&#x2F;S架构，客户端为电脑端的开发环境，服务器端为Android，均需对应部署搭建。</p><p><strong>客户端环境搭建(Windows)</strong></p><p>firda客户端基于python3开发，因此首先需要配置好python3的运行环境，然后执行 <code>pip install frida-tools</code>即可完成安装。运行 <code>frida --version</code>可验证frida版本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">(py3) PS E:\TEMP\damai&gt; frida --version<br><br><span class="hljs-number">16.5</span><span class="hljs-number">.9</span><br></code></pre></td></tr></table></figure><p><strong>服务器 环境搭建(Android)</strong></p><p>环境搭建第二步是在Android模拟器中运行frida-server。这样可以让Frida通过ADB&#x2F;USB调试与我们的Android模拟器连接。</p><p>1.下载frida-server<br>最新的frida-server可以从 <a href="https://github.com/frida/frida/releases">https://github.com/frida/frida/releases</a> 下载。请注意下载与设备匹配的架构。如果您的模拟器是x86_64，请下载相应版本的frida-server。本文使用的版本为 frida-server-16.5.9-android-x86_64.xz</p><p><img src="/images/1223_07.jpg"></p><p>2.传入Android模拟器。</p><p>将下载后的.xz文件解压重新命名为<code>frida-server</code>，将<code>frida-server</code>传入Android模拟器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb push frida-server /data/local/tmp/<br></code></pre></td></tr></table></figure><p>3.运行 frida-server</p><p>使用adb root以root模式重新启动ADB，并通过adb shell重新进入shell的访问。进入shell后，进入我们放置frida-server的目录并为其授予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /data/local/tmp/frida-server<br><span class="hljs-built_in">chmod</span> +x frida-server-16.5.9-android-x86_64<br></code></pre></td></tr></table></figure><p>执行：<code>./frida-server-16.5.9-android-x86_64</code>，运行frida-server，并保持本shell窗口开启。</p><p>4.测试是否连接成功</p><p>在window端运行frida-ps命令</p><p><img src="/images/1223_08.jpg"></p><p>看到一堆熟悉的Android进程，表示连接成功。</p><p>5.转发frida-server端口 (可选)</p><p>frida-server跑在Android端，frida需要通过连接frida-server。上一步使用adb的方式连接，frida认为是USB模式，需要<code>-U</code>命令。frida也支持依赖端口的远程连接模式，在某些场景下更加灵活。可以通过端口转发的方式实现此功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb forward tcp:27042 tcp:27042<br>adb forward tcp:27043 tcp:27043<br></code></pre></td></tr></table></figure><p>27042是用于与frida-server通信的默认端口号,之后的每个端口对应每个注入的进程，检查27042端口可检测 Frida 是否存在。</p><h2 id="抓包流程"><a href="#抓包流程" class="headerlink" title="抓包流程"></a>抓包流程</h2><p>本章节将介绍用tcpdump+frida+wireshark实现Android的全流量抓包，能实现https解密。</p><p>惯用的Android抓包手段是用fiddler&#x2F;burpsuite&#x2F;mitmproxy搭建代理服务器，设置Android代理服务器并用中间人劫持的方式获取http协议流量的内容，上述的抓包方式只能抓到http协议层以上的流量，这次我们来点不一样的，用tcpdump+frida+wireshark实现Android的全流量抓包，能实现https解密。</p><h3 id="抓包及https解密方法"><a href="#抓包及https解密方法" class="headerlink" title="抓包及https解密方法"></a>抓包及https解密方法</h3><p><strong>1. 搞定tcpdump</strong></p><p>本文基于termux安装使用tcpdump，首先安装termux apk。打开termux运行</p><p>下载地址：<a href="https://f-droid.org/en/packages/com.termux/">https://f-droid.org/en/packages/com.termux/</a></p><ul><li><p>挂载存储</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">termux-setup-storage<br><span class="hljs-comment">## 会弹出授权框，点允许</span><br><span class="hljs-built_in">ls</span> ~/storage/<br><span class="hljs-comment">## 如果出现dcim, downloads等目录，即表示成功</span><br></code></pre></td></tr></table></figure><ul><li><p>安装tcpdump</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install root-repo<br>pkg install <span class="hljs-built_in">sudo</span> tcpdump<br></code></pre></td></tr></table></figure></li></ul></li><li><p>运行抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> tcpdump -i any -s 0 -w ~/storage/downloads/capture.pcap<br></code></pre></td></tr></table></figure></li><li><p>tcpdump 成功截图</p><p><img src="/images/1223_09.jpg"></p></li></ul><p>之后就可以把downloads目录下的抓包文件拷贝到电脑上，用wireshark打开做进一步分析。</p><p><strong>2. 解密https流量</strong></p><p>wireshark解密技术的重点在于拿到客户端通信的密钥日志文件(ssl key log)，像下面这种：</p><p><img src="/images/1223_10.jpg"></p><p>在Android中实现抓取ssl key log需要hook系统的SSL相关函数，可以用frida实现。</p><ul><li><p>首先将下面的hook代码保存为<code>sslkeyfilelog.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// sslkeyfilelog.js</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">startTLSKeyLogger</span>(<span class="hljs-params">SSL_CTX_new, SSL_CTX_set_keylog_callback</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;start----&quot;</span>)<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">keyLogger</span>(<span class="hljs-params">ssl, line</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NativePointer</span>(line).<span class="hljs-title function_">readCString</span>());<br>    &#125;<br>    <span class="hljs-keyword">const</span> keyLogCallback = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(keyLogger, <span class="hljs-string">&#x27;void&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]);<br> <br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(SSL_CTX_new, &#123;<br>        <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">retval</span>) &#123;<br>            <span class="hljs-keyword">const</span> ssl = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativePointer</span>(retval);<br>            <span class="hljs-keyword">const</span> SSL_CTX_set_keylog_callbackFn = <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(SSL_CTX_set_keylog_callback, <span class="hljs-string">&#x27;void&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>]);<br>            <span class="hljs-title function_">SSL_CTX_set_keylog_callbackFn</span>(ssl, keyLogCallback);<br>        &#125;<br>    &#125;);<br>&#125;<br><span class="hljs-title function_">startTLSKeyLogger</span>(<br>    <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&#x27;libssl.so&#x27;</span>, <span class="hljs-string">&#x27;SSL_CTX_new&#x27;</span>),<br>    <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&#x27;libssl.so&#x27;</span>, <span class="hljs-string">&#x27;SSL_CTX_set_keylog_callback&#x27;</span>)<br></code></pre></td></tr></table></figure></li><li><p>然后用frida加载运行hook</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">frida -U -l .\sslkeyfilelog.js  -f 包名<br></code></pre></td></tr></table></figure><p><img src="/images/1223_11.jpg"></p></li><li><p>在运行Frida Hook获取sslkey的同时，运行tcpdump抓包.开始在模拟器端执行各种APP中的操作，例如登录、搜索等，这些数据包都会被抓取，<font color="red">操作完毕后，在adb shell中按Ctrl c关闭tcpdump抓包</font>.最后，抓包结束后将得到的key保存到sslkey.txt，格式是下面这样的，不要掺杂别的。把抓到的capture.pcap导出来</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">CLIENT_RANDOM 557e6dc49faec93dddd41d8c55d3a0084c44031f14d66f68e3b7fb53d3f9586d 886de4677511305bfeaee5ffb072652cbfba626af1465d09dc1f29103fd947c997f6f28962189ee809944887413d8a20<br>CLIENT_RANDOM e66fb5d6735f0b803426fa88c3692e8b9a1f4dca37956187b22de11f1797e875 65a07797c144ecc86026a44bbc85b5c57873218ce5684dc22d4d4ee9b754eb1961a0789e2086601f5b0441c35d76c448<br></code></pre></td></tr></table></figure><p><img src="/images/1223_12.jpg"></p><p><img src="/images/1223_13.jpg"></p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><p>wireshark下载地址：<a href="https://www.wireshark.org/download.html">https://www.wireshark.org/download.html</a></p><p>抓包完成后，用wireshark打开tcpdump抓包获得的pcap文件，在wireshark首选项-protocols-TLS中，设置 (Pre)-Master-Secret log filename为上述sslkey.txt。</p><p><img src="/images/1223_14.jpg"></p><p>即可实现https流量的解密。</p><p>在上述步骤中拿到了解密后的流量，我们就能对XX的流量做进一步分析了。可以看到大量向服务器请求的数据包，但其中有很多干扰的图片请求，因为修改过滤器把图片过滤一下。过滤器：<code>http &amp;&amp; tcp.dstport==443 and !(http.request.uri contains &quot;.webp&quot; or http.request.uri contains &quot;.jpg&quot; or http.request.uri contains &quot;.png&quot;)</code></p><p>结果清爽了很多。</p><p><img src="/images/1223_15.jpg"></p><h2 id="查看包名"><a href="#查看包名" class="headerlink" title="查看包名"></a>查看包名</h2><p>1、查看将要启动或退出app的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell am monitor（只有在启动或退出的时候才会打印）<br></code></pre></td></tr></table></figure><p>2、查看安装的第三方app的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell pm list packages -3<br></code></pre></td></tr></table></figure><p>3、查看当前界面的app的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell dumpsys window windows | findstr mFocusedApp<br></code></pre></td></tr></table></figure><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p><p>4、查看启动的app的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell dumpsys activity top | find <span class="hljs-string">&quot;ACTIVITY&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p><p>5、查看所有启动的应用的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell dumpsys activity activities | findstr <span class="hljs-string">&quot;Run&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p><p>6、查看当前启动应用的包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell dumpsys window w |findstr \/ |findstr name=<br></code></pre></td></tr></table></figure><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p><p>7、通过应用查看包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aapt dump badging D:\<span class="hljs-built_in">test</span>\xxx.apk(APK的全名)<br></code></pre></td></tr></table></figure><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p><p>（aapt不是可运行命令的话，需要配置环境）</p><p><img src="https://ahui.blog/wp-content/uploads/2024/10/post-540-670177c858f0e." alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>解决方案</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抓包</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>什么是大模型？一文读懂大模型的基本概念</title>
    <link href="/2024/12/18/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/2024/12/18/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是大模型？一文读懂大模型的基本概念"><a href="#什么是大模型？一文读懂大模型的基本概念" class="headerlink" title="什么是大模型？一文读懂大模型的基本概念"></a>什么是大模型？一文读懂大模型的基本概念</h1><p>大模型是指具有大规模参数和复杂计算结构的机器学习模型。本文从大模型的基本概念出发，对大模型领域容易混淆的相关概念进行区分，并就大模型的发展历程、特点和分类、泛化与微调进行了详细解读，供大家在了解大模型基本知识的过程中起到一定参考作用。</p><p>本文目录如下：</p><ul><li>大模型的定义</li><li>大模型相关概念区分</li><li>大模型的发展历程</li><li>大模型的特点</li><li>大模型的分类</li><li>大模型的泛化与微调</li></ul><h2 id="1-大模型的定义"><a href="#1-大模型的定义" class="headerlink" title="1.大模型的定义"></a>1.大模型的定义</h2><p><strong>大模型是指具有大规模参数和复杂计算结构的机器学习模型。</strong>这些模型通常由<strong>深度神经网络</strong>构建而成，拥有数十亿甚至数千亿个参数。大模型的设计目的是为了提高模型的表达能力和预测性能，能够处理更加复杂的任务和数据。大模型在各种领域都有广泛的应用，包括<strong>自然语言处理</strong>、<strong>计算机视觉</strong>、<strong>语音识别</strong>和<strong>推荐系统</strong>等。大模型通过训练海量数据来学习复杂的模式和特征，具有更强大的泛化能力，可以对未见过的数据做出准确的预测。</p><p>ChatGPT 对大模型的解释更为通俗易懂，也更体现出类似人类的归纳和思考能力：大模型本质上是一个使用海量数据训练而成的<strong>深度神经网络模型</strong>，其巨大的数据和参数规模，实现了智能的涌现，展现出类似人类的智能。</p><p><strong>那么，大模型和小模型有什么区别？</strong></p><p>小模型通常指参数较少、层数较浅的模型，它们具有轻量级、高效率、易于部署等优点，适用于数据量较小、计算资源有限的场景，例如移动端应用、嵌入式设备、物联网等。</p><p>而当模型的训练数据和参数不断扩大，直到达到一定的临界规模后，其表现出了一些未能预测的、更复杂的能力和特性，模型能够从原始训练数据中自动学习并发现新的、更高层次的特征和模式，这种能力被称为<strong>涌现能力</strong>。而具备涌现能力的机器学习模型就被认为是独立意义上的大模型，这也是其和小模型最大意义上的区别。</p><p>相比小模型，大模型通常参数较多、层数较深，具有更强的表达能力和更高的准确度，但也需要更多的计算资源和时间来训练和推理，适用于数据量较大、计算资源充足的场景，例如云端计算、高性能计算、人工智能等。</p><h2 id="2-大模型相关概念区分"><a href="#2-大模型相关概念区分" class="headerlink" title="2. 大模型相关概念区分"></a><strong>2.</strong> 大模型相关概念区分</h2><p><strong>大模型（Large Model,也称基础模型，即 Foundation Model），</strong>是指具有大量参数和复杂结构的机器学习模型，能够处理海量数据、完成各种复杂的任务，如自然语言处理、计算机视觉、语音识别等。</p><p><strong>超大模型：</strong>超大模型是大模型的一个子集，它们的参数量远超过大模型。</p><p><strong>大语言模型(Large Language Model）：</strong>通常是具有大规模参数和计算能力的<font color="red">自然语言处理模型</font>，例如 OpenAI 的 GPT-3 模型。这些模型可以通过大量的数据和参数进行训练，以生成人类类似的文本或回答自然语言的问题。大型语言模型在自然语言处理、文本生成和智能对话等领域有广泛应用。</p><p><strong>GPT（Generative Pre-trained Transformer）：</strong><font color="red">GPT 和 ChatGPT 都是基于 Transformer 架构的语言模型</font>，但它们在设计和应用上存在区别：GPT 模型旨在生成自然语言文本并处理各种自然语言处理任务，如文本生成、翻译、摘要等。它通常在单向生成的情况下使用，即根据给定的文本生成连贯的输出。</p><p><strong>ChatGPT：</strong>ChatGPT 则专注于对话和交互式对话。它经过特定的训练，以更好地处理多轮对话和上下文理解。ChatGPT 设计用于提供流畅、连贯和有趣的对话体验，以响应用户的输入并生成合适的回复。</p><h2 id="3-大模型的发展历程"><a href="#3-大模型的发展历程" class="headerlink" title="3.大模型的发展历程"></a>3.大模型的发展历程</h2><p><img src="/images/1218_01.png"></p><p><strong>萌芽期（1950-2005）：以 CNN 为代表的传统神经网络模型阶段</strong></p><p><strong>·</strong> 1956 年，从计算机专家约翰·麦卡锡提出“人工智能”概念开始，AI 发展由最开始基于小规模专家知识逐步发展为基于机器学习。</p><p><strong>·</strong> 1980 年，卷积神经网络的雏形 CNN 诞生。</p><p><strong>·</strong> 1998 年，现代卷积神经网络的基本结构 LeNet-5 诞生，机器学习方法由早期基于浅层机器学习的模型，变为了基于深度学习的模型,为自然语言生成、计算机视觉等领域的深入研究奠定了基础，对后续深度学习框架的迭代及大模型发展具有开创性的意义。</p><p><strong>探索沉淀期（2006-2019）：以 Transformer 为代表的全新神经网络模型阶段</strong></p><p><strong>·</strong> 2013 年，自然语言处理模型Word2Vec 诞生，首次提出将单词转换为向量的“词向量模型”，以便计算机更好地理解和处理文本数据。</p><p><strong>·</strong> 2014 年，被誉为 21 世纪最强大算法模型之一的 GAN（对抗式生成网络）诞生，标志着深度学习进入了生成模型研究的新阶段。</p><p><strong>·</strong> 2017 年，Google 颠覆性地提出了基于自注意力机的神经网络结构——Transformer 架构，奠定了大模型预训练算法架构的基础。</p><p><strong>·</strong> 2018 年，OpenAI 和 Google 分别发布了 GPT-1 与 BERT 大模型，意味着预训练大模型成为自然语言处理领域的主流。在探索期，以 Transformer 为代表的全新神经网络架构，奠定了大模型的算法架构基础，使大模型技术的性能得到了显著提升。</p><p><strong>迅猛发展期（2020-至今）：以 GPT 为代表的预训练大模型阶段</strong></p><p><strong>·</strong> 2020 年，OpenAI 公司推出了GPT-3，模型参数规模达到了 1750 亿，成为当时最大的语言模型，并且在零样本学习任务上实现了巨大性能提升。随后，更多策略如基于人类反馈的强化学习（RHLF）、代码预训练、指令微调等开始出现, 被用于进一步提高推理能力和任务泛化。</p><p><strong>·</strong> 2022 年 11 月，搭载了GPT3.5的 ChatGPT横空出世，凭借逼真的自然语言交互与多场景内容生成能力，迅速引爆互联网。</p><p><strong>·</strong> 2023 年 3 月，最新发布的超大规模多模态预训练大模型——GPT-4，具备了多模态理解与多类型内容生成能力。在迅猛发展期，大数据、大算力和大算法完美结合，大幅提升了大模型的预训练和生成能力以及多模态多场景应用能力。如 ChatGPT 的巨大成功,就是在微软Azure强大的算力以及 wiki 等海量数据支持下，在 Transformer 架构基础上，坚持 GPT 模型及人类反馈的强化学习（RLHF）进行精调的策略下取得的。</p><h2 id="4-大模型的特点"><a href="#4-大模型的特点" class="headerlink" title="4.大模型的特点"></a>4.大模型的特点</h2><p><strong>· 巨大的规模:</strong> 大模型包含数十亿个参数，模型大小可以达到数百 GB 甚至更大。巨大的模型规模使大模型具有强大的表达能力和学习能力。</p><p><strong>· 涌现能力：</strong>涌现（英语：emergence）或称创发、突现、呈展、演生，是一种现象，为许多小实体相互作用后产生了大实体，而这个大实体展现了组成它的小实体所不具有的特性。引申到模型层面，涌现能力指的是当模型的训练数据突破一定规模，模型突然涌现出之前小模型所没有的、意料之外的、能够综合分析和解决更深层次问题的复杂能力和特性，展现出类似人类的思维和智能。<strong>涌现能力也是大模型最显著的特点之一。</strong></p><p><strong>· 更好的性能和泛化能力：</strong> 大模型通常具有更强大的学习能力和泛化能力，能够在各种任务上表现出色，包括自然语言处理、图像识别、语音识别等。</p><p><strong>· 多任务学习:</strong> 大模型通常会一起学习多种不同的 NLP 任务,如机器翻译、文本摘要、问答系统等。这可以使模型学习到更广泛和泛化的语言理解能力。</p><p><strong>· 大数据训练</strong>: 大模型需要海量的数据来训练,通常在 TB 以上甚至 PB 级别的数据集。只有大量的数据才能发挥大模型的参数规模优势。</p><p><strong>· 强大的计算资源</strong>: 训练大模型通常需要数百甚至上千个 GPU,以及大量的时间,通常在几周到几个月。</p><p><strong>· 迁移学习和预训练</strong>： 大模型可以通过在大规模数据上进行预训练，然后在特定任务上进行微调，从而提高模型在新任务上的性能。</p><p><strong>· 自监督学习</strong>： 大模型可以通过自监督学习在大规模未标记数据上进行训练，从而减少对标记数据的依赖，提高模型的效能。</p><p><strong>·领域知识融合</strong>： 大模型可以从多个领域的数据中学习知识，并在不同领域中进行应用，促进跨领域的创新。</p><p><strong>· 自动化和效率</strong>：大模型可以自动化许多复杂的任务，提高工作效率，如自动编程、自动翻译、自动摘要等。</p><h2 id="5-大模型的分类"><a href="#5-大模型的分类" class="headerlink" title="5.大模型的分类"></a>5.<strong>大模型的分类</strong></h2><p>按照输入数据类型的不同，大模型主要可以分为以下三大类：</p><p><strong>语言大模型(NLP）</strong>：是指在自然语言处理（Natural Language Processing，NLP）领域中的一类大模型，通常用于处理文本数据和理解自然语言。这类大模型的主要特点是它们在大规模语料库上进行了训练，以学习自然语言的各种语法、语义和语境规则。例如：GPT 系列（OpenAI）、文心一言(百度)、混元大模型(腾讯)、千寻(阿里)</p><p>**视觉大模型(CV)**：是指在计算机视觉（Computer Vision，CV）领域中使用的大模型，通常用于图像处理和分析。这类模型通过在大规模图像数据上进行训练，可以实现各种视觉任务，如图像分类、目标检测、图像分割、姿态估计、人脸识别等。例如：VIT 系列（Google）、文心UFO、华为盘古 CV、INTERN（商汤）。</p><p><strong>· 多模态大模型：</strong>是指能够处理多种不同类型数据的大模型，例如文本、图像、音频等多模态数据。这类模型结合了 NLP 和 CV 的能力，以实现对多模态信息的综合理解和分析，从而能够更全面地理解和处理复杂的数据。例如：DingoDB 多模向量数据库（九章云极 DataCanvas）、DALL-E(OpenAI)、悟空画画（华为）、midjourney。</p><p>按照应用领域的不同，大模型主要可以分为 L0、L1、L2 三个层级：</p><p><strong>· 通用大模型 L0</strong>：是指可以在多个领域和任务上通用的大模型。它们利用大算力、使用海量的开放数据与具有巨量参数的深度学习算法，在大规模无标注数据上进行训练，以寻找特征并发现规律，进而形成可“举一反三”的强大泛化能力，可在不进行微调或少量微调的情况下完成多场景任务，相当于 AI 完成了“通识教育”。</p><p><strong>· 行业大模型 L1</strong>：是指那些针对特定行业或领域的大模型。它们<font color="red">通常使用行业相关的数据进行预训练或微调，以提高在该领域的性能和准确度，相当于 AI 成为“行业专家”</font>。</p><p><strong>· 垂直大模型 L2</strong>：是指那些针对特<strong>定任务或场景</strong>的大模型。它们通常使用任务相关的数据进行预训练或微调，以提高在该任务上的性能和效果。</p><h2 id="6-大模型的泛化与微调"><a href="#6-大模型的泛化与微调" class="headerlink" title="6.大模型的泛化与微调"></a>6.大模型的泛化与微调</h2><p><strong>模型的泛化能力：</strong>是指一个模型在面对新的、未见过的数据时，能够正确理解和预测这些数据的能力。在机器学习和人工智能领域，模型的泛化能力是评估模型性能的重要指标之一。</p><p><strong>什么是模型微调：</strong>给定<strong>预训练模型</strong>（Pre-trained model），基于模型进行微调（Fine Tune）。相对于从头开始训练(Training a model from scatch)，微调可以省去大量计算资源和计算时间，提高计算效率,甚至提高准确率。</p><p>模型微调的基本思想是使用少量带标签的数据对预训练模型进行再次训练，以适应特定任务。在这个过程中，模型的参数会根据新的数据分布进行调整。这种方法的好处在于，它利用了预训练模型的强大能力，同时还能够适应新的数据分布。因此，模型微调能够提高模型的泛化能力，减少过拟合现象。</p><p>常见的模型微调方法：</p><p><strong>·</strong> Fine-tuning：这是最常用的微调方法。通过在预训练模型的最后一层添加一个新的分类层，然后根据新的数据集进行微调。</p><p><strong>·</strong> Feature augmentation：这种方法通过向数据中添加一些人工特征来增强模型的性能。这些特征可以是手工设计的，也可以是通过自动特征生成技术生成的。</p><p><strong>·</strong> Transfer learning：这种方法是使用在一个任务上训练过的模型作为新任务的起点，然后对模型的参数进行微调，以适应新的任务。</p><p>大模型是未来人工智能发展的重要方向和核心技术，未来，随着 AI 技术的不断进步和应用场景的不断拓展，大模型将在更多领域展现其巨大的潜力，为人类万花筒般的 AI 未来拓展无限可能性。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础概念</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PUA、雌竞与内卷圣骑士</title>
    <link href="/2024/12/12/PUA%E3%80%81%E9%9B%8C%E7%AB%9E%E4%B8%8E%E5%86%85%E5%8D%B7%E5%9C%A3%E9%AA%91%E5%A3%AB/"/>
    <url>/2024/12/12/PUA%E3%80%81%E9%9B%8C%E7%AB%9E%E4%B8%8E%E5%86%85%E5%8D%B7%E5%9C%A3%E9%AA%91%E5%A3%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="PUA、雌竞与内卷圣骑士"><a href="#PUA、雌竞与内卷圣骑士" class="headerlink" title="PUA、雌竞与内卷圣骑士"></a>PUA、雌竞与内卷圣骑士</h1><p>这两天有不少人开始认真讨论胖猫事件里的PUA，爱自己等问题了，我不老生常谈，我从经济角度说一个更实际的问题。</p><p>你们有没有思考过，其实<strong>国内PUA市场的崛起，是有经济上的必然性的</strong></p><p>某种意义上，PUA和雌竞是一体两面。</p><p>在论述之前，我想先用最直接的表述让大家理解一件事情，理解一个大的时代背景。那就是中国男性，是当前世界上最强的996内卷超人，强到什么地步呢？</p><p>小清新圣地日韩，电子产业几年被打爆，老贵族代表欧洲，一波卷穿。</p><p>哪怕许多人眼里的天选之地美国，也就剩下金融媒体高科技领域，其他的制造业重工业都被卷穿。从纯生产力角度来说简直所向披靡。</p><p>这个现象的背后又是一个现实，那就是<font color="red">中国男性整体是往清教徒圣骑士的方向去塑造的</font>。</p><p><strong>从小就被教育不能哭闹不能叫苦不能暴露脆弱，工作后被教育要努力要奋斗要拼搏，哪怕赚不到钱也要先质问反思自己，感情上被教育不能和女生吵架，要大度不能鸡毛蒜皮。社会对于成功男性的形象是往刚毅，冷静，如沉默的山岳一般去塑造。如果觉得不够直观，你可以去看看各个影视剧里对领导们的刻画，这是最直接体现预期目标形象的。</strong></p><p>少先队，青年团，“时刻准备着！”都源自这里,许多人说的东亚压抑，也源自这里，如果你将这套系统理解为准军事动员体系，很多问题就瞬间理解了。</p><p>为什么会有这个塑造？因为历史原因，对于当年的中国来说，刚刚结束百年来的民族苦难，建国后又面临美苏威胁，时刻准备再来一场世界大战总动员，当然会下意识的把全民都往圣骑士的方向塑造。后面历经改开市场经济，开启了工业利维坦和大基建的扩张，又是极度强调纪律性的。</p><p><font color="red">所以最终展现在你面前的，就是情绪上自我压抑，表达上沉默如金，没有感情不知疲倦的一群996内卷圣骑士</font>。</p><p>当前舆论场对中国男性的一切吐槽，什么直男思维，不懂情绪无法提供情绪价值，根子全都在这里。内卷圣骑士不需要讨论情绪价值这种东西，全部加点都是为了实实在在的生产力加成。这是为世界大战总动员设计的，你难道准备靠情绪价值打败美帝？</p><p>这套体系落地后，有好有坏.好的地方很明显，这套全员内卷圣骑士总动员的打法，确实在短时间内打穿了全球制造业。但不好的地方在于，国内女性生产力，也被打穿了。国内女性劳动参与率在短短十多年间一路暴跌。</p><p>北京大学国家发展研究院的教授认为转折点在2000年前后，国内经济市场大量私有化，民营企业崛起。</p><blockquote><p>我国女性劳动参与率相比男性下降速度更快,我从2015年开始关注并研究国内劳动参与率变化，以及这种变化中的性别差异。利用国家统计局,的历次中国人口普查数据，我们得出从1982年到2020年近40年的时间里，在15-65岁劳动年龄,人口中，<strong>女性劳动参与率从77%下降到55%<strong>，男性劳动参与率则从92%下降到76%，有6%的性,别差异。这与国际劳工组织统计的中国女性劳动参与率下降结果比较吻合。要先说下这个数据下,降的前提。与世界相比，国内的劳动参与率数据是从一个极高值下降到正常水平的过程，其他国,家近些年的劳动参与率，尤其是女性劳动参与率上升，与中国下降后的数据基本齐平。所以不是,说我们国家女性的劳动参与率相对男性下降快，就说女性的劳动力参与率低，相对其他国家，我,们相当于回到正常水平。背后的原因，你可以回想下上世纪80年代前，计划经济时代的劳动力很,少有不参与就业，或者失业的状况，劳动参与率极高。而后续我们的研究中也发现，2000年是中,国劳动参与率开始下降的一个节点，这时国内劳动力市场中的私有部门占比更高，</strong>市场化后女性劳动参与率开始降低</strong>，,因此女性劳动参与率下降主要发生在2000年后。</p></blockquote><p>国企是可以吃大锅饭的，组织也是会讲人情味的。你是清教徒圣骑士，道德高尚没有私欲，大国工匠都高风亮节呢，你让一让很合理吧？照顾一下女同志没问题吧？所以当时还能维持。</p><p>但市场经济环境下的私企不会，市场经济只看优胜劣汰，生产力强的留下，生产力弱的离场。谁能卷赢一群为世界大战总动员设计的，不知疲倦的996内卷圣骑士呢？</p><p>早年半边天的基础，是国营经济模式下，女性生产力和男性没有拉开,而现在女性生产力被内卷圣骑士直接打穿了。</p><p>这就是当前PUA，雌竞等一切现象的根源。为什么会有PUA和雌竞？因为经济学上收益极高，面对物抗叠满的内卷圣骑士，PUA和雌竞这种魔法输出的性价比高到可怕。</p><p>因为是为总动员设计的清教徒圣骑士，所以之前是没什么人教男性如何爱自己的，公司学校教的都是只要学不死就往死里学的理念。</p><p>利维坦的宏大叙事也不着重这块，在宏大叙事里，你会看见奉献，战斗，忘我，真要说爱自己，那就是“人的一生应该这样度过，我的整个生命和全部精力，都已经献给了世界上最壮丽的事业——为人类的解放而斗争”。问就是理想的实现有两种，我实现了理想，或我因理想而自我实现。</p><p>这其实是很有意思的一个现象，当前中国男性对于“浪漫”的理解，肯定不是花前月下山盟海誓。你去网上搜男人的浪漫，极大概率会搜出一堆封狼居胥，姜维北伐的表情包。男性的“爱自己”，是和理想主义自我实现这种大爱绑定的。</p><p>这个情况下，女性稍微会一点PUA，基本就是乱杀。这就是为什么大家好奇，胖猫都通天代这么赚钱了还被女方PUA，胖猫作为内卷圣骑士，全部加点都加在了正面战场上，所以他可以十几小时高强度上分。纪律性忍耐性全部拉满。但也正是因为全部加点都加这块了，导致其对PUA等魔法伤害基本没有抗性。</p><p>这也是为什么童锦程等情感博主崛起。理论上，童锦程这样花花公子类型的博主，男性应该是比较排斥的，但实际上童锦程对于女性和爱情的祛魅，反而成为了男性心灵导师。</p><p>“钱是给女人看的不是给女人花的”，相比38万彩礼，这简直是良心到没边。女性向情感博主，已经激烈到要用人格独立经济依附这种魔法了，男性这边，只要你说一句学会爱自己，就能大杀特杀。</p><p><strong>也正是在这个时代背景下，雌竞收益会高到爆表。</strong></p><p>很多人天天骂雌竞，规训女性不要雌竞，扩大化把一堆行为打成雌竞，这些行为都是因为雌竞在当前版本实在太强力了。雌竞的关键不在于女性怎么想，而在于男女生产力差异。在男性是不知疲倦内卷圣骑士的情况下，雌竞收益会无限叠高。</p><p>假设你是一个美女，不雌竞自己卷，每天赚100，雌竞一下找个工具人，每天赚500，虽然两个人分，但比自己卷是不是高多了？</p><p>——可如果工具人战斗力是一万呢？</p><p>在工具人战斗力完全碾压对方的情况下，你很快就会发现，我和你卷来卷去就赚这么点，完全不如找个工具人圣骑士来卷啊。之前我发过，现在高端捞女的课程，居然是教烹饪做菜的。</p><p>我工资3000，拼了命能到5000</p><p>但找一个月薪十万的老公，给他打打辅助，他省下这点精力多赚一点就是几万的收益。我还和你较什么劲啊？</p><p>放到游戏里，这就是非常典型的</p><p>遇见大腿直接秒选辅助，插好眼加好buff，等着大腿带你躺赢的思路。</p><p>但这还只是开胃菜，如果你把颜值差异，原生家庭等因素考虑进去，雌竞的优势会更大。</p><p>设想一下，你是一个内陆省份原生家庭较差但颜值较好的女性，常理下，因为原生家庭教育资源限制，你可能不会有一个好的学校履历，那么走进职场后，你很可能会遇到，既卷不赢内卷圣骑士，也卷不赢其他职场女性的情况。你的收入上限，可能拼尽全力也就1W级别。</p><p>但如果你突然跑去走雌竞路线呢？</p><p>你突然会发现，其实内卷圣骑士们压根不在意你的家庭出身学历，你投诉我我也找18的。颜值足够的情况下，一波就可以实现阶级跃迁。</p><p>一个普通家庭大专美女，很可能靠结婚实现经济碾压高知家庭的985女博士，而且可复制性极强。</p><p>强到张雪峰都知道这个套路，</p><p>“不想努力又想上升怎么办？去考计算机院校边上的文科学校，然后找个计算机牛马让他替你卷”</p><p>这就是这两年激女和雌竞女爱男姐的大战核心，很多人往往将雌竞问题理解为普女大战美女，觉得雌竞就是丑女抱团霸凌美女，这只是表象，雌竞是一个既包含性别问题又包含阶级问题的混合问题。</p><p>首先是在快速变化的时代里，内卷圣骑士的能力被放大，往往可以一己之力打通阶级上升，所以并不在意女方出身，</p><p>这直接导致了女方那边其他筹码全部崩盘，高颜值女性最容易搭上快车，雌竞收益被大大放大，</p><p>雌竞优势过大，最终冲击了女方这边原生家庭阶级壁垒。</p><p>最突出的就是1980-2000这一批女性，</p><p>市场上被内卷圣骑士卷爆，婚恋上又遭遇18岁女生入场，什么学历收入都不管用，你投诉我我也找18的。</p><p>男性有没有这个情况呢？有，但男性从小接受的就是技不如人的理念，卷输了没什么说的，而这批女性，理论上其实是卷赢同龄女生的，只是突然发现玩法变了。</p><p>对于高阶层高学历女性来说，最优局面是，大家都不许雌竞，就靠学历能力来拼，我稳赢，所以一定会喊美洲是美洲人的美洲。</p><p>而对于原生家庭较差但自身颜值性格优势的女性来说，烂牌能换王炸，我肯定直接炸。</p><p>这也是为什么现在有人认为女性有红利，有人认为女性没有红利的原因</p><p>本质是女性红利的分配呈现两极化，以前平均分，现在自由市场下全被美女吃了。</p><p>当前是美女红利最大的时代，不论你做网红，还是当博主，或者直接开主播，只要配合化妆PS技术，就能起来，如果再会点情感鸡汤甚至懂点心理学，基本横扫市场。如果你再会玩游戏或者懂数码科技，百万级网红轻而易举。没有学历要求，也没有资本门槛，高收益零门槛的上升通道，放在过往是不可想象的。但现在你去短视频平台一搜一大把。</p><p>而如果颜值不够走不了这条路，硬要来自由市场上内卷，那很不幸，站在你面前的是一群不需要休息的内卷圣骑士。</p><p>这个现象在美国也出现过，那就是保守的福音派女权大战正统女权，最后福音派赢了。正统女权多为精英高知家庭出身，熟读国际女权经书，鄙视家庭妇女，觉得女性只能靠自己。</p><p>但福音派女权表示，你什么家庭我什么家庭？你的家庭让你上哈佛上耶鲁，我小镇出身高中都没读完，到时候进了职场，你坐办公室人上人，我端茶倒水保洁人？那我为什么不直接找个华尔街做题家端茶倒水呢？</p><p>给你端茶倒水，月薪五千，找到华尔街做题家，做好家务当好主妇，让做题家去和你卷。然后最绝的地方来了，华尔街硅谷的做题家们，认可这个逻辑吗？答案是认可啊，华尔街做题家表示没错，我就喜欢金发长腿无脑美女，不看家庭不看收入，年轻漂亮就行。</p><p>至于你掏出什么波伏娃经书表示自己很聪明，男性要学会认识女性智慧什么的，咱们华尔街就认一个标准，赚到钱就是聪明，赚不到钱就是不聪明，您赚到钱了吗？</p><p>什么？女大专等于男哈佛，女月入三千等于男年入百万？</p><p>你以为金发甜心的说法怎么来的？这都是当年美国雌竞大赛玩剩下的。</p><p>理解这个，你也就理解了，为什么之前为男性发声的乃万，这次为胖猫发声的赵樱子等，都被非常剧烈的网暴集火。某种意义上，这就是中国的福音派生态位，是真正可能让女权万劫不复的思潮。</p><p>童锦程等男博主为男性发声，是没那么可怕的，因为男性不可能找童锦程们结婚。</p><p>但如果女明星女网红们为男性发声，然后发现为男性发声居然能如此容易的获得认可，那么很快就会引发跟风。一旦出现跟风，大量没有沉没成本的新人入场，内卷圣骑士的阈值会很快提高，雌竞路线的门槛会剧烈提升，原本中间观望的群体，很可能会直接被淘汰出局。</p><p>类似的是外娶的新闻，你会发现之前高呼不婚不育的全都急匆匆的跑来反对。</p><p>对于下行市场来说，所有小区业主必须遵守价格同盟，一旦一个人先降价出逃，很容易就会引发砸盘。所以一定会以最激烈的手段攻击降价的。</p><p>这也是为什么韩国那边一边性别大战，一边女团裙子越来越短，</p><p>没退路的都在喊绝不结婚，反正都找不到，当然可以放开了激进的喊。</p><p>但有退路的肯定不会傻乎乎跟着你玩，口号可以骗人，身体不能。</p><p>面对内卷圣骑士，正面生产力被打爆时，要么苦练功夫再战一场，正面硬钢内卷圣骑士，大家都是从小卷到大的，我的剑也未尝不利</p><p>要么扬长避短，避开理工科，往公关媒介等软实力行业走，或者直接考公考编。要么学PUA做捞女，要么雌竞合作。如果以上办法都不会，那么最后办法就是直接大哭大闹喊大家长，所以现在某些荒诞行为，你不要听什么人格独立经济依附的瞎扯，你就往喊家长上去靠，基本不差。</p><p>这也是很多人疑问，为什么都闹这样了大家长还不解决问题？</p><p>NO，如果从纯生产力角度来说，大家长眼里，搞不好真是觉得，你们都把对面卷出职场了，这总不能看着自己女儿饿死吧？</p><p>——战线崩盘的情况下，一定会从政策和舆论上找补。</p><p>某种意义上世界是公平的</p><p>你是全堆物抗的内卷圣骑士，那就容易被魔法输出一招撂倒。</p><p>PUA能大杀特杀，就注定雌竞战术也所向披靡。</p><p>男性不太关注情感问题，也不在意PUA和雌竞，因为都有活干，各个行业高速发展，电竞，直播，网文，新能源汽车等新兴产业跑马圈地，只要能卷你就能进场赚钱，大家注意力被分摊到了各个行业中。</p><p>哪怕你偶尔关注情感问题，没有收益也只是出于兴趣。</p><p>而女性真的关注情感问题，真的有重兵集团集结在这里，是真的能获得极高收益。</p><p>关注的多，就擅长，关注的少，就不擅长，世界总是如此。</p><p>所以我预言，PUA和雌竞等问题，可能短时间内无法解决，依然会持续相当长时间。因为经济规律摆在这里，经济基础决定上层建筑的原则。<font color="red">只要男性还是996内卷圣骑士模式，PUA和雌竞的收益极高，就永远会有走捷径的</font>。</p><p>但变化可能在于，国内的福音派崛起，引发所谓的激女大战雌竞女爱男姐战争，可能很快会爆发。</p>]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>认知</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>奋斗2024年国考和省考的日子</title>
    <link href="/2024/12/09/2024%E5%B9%B4%E5%A5%8B%E6%96%97%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    <url>/2024/12/09/2024%E5%B9%B4%E5%A5%8B%E6%96%97%E7%9A%84%E6%97%A5%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fb97b17a361713af557b4611206f46bbe74f129251f743d48941dfcd47706645">b0723210a1f2b2162110fd3fcca930d9d20d8d4fd834aec405b4dc07e38aba142def2c2d3bc66ec6c149d82930044103af49ced8b4433f2a217110ca4e72dcf55fb44f41fe8b8265353f40a77e55ef1eb4572210a2705321530698a2f1ed41aa604e2270ae5733966a6e237d229b7f2cfb7bb5f2e2c6de3656d61f9907fbc9496be4a982dc30843508625d2b1191a6d34847e4821fa2e11fbe5feb2d281514ea86fd069b8d338de6f699b5a2eadb064747642fbe1eeee535d5a13e5a244627f20a9fb91d9b0f970cdfc7ed63d442cfbfdfab90eb59e0b7aae0a61815024593de3c81453f0c4f5bde38d1a7abc2879d090ed49478f2baf23dc4051fc992a1aa8ca9642f364e4c8464e7b5b73cbb78c33ef9a89daa965395867a620f492ba8bac4a05a27296a6a7b89f9db7bfe481bec03f3d02d2c1fbf9c3b37b14000df606c777f07a7c3c38710e67a1f476300e997447a578d8c4f9c4995d9481da4ae107590fde0551e25c3b0e8a61fb119087aaa9d05c3a0d549afae88ee00b29c363bcf75cdd0a8f149665633bff86c6aea2cec1fb63d9db805fb145626d0f4cd6534e2f8f9e06e889402f54368cf9b81d2ff67d52ee00ee3ec16f2e0ccf58373d2f1ae8ca3d2f48d9a04f12cdb7050e0d3c4efdc3fb7dce5c12a8031cdb85c8c7d6e278b4b753a0e3f389b05013d304161fe75ee42755c852c1117efbff0561bd9a52054d2df8cad33e7b830ecad63b3f4fad8f4a366c5d6e8b68ad7880f114c5b6a06cdd15c71e5900c5a65acb1ad78716642b37307ff2dac31d7408c2971c5d5b9af78a8919121f5395fa428ed2040b5ed73a846f9eb22574f0f7d7d6b3a2b154f42e1229e87c040d0465dc7ae25a8469d0cee11e6e277138ea305898d2927d36570ba84634ff0d1b0d5ea794ecdc44b284b95413db99bae17cecb24f7b44d36db71be3d4357163a9723c9adfbaa2dac892c937daf33f24311b5c003a203758604c0028d5c022cbb724a58726baa1efe21f16ab765a2e75ee94315b4cead0e1f09cf02a7f2c7e398ea5c501677b16cb614c88afc30f40f48816ad5a9760c3ffbb76d4dafe130c8b6601aa8421f0c57524f9011c0959d4e03e496afd09d0cc5843a72f2831aa31d2f999e5b2a5fa13df2c6ba2f035af626464e6f47816fd0224346c2e4ce0375683a94be58adc398eaae4be88a92ca364eabb69f7b26c693060b1d031b97f5e39063c08ada462f0871a37bdbeb7d1f3849c8edc03c79a5991ffda9508fd900c2b41b9b30581464d661f15b9c3ea1927010a9e334f2f2b883002c6c6f8a26c07925b7b2412d895f947e8af5e95fdcea10d78c698338c5f2bc5ca8bce22ef848c1c01a67e10394487cf8292bce08c9fd705bc412bbeb6ff92af2bf3ca145af4f9c4d762fbcc330d976688bdb50c7e3af87ee45f7d910c04ead143bd023047b3167bd66678eabd1ddda71f430e3c69c6e5266aabc74f9eceed245050cb8eaa873fde2f36e79a0a09c1e246244a77a8b84247d3b8cf31e7979c6de8139f710e80a6a91f2d202d7c1d9aafb916f0d7a843ce541c6b63244a0f5a0225ba93a7c691a15c4df4b0f4a5630676c56ba1d00b00bdf82b4016efa66a6dc7de0c862c7cdea4998db1d59feeb19c8fc927285d4b1c378908b6976b4cb47a4788042ac11419eea2e9358a89fe1af3af11dfe45f28f20bd4bee69e7c5dea2bfe1b5df7269dc8a645d00727ab3700875a00cf3d208d7d9b788dac09561a6cf7f27427d39ddd9670519f9f04f1063c8f727f8c0380853047afb10a7abe1eae4e3297db565fbaea907e2e8cfcfd53e23bd3c0b4ed2825b588e214499a2c0351bb90701f853bf57a92e3ffb0ebe0b247c5931e925c0d9a01949c17f26845790758024947d9c58bf21c0b067ab977e6d8ba5727aacabf8ef08768db8032aca8bb7fe5a07c120d41709b3c833beffd2d4c6486ab1888bdfd393d3ad45b738678a571c325605b9bdbc33547ee75be97abf90bc8ea7d02301a54839e1e9535616085549b752d7756f76e8580a51f19683c0b8735d5ab99e55dbf2c82f4d30367ac7fb9d83bfb5ab759963b418f12364e2f66b9eed706db6a45200c6e8554c6af1063e553eaf9a1eedb1f0f3666ec383f471c784175529df5a8e91840f5ca9bfd5d7752b82d8712fad4b8b738445b1ffe7c913f05a4e2a65852ba3273ec93c0ddc7d12b3153b747fe8f0db0386a07f6495af6765b2d8ce38b7fa6c3225856ba18b68eff51aa1e1a97be1b55f822910358e0ea37feffcb0c05a3b0dcaffe62f8f0a428e5b770eb73f40d379e41151bd7dd441376da3b3a1970e49a1a246429b31553ebb72fe9eadd39be3430fe7da642c89201eb3155b8687519fac7164506f5bff473bcc2b25fd8e458124d2e327709ef3cd1e13c559560568bfbcf8713dc1138c24ee2ecd1d5d107e870dc8cd843e707322c3c2caf4dd543a19b36143fa3041990ae1a457114d5b4db2c676e5f7dd100a93d4fb212c423787e0eeb1c7a7912ca9c43fad16469a84dc54dd424202b4ab3ea39556442b125b53dbf0ac7a198e65970458a1e8e2a828862178ed05c68f6971fa7813c5bcc97d1f8a4ef3ff80c1e9009ad717cd4097d64ed8d06f9c3900259c2887fa68f29ca41a76f65b62774691bd87da03b2c86795365d15cc3804f91072c688cd4093f311ee6e6e964fad9e9eb9735d93fd345e9d1f73261c71c0d19c4ba610600c54edb03266adf1efd0834f4d5c2fd0ab941d844af1eb530960ba041883019b176dc6b4e85ca6006720979fe09b92b4b02e6e3e97a642fd4dbe279f1e10358ccaa5c688504f2fbd1e05639f3c459c3fcbc11293574b7893774f6e15af71c214780df60274ad08e067dc0428364a870f35f7e660219d4e1e01c50b694dd37d9111bd968722c193a14afe3c4f8b2fceb1035ba86bb99a117c2ce11fee00cac5deb3339c24c61c4d627cac18b8095c7513cf894e14b0c4918ec380a42198f6841ee6de8b51b3d3931a3510a34e989d682927e353fbff57e306523349f116b6ed8fd2bfb3a737a651e5d0ff5af591487b451530cd1de0a4b3d01f0bc4f53e3f9d1476cbfcca09501a376f48f0a637e5bfe7e92550e1a58d745d2ad36ef9e97a2d45c88d9faca8da4fa4a88268819f4b9934c0701bc7cd9ba1bde73f6a53144f90a38c59eeb6ac3f62801e46b5ae5e28ec787dd7382b1dd9d045d0712e3b9494dfd17695750f9309c1318ee874855f619c5064d160624fe438d6bfd7e19b650bf8f2d724445804b01992b3fa5882aa864f0f9c2eb2350764965a11d22ec0b1f6423ca856e67227c9e5f10b8555c690a472885f7932b3106503c2c7294d2dacb25fbaa1fdb76e5c29aa865494d38c2d69b59753d8787bd6726ee8936b79ba4a71aded8a52c63b22b227a0b227f066fe9dab3524225195d6a280bddd03f5636d44a5f708396afbffd57cfdfda589e09a5c27900060e340992e6bdb143badca73a32cd0387c9521f84eb9d99abbbc5f433200bc184ec6f7238a85e63057564af3707c04969d56626d67f962cd7d086fbc9560a8d4340aae6ea68ea8826a2c31d9ebbb71a80a630845fa2738b864e111eec9458d36091704ef6a0f82a4bdcccb4cd4008327e3f2bd7bd20731c467c3af07421669a7e0c2c103edd5be10959eec206f94a987bb1060a1edca674bbd6d442f30ab1c898c45b4d588c02bc299683028484fb168e351364795f576960c4b9263ff5c60ef975c39090d786aae09b519d6ea81d46d9cdf08588004908698b31fb53422baeb61a0d25d4793f17805c3f1dc94af4381e29261f9fef4c887f0e751fceaf38c9405ea3fd934860e0db5b7f88c6743916a3caada5e2bbfdddb888cdfd667c320a38388aca3674049eda0ddc4786437d7a12384568514605cb9493e72e70ce2af5669988674f1d384c8d81c122fdb2ee9ed52560ec1c9f07d999bb0102767afbfa249cf455754bd614d7657a1a3da1b192c8eec010df94dc1f59723f75c5a7427253dae3a71e4448aa6ac746c4d0ee6b682ba60f2c60d8aa30054d03625628c1be4b08a1b9dda8c5aa3eddc52866191d8bc6dcaebb14225d4f4e6030c584a1c1e5dd3f8c20872fcf76623d53f3c528a2bfec51bfb59c0b4cfe4df91280dd930db581a1c2fe38eaed37c9e3efdd6db94aea3cd057da8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奋斗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高善文：2025年可能是一个重要的转折点</title>
    <link href="/2024/12/04/%E9%AB%98%E5%96%84%E6%96%87%EF%BC%9A2025%E5%B9%B4%E5%8F%AF%E8%83%BD%E6%98%AF%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84%E8%BD%AC%E6%8A%98/"/>
    <url>/2024/12/04/%E9%AB%98%E5%96%84%E6%96%87%EF%BC%9A2025%E5%B9%B4%E5%8F%AF%E8%83%BD%E6%98%AF%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84%E8%BD%AC%E6%8A%98/</url>
    
    <content type="html"><![CDATA[<h1 id="高善文：2025年可能是一个重要的转折点"><a href="#高善文：2025年可能是一个重要的转折点" class="headerlink" title="高善文：2025年可能是一个重要的转折点"></a>高善文：2025年可能是一个重要的转折点</h1><h2 id="一、转型取得积极进展-但周期性压力超过了成长的烦恼"><a href="#一、转型取得积极进展-但周期性压力超过了成长的烦恼" class="headerlink" title="一、转型取得积极进展,但周期性压力超过了成长的烦恼"></a>一、<strong>转型取得积极进展,但周期性压力超过了成长的烦恼</strong></h2><p>2018年前后，中国经济增长模式逐步摆脱依靠债务基建和房地产驱动的增长形式，转向依靠技术进步和产业升级，经济转型过程中有些行业兴起，有些行业衰落，总量层面经济增速放慢可以理解可以想像，属于转型过程中的成长的烦恼。</p><p><strong>更多来自于周期的扰动而不是转型的代价。</strong></p><p>我们以全部上市公司为基础（A股、港股，中概股），把这些公司分为三类:</p><p>①支持类2500家，政府支持鼓励，支持经济转型引导方向；</p><p>②限制类500家，政府试图加以规范管理和限制，行业自身也在走向衰落；</p><p>③中性类2600家，商贸零售社会服务，和转型过程没有很紧密的联系，整体属于中性。</p><ul><li>上市公司营业收入占2024GDP总量50%以上，具有一定代表性。</li><li>上市公司营业收入占比，中性类占比60%，支持类占比20%，限制类占比低一些。 </li><li>上市公司总市值占比，中性类略高于50%，限制类和支持类在20%上下。</li></ul><p>2016年至今，中性类行业的营业收入&#x2F;总市值占比总体稳定，<strong>2018-2020年之间，限制类行业占比明显收缩，支持类行业占比明显扩张</strong>，政府试图限制的行业在收缩，政府试图支持的行业在扩张，营业收入和总市值维度都是如此。</p><p>说明，经济转型在确定性的发生。无论经济增速如何波动，中性行业的占比一直保持不变，不受到限制性和支持性政策的影响。</p><p>观察股价表现，我们把所有支持类上市公司视为一家公司， 设定在2018年股价为1，其他类别同理。2018年以来，支持类板块的股价上升，限制类板块的股价大幅下跌，二者之间的裂口是过去十几年没有看到的，这说明政府引导经济转型的努力在金融市场的定价反映出来。2010-2018年，股价表现则完全相反，进一步确认政府引导经济转型的转折点。 </p><p><img src="/images/1204_01.jpg"></p><p>人们很容易把总量层面的问题和转型结构联系起来，甚至可能把总量的问题归结为转型的问题。 我们通过观察中性行业的表现，去剥离转型和政策的影响。 </p><p>2017年以来，中性行业的营业收入大幅下滑，从这个指标来看，<strong>中性行业营业收入的下滑不是转型的影响，而是周期的力量</strong>；从雇佣员工数据来看也是如此。 </p><p><img src="/images/1204_02.jpg"></p><p><img src="/images/1204_03.jpg"></p><p>至此，我们完成了第一部分的讨论，<strong>经济的转型取得了一定成绩，同时，经济增速趋势性下滑，这一下滑和转型没有很大关系，更多反应周期的趋势性力量。</strong></p><h2 id="二、疫情以来消费疲弱，居民对收入增长缺乏信心"><a href="#二、疫情以来消费疲弱，居民对收入增长缺乏信心" class="headerlink" title="二、疫情以来消费疲弱，居民对收入增长缺乏信心"></a>二、<strong>疫情以来消费疲弱，居民对收入增长缺乏信心</strong></h2><p>看中国30多个省级行政区的数据，纵轴，疫情前的消费增长情况，横轴是，人口老化程度。</p><p>疫情前：年轻人占比与消费不相关</p><p><img src="/images/1204_04.jpg"></p><p>疫情后：年轻人占比越高的省份消费越差</p><p><img src="/images/1204_05.jpg"></p><p><strong>一个省人口越年轻，消费增长越慢；一个省人口越老，消费增长越快。</strong>这个结论有些反直觉，被市场参与者归纳为三句话，<font color="red">生机勃勃的老年人，死气沉沉的年轻人和生无可恋的中年人</font>。</p><p>对老年人而言，未来可预期的退休金是可以按时发放，每年稳定增长，并高于通胀水平，收入预期没有任何影响，可以继续搞夕阳红，跳广场舞。</p><p>对年轻人而言，收入预期大幅下修，收入增长确定性大幅下修，找不到工作，找到的工作与预期有显著落差，年轻人纷纷节衣缩食关灯吃面。</p><p>我们看另一个数据。省级行政区的消费情况，和省会城市二手房价的涨幅。</p><p>疫情前，消费和房价几乎不相关。</p><p><img src="/images/1204_06.jpg"></p><p>疫情后，房价下跌严重的地区消费更差。</p><p><img src="/images/1204_07.jpg"></p><p><strong>我们倾向于认为，疫情后，买房人总体是年轻人，一个地区的年轻人对未来越没有信心，他们的消费越弱，买房的意愿也会越弱。没有收入预期，没有消费能力，也不敢买房</strong>。</p><p><img src="/images/1204_08.jpg"></p><p>这一模式所得到的结果，和我们观察地区人口老化的结果，指向了类似的结论：年轻人收入预期下滑，消费信心和购房意愿都被显著抑制；但老年群体的收入预期没有被限制，生活幸福感强。</p><p>为什么会发生这种情况？</p><h2 id="三、就业数据的疑点"><a href="#三、就业数据的疑点" class="headerlink" title="三、就业数据的疑点"></a>三、就业数据的疑点</h2><p>我们观察失业率，2022年两轮封城失业率脉冲式上升，失业率稳中有降，2024年失业率和2022年、2023年差不多，整体就业压力并不大。</p><p><img src="/images/1204_09.jpg"></p><p>观察体制内也就是非私营单位的平均工资增速，疫情后工资增速有一定下滑，但远没有消费者信心下滑显示的那么显著。</p><p><img src="/images/1204_10.jpg"></p><p>观察城镇就业人口增速，疫情爆发后出现了极速下滑，疫情结束后出现了反弹，但仍低于长期趋势水平。</p><p><img src="/images/1204_11.jpg"></p><p>观察就业人员总量，实线（实际找到工作）和虚线（趋势线）累计岔口4700万人口。换句话说，<strong>累计有4700万劳动力，无法正常找到工作</strong>。</p><p><img src="/images/1204_12.jpg"></p><p><strong>这些人去了哪里？</strong>我们观察城镇和乡村就业人员数据，乡村就业人员累计增加了4100万人，与城镇就业人员的减少数量相当接近。一个可能的解释：疫情后城镇创造就业能力的显著恶化，<strong>大量就业人口返回或者滞留在乡村</strong>，回老家之后，城镇失业率数据不显示，但在总就业人口中反映出来。另一部分可能离开了劳动力队伍，四十多岁，工作没有了，公司破产了，开滴滴，在家炒股，或者在家呆着，在就业和失业数据上都看不到。</p><p><strong>这些数据在经济产出上的表现是什么呢</strong>？总量数据上，城市吸收就业的主要是第三产业，由于技术进步资本积累，制造业吸收就业在过去十多年一直是负增长。</p><p>我们观察第三产业增加值占比，疫情后第三产业占比与趋势线也出现了很大的裂口，对应的就是城镇就业人口的缺失。</p><p><img src="/images/1204_13.jpg"></p><p><img src="/images/1204_14.jpg"></p><p>我们观察全国存量就业质量衡量指标，不仅是就业数据下降，就业质量也出现了恶化。不仅仅是金融行业由于羞耻感出现了就业质量的恶化。</p><p>我们观察五险一金的缴纳比，与历史趋势相比也出现了显著的恶化。</p><p><img src="/images/1204_15.jpg"></p><p>这和前面的上市公司数据，消费数据都是呼应的，不能反映为转型的烦恼，而是周期的力量。</p><h2 id="四、总量数据的乖离"><a href="#四、总量数据的乖离" class="headerlink" title="四、总量数据的乖离"></a>四、总量数据的乖离</h2><p>我们通过产出缺口与核心CPI观察物价数据，纵轴核心CPI是CPI扣除食品和能源等高波动成分，横轴是中国经济增长和潜在增长能力的差，叫做产出能力。</p><p>一般经济理论认为二者存在非常紧密的联系，我们倾向于认为中国在2013年前后经过了刘易斯第二拐点，产出缺口与物价之间的关系确实变得很紧密。</p><p><img src="/images/1204_16.jpg"></p><p><strong>但是有两个异常点，都超过了两倍或三倍方差的水平。这两个异常点就是2023年和2024年</strong>。</p><p>在中国总量数据中，最可信的是价格，抽样就可以，各种力量很难操纵，另外一些数据的可靠性就弱一些，容易受到非统计因素的扰动。</p><p>我们看城镇就业人员增速和GDP实际同比的关系，经济增长大概率会创造更多的工作，产出的扩张会伴随就业的增加。</p><p><img src="/images/1204_17.jpg"></p><p><strong>如果我们认为就业数据可信，那么经济增速就太高了。</strong> </p><p><strong>如果我们认为经济增速数据可信，那么就业数据就太低了。</strong> </p><p><strong>就业和增长的关系在过去两年，也显得非常反常。</strong></p><p>2020年疫情以来的四年作为一个时间段，2019年取同样的时间段，前后比较物商品消费。</p><p>疫情之前，消费增长与经济增长差不多，消费增长还要略快一些。</p><p>疫情之后，消费增长比经济增长低得多得多。</p><p><img src="/images/1204_18.jpg"></p><p>疫情之前，经济增长和投资增长差不多。</p><p>疫情之后，经济增长比投资增长快多了。</p><p><img src="/images/1204_19.jpg"></p><p>合并所有数据，消费和投资的增长和经济增长有某种关系，在疫情后这种关系变得显著的反常。我们以疫情前的数据为基础，疫情后，要么是消费增速低估了，要么是经济增速高估了，在其他科目中没有看到这种吸收关系。</p><p>最后一个层面的问题，我们知道中国房地产是在2020年8月后进入大幅下滑的过程，到现在已经超过了三年的时间，是造成当前经济困难最主要的原因之一，这是大家广泛接受的事实。</p><p>很多人认为，中国在2021年之后经历了房地产泡沫的破灭，从开工销售等数据上，这个结论说得通。<font color="red">我们比较了中国和发生房地产危机国家的前三年和后三年的经济增速。经济增速发生了大幅下滑，三年平均增速-7%，中位数-3%到-4%，最少也有-2%。中国的经济增速只下滑了0.2%，几乎没有下滑。在政府财政没有逆向扩张的情况下，经济增速没有显著下滑</font>。</p><p>把这一对比和物价就业和GDP细分对比合并，房地产泡沫一来，<strong>GDP增速每一年高估了3个百分点，累计高估了10个百分点，这与城镇就业人口流失的4700万对应上了。下修了这3个百分点，所有的数据都对得上了</strong>。</p><p>好消息是什么呢？926的会议开始正视问题，正视经济增长层面存在的问题，并准备采取强有力措施解决问题。当前面对的问题不是成长的烦恼而是周期的压力，接下来就是采取措施去解决这些问题。</p><h2 id="五、我们如何来评估这些措施"><a href="#五、我们如何来评估这些措施" class="headerlink" title="五、我们如何来评估这些措施"></a>五、我们如何来评估这些措施</h2><p>0轴是泡沫破灭的时点，和泡沫破灭后的平均经济增速，所有经历了泡沫破灭的国家，都迅速采取了有力的措施，最近的例子是美国，远一些的例子是日本：</p><ul><li>1.泡沫破灭后，经济增速要回到正常水平，平均需要9年。</li><li>2.泡沫破灭后，经济萎缩，政府救助，产出的绝对水平恢复到泡沫破灭前，也需要3-4年。</li></ul><p><img src="/images/1204_20.jpg"></p><p>以这样的模式为基础，<font color="red">中国的经济增长要恢复到泡沫破灭前，还需要比较长时间的等待。积极状态下也需要3-4年的时间</font>，我们对泡沫破灭后的干预是否积极，不同人会有不同的看法，即便非常积极，要快速完全恢复，也不是很现实。</p><p>我们要面对后泡沫时代相对比较弱的增长，我们要从危机阶段转入相对较弱的正常增长，是后泡沫时代泡沫管理时期的重要挑战。</p><p>一般性的干预措施包括大规模降息，稳定金融机构资产负债表，政府部门资产负债表扩张，是否规模够大，是否足够及时，是否足够有力，我们的政府已经做了大量的工作，降息层面还有很多工作要做，除了金融机构还应该包括影子类金融机构，政府部门也需要更大力度的扩张。</p><p>经济从国际经验来看也会转入相对温和的增长，维持较长时间的温和增长后才能恢复到一个比较正常的水平。</p><p>综上，<strong>2025年可能是一个重要的转折点。从23年24年的数据异常点，向保持温和增长的转折时期，泡沫带来的失衡得到了修正，政府的政策也更为积极有力，也意味着股票市场的运行有了稳定可预期的宏观环境</strong>。</p><h1 id="延伸阅读"><a href="#延伸阅读" class="headerlink" title="延伸阅读"></a>延伸阅读</h1><p><strong>高善文：经济增速下滑是周期性原因导致，与经济转型没有很大关系</strong></p><p>国投证券2025年度投资策略会于12月3日举行。国投产业研究院院长、国投证券首席经济学家高善文指出，过去几年，我国经济转型取得了引人瞩目的成绩，但在经济转型的同时，经济增速出现了趋势性的下滑。</p><p>不过，高善文强调，经济增速下滑与经济转型之间没有很大关系，而是更多地反映了经济周期性力量的下降。</p><p>在过去几年中，“经济周期性压力明显超过了转型所带来的成长的烦恼，这是总量经济政策必须正视和面对的问题”，高善文说。</p><p><strong>高善文：老年人越多的地方，经济和消费越旺盛</strong></p><p>国投证券2025年度投资策略会于12月3日举行。国投产业研究院院长、国投证券首席经济学家高善文指出，老年人越多的地方，经济和消费越旺盛。高善文指出，经济数据显示，一个省的人口越年轻，消费增长越慢。人口结构越老化，消费增长越快。“这在直觉上是非常令人难以接受的。我们总是认为，一个地方的年轻人越多，经济越有活力、越有创造性，消费活力会越旺盛”，高善文说，现实情况则刚好相反。出现上述情况的原因，高善文认为，对于老年人而言，预期的退休金是可以按时足额发放，且每年是有稳定增长、增幅高于通货膨胀水平的。“在这样的条件下，他们的消费活动就没有受到任何影响，可以继续去跳广场舞，去搞夕阳红”。而对年轻人来讲，外部环境影响了他们对收入增长的预期。“年轻人纷纷节衣缩食”。</p><h2 id="关于促进房地产市场止跌回稳，加快建立房地产业务新模式的几点思考"><a href="#关于促进房地产市场止跌回稳，加快建立房地产业务新模式的几点思考" class="headerlink" title="关于促进房地产市场止跌回稳，加快建立房地产业务新模式的几点思考"></a>关于促进房地产市场止跌回稳，加快建立房地产业务新模式的几点思考</h2><p>高善文 2024年10月21日</p><p>房地产市场在国民经济中具有举足轻重的影响。过去几年中国房地产市场的深度调整充分暴露了传统的房地产业务模式的严重内在缺陷，对宏观经济的稳定运行和健康发展形成了明显拖累和重大挑战。如何尽快实现房地产市场的止跌回稳，并逐步构建更具韧性、更可持续的房地产业务新模式，无疑是当前十分重要和紧迫的任务。</p><p>作为资本市场的观察者，基于对房地产行业的长期讨论和思考，我们在此分享一些粗浅的想法，希望能够起到抛砖引玉的作用。</p><p>1990年代末期中国开启房地产市场化改革以来，房地产行业蓬勃发展，对于加快城市化进程，推动经济高速增长起到了有目共睹的巨大作用，但也逐步产生和积累了以高房价、高杠杆、高债务等为标志的严重问题，越来越难以持续。</p><p>概括而言，在过去二十多年的时间中逐步形成的房地产业务模式具有几个方面的内在缺陷，需要得到系统性纠正：</p><h3 id="一、房地产公司的日益金融化是传统业务模式的首要缺陷"><a href="#一、房地产公司的日益金融化是传统业务模式的首要缺陷" class="headerlink" title="一、房地产公司的日益金融化是传统业务模式的首要缺陷"></a>一、房地产公司的日益金融化是传统业务模式的首要缺陷</h3><p>一方面，快速的城市化进程产生了巨大和持续增长的房地产需求，另一方面，单个房地产项目在商业上的成败存在许多不确定性，也难以收获规模效益，因此，同时开发多个项目的房地产公司开始获得竞争上的优势，这表现在业务的许多方面：</p><p>首先，正如“不要把鸡蛋放在一个篮子里”的格言所展示的那样，分散的多个项目之间相互平衡和抵消，可以降低总体业务的波动性，在给定风险暴露的条件下提高资本的回报率和债务的安全性。</p><p>其次，由于前述原因，以及金融市场普遍存在“大则不倒”的假设，庞大的业务规模可以帮助房地产公司以更低的成本融资，从而形成正向循环。</p><p>再次，众多项目之间销售和施工进度之间存在差异，由此产生的资金余缺可以相互调剂，这提高了资金的使用效率。更重要的是，由于单个项目以独立法人的形式存在，资金在项目之间的横向调拨形成了某种形式的信用创造和信用扩张机制，使得房地产业务开始具有一定的类银行的金融属性。</p><p>我们知道，银行信用创造的关键是部分准备制度，即银行把收到的存款的一部分以现金的形式持有，作为应付未来提款的准备金，其余的存款则用于放贷，从而形成新的存款，在这一过程中创造和扩张了信用。</p><p>类似地，房地产项目A把收到的预售资金的一部分贷放给项目B，形成项目B的资金来源。项目B将此用于土地购买，以及进一步的抵押和借款活动，在这一过程中，信用被创造和放大。在这一意义上，房地产业务具有了类银行的金融属性。</p><p>最后，持续的经济发展和城市化进程等因素推动了房价和地价的持续上升，使得持有土地和房地产项目可以获得较为稳定的增值收益，这诱使房地产公司通过提高杠杆来增加土地和项目的持有，从而进一步增强了房地产的金融属性。为了应对多变的政策环境和房地产市场的周期性起伏，房地产公司进一步发展了所谓的高周转模式，即在预期短期市场形势较好的条件下，通过短期借款迅速放大供应，提高周转率；在市场形势转差的时候则收缩借贷，降低供应。在资金融通和调度顺畅的条件下，这充分提高了资本的回报率，但也使得在房地产形势较好的条件下，包括大量短期借款在内的杠杆率被推升到异常高的水平，金融属性进一步强化。</p><p>由于以上因素的综合作用，中国的房地产公司逐步发展为类金融机构，具有了高杠杆、流动性转换、期限转换和信用创造等金融业务的关键功能和特征。</p><p>金融史的发展告诉我们，金融业务具有内在的不稳定性，必须通过中央银行的建立和以必要的资本充足率及充分的信息披露为核心的严格金融监管来应对。</p><p>中国房地产市场当前的困境，一般地说，可以认为是其金融属性内在不稳定性的集中反映。</p><p>金融史的发展同样告诉我们，应对当前房地产行业的困难局面，需要充分考虑其业务发展中业已形成的金融属性。这形成了两种不同的应对思路：一是以项目为中心的行业救助，并逐步彻底去除房地产的金融属性。</p><p>这种思路的挑战在于：一方面项目之间相互平衡的优势和规模效益无法实现，随着救助过程的展开，剩余的项目越来越集中为高风险项目，难以处理；</p><p>另外一方面这形成了行业内快速和严重的信用收缩，具有极强的外部性和传染性。二是救主体和救项目并重，一方面通过注资和债务重组来稳定和充实主体的资产负债表，维持其业已存在的各类功能，另外一方面通过建立类金融业务的监管框架加强对大型主体的全面监管，进一步稳定市场信心，并逐步控制和化解系统性风险。</p><h3 id="二、越来越统一的全国劳动力市场与高度碎片化的土地供应制度之间的矛盾是房地产传统业务模式的另外一大缺陷"><a href="#二、越来越统一的全国劳动力市场与高度碎片化的土地供应制度之间的矛盾是房地产传统业务模式的另外一大缺陷" class="headerlink" title="二、越来越统一的全国劳动力市场与高度碎片化的土地供应制度之间的矛盾是房地产传统业务模式的另外一大缺陷"></a>二、越来越统一的全国劳动力市场与高度碎片化的土地供应制度之间的矛盾是房地产传统业务模式的另外一大缺陷</h3><p>中国房地产市场的需求方是分散并自由流动的城市居民，具有高度市场化的特点，但关键要素的土地供应由地方政府作为单一主体来实施，具有很强的计划性。</p><p>由此产生的问题是：在需求快速扩张时，供应不能及时充分响应，从而放大了地价和房价的上升压力。更大的问题是，对于人口大量集聚的城市政府而言，缩减土地供应甚至可以带来更高的土地收益，这是垄断经济的一个自然特点，但无疑加剧了房地产市场的压力。</p><p>从数据上看，一些大型城市的年度供地持续低于计划目标，其原因似乎并非广泛的土地流拍，而是较少的土地供应足以实现年度的土地收入目标。</p><p>更一般地看，2016-2021年期间全国范围的房地产价格大幅上涨引起了广泛的关注和讨论，许多分析将此与棚改货币化联系起来，这也许是有道理的。</p><p>然而，我们曾经将中国的部分三四线城市分解为两个组别，一个是实施了棚改货币化的城市组；一个是没有实施棚改货币化的城市组。</p><p>结果发现，前者的房价表现并不显著强于后者，这为棚改货币化的解释投下了不小的阴影。实际上，从广泛的数据看，我们更倾向于认为，棚改货币化是一个内生的去存货政策：即存货压力更大的城市更倾向于进行棚改货币化。因此，对于存货较少的城市而言，一方面房价更容易上涨，一方面地方政府进行棚改货币化的意愿也不很强烈，这样，房价与棚改之间的关系并非一目了然。</p><p>也许很少人注意到的事实是：在这段时期，在人口流入和城市化规模继续扩大的同时，中国大量城市的土地供应经历了普遍和持续的收缩，这与同期中国广泛的房价上涨之间的联系无疑是耐人寻味的。</p><p>更进一步看，中国的土地供应由地方政府主导，是高度碎片化的，而劳动力市场越来越统一，人口在全国范围内自由流动，这不可避免地带来了土地市场的扭曲和资源配置的低效。在守住耕地红线的约束下，全国的供地指标以计划的形式下达给地方，尽管在人口集中流入的城市，土地的单位经济效益显著更大，但这些地区却无法从落后地区腾挪和获得供地的配额。</p><p>在通常的情况下，这显然会加剧发达地区的房价上涨压力。此外，2012年以来，中国的人口开始向中心城市和发达地区聚集，给这些地区带来了更大的土地收入，但同时降低了人口流出地区的潜在土地收益，形成或者扩大了地区之间财政收入的不平衡。地方政府的债务大多以土地的价值和潜在收益为抵押，但潜在的债务风险又需要中央政府兜底或承担相当的救助义务，形成道德风险。</p><p>为了解决这些问题，需要考虑三个方面的措施：</p><p>一是有意识地增加土地供应的弹性，根据房地产市场的发展和人口流动情况适时增加或减少土地供应，将土地和当下房价监管机制更紧密地联动起来。</p><p>二是建立全国统一的土地配额交易市场，就像碳配额和电力交易一样，由各地区自愿相互交易自己的年度土地配额，实现土地要素的市场化定价和全国统一配置；在必要时，也可以由中央政府追加和拍卖部分土地配额，以稳定土地市场。例如单位土地配额在西部地区的经济价值也许是一万元；在沿海地区也许是十万元。配额在两个地区之间进行交易，西部可以获得超过一万元的经济收益；沿海地区也同时收获了更高的经济价值，形成互利共赢。三是将卖地收入调整为中央与地方共享的收入，用于调节地区之间的财力平衡、化解地方债务风险和解决包括保障性住房在内的其他民生目标。</p><h3 id="三、保障性住房供应不足是房地产传统模式的又一大缺陷"><a href="#三、保障性住房供应不足是房地产传统模式的又一大缺陷" class="headerlink" title="三、保障性住房供应不足是房地产传统模式的又一大缺陷"></a>三、保障性住房供应不足是房地产传统模式的又一大缺陷</h3><p>在城市化进程快速发展，房价总体不断上涨的过程中，一般居民自然希望通过参与商品房市场来分享这一红利，这强化了商品房在资产配置中的金融属性，降低了保障性住房的吸引力；对于地方政府而言，考虑到建设保障性住房的机会成本、以及失去的土地收益等因素，其提供保障性住房的意愿似乎也不够充分，这可能部分解释了过去二十多年保障性住房供应不足的情况。</p><p>由此形成的问题是明显的：一方面高企的房价使得城市低收入者、新进城的农民工群体和青年人无法实现合意的居住条件，另外一方面着眼于资产配置和房价上升的商品房持有又带来了一定数量的房屋空置，形成资源的浪费。两相对比，还容易形成社会压力。疫情以来，由于一系列内外条件的变化，居民对未来收入和房价的预期似乎正在发生较大的调整，表现为消费活动的走弱和安全资产的走强。在一手房市场的供应大幅度收缩的条件下，二手房市场交易量维持在非常高的水平，但价格明显下调，显示了配置型需求可能在趋势转弱。这有助于缓解资源闲置和低效配置的浪费，也可能鼓励居民对保障性住房更大的兴趣。</p><p>在这样的情况下，对商品房交易的各类限制也许应该逐步清除，并在必要时转向对部分地区和市场的持有环节的干预，例如空置税等；为了提高地方政府提供保障性住房的积极性和缓解财政压力，中央政府也许应该考虑提供必要的补偿和激励。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://x.com/myfxtrader/article/1863797033779482747">https://x.com/myfxtrader/article/1863797033779482747</a></li><li><a href="https://chinadigitaltimes.net/chinese/713658.html">https://chinadigitaltimes.net/chinese/713658.html</a></li><li><a href="https://wallstreetcn.com/articles/3730966">https://wallstreetcn.com/articles/3730966</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文章摘要</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序抓包教程</title>
    <link href="/2024/12/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/12/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="微信小程序抓包教程"><a href="#微信小程序抓包教程" class="headerlink" title="微信小程序抓包教程"></a>微信小程序抓包教程</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>软件安装：</p><ul><li><a href="https://blog.uuanqin.top/go.html?u=aHR0cHM6Ly93d3cuY2hhcmxlc3Byb3h5LmNvbS9sYXRlc3QtcmVsZWFzZS9kb3dubG9hZC5kbw==">Charles</a>（30 天试用，应该有破解版）</li><li><a href="https://blog.uuanqin.top/go.html?u=aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYnVycC9yZWxlYXNlcy9wcm9mZXNzaW9uYWwtY29tbXVuaXR5LTIwMjQtMi0xLTU=">Burp Suite</a>（下载社区版应该不要钱）</li></ul><p>然后看一下电脑端小程序能不能正常查询水电费余额：</p><h2 id="Charles软件配置"><a href="#Charles软件配置" class="headerlink" title="Charles软件配置"></a>Charles软件配置</h2><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p><img src="/images/1202_01.jpg"></p><p>安装到受信任的根证书颁发机构：</p><p><img src="/images/1202_02.jpg"></p><p><img src="/images/1202_03.jpg"></p><h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><p><img src="/images/1202_04.jpg"></p><p><img src="/images/1202_05.jpg"></p><h3 id="SSL-代理配置"><a href="#SSL-代理配置" class="headerlink" title="SSL 代理配置"></a>SSL 代理配置</h3><p><img src="/images/1202_06.jpg"></p><p><img src="/images/1202_07.jpg"></p><p><code>*</code> 是代表抓取任意端口和域名，如果只抓取固定的端口 or 域名可自行设置。</p><h3 id="数据包代理配置"><a href="#数据包代理配置" class="headerlink" title="数据包代理配置"></a>数据包代理配置</h3><p>将数据包代理转发到BurpSuite中</p><p><img src="/images/1202_08.jpg"></p><p><img src="/images/1202_09.jpg"></p><p>注意，Web Proxy（HTTP）和 Secure Web Peoxy（HTTPS）都需要填写 127.0.0.1 以及端口（这里填的都是 8080），这和后续配置 BurpSuite 代理的端口一致。</p><h2 id="Burp-Suite-软件配置"><a href="#Burp-Suite-软件配置" class="headerlink" title="Burp Suite 软件配置"></a>Burp Suite 软件配置</h2><p><img src="/images/1202_10.jpg"></p><p><img src="/images/1202_11.jpg"></p><p><img src="/images/1202_12.jpg"></p><p>接下来你就可以在拦截历史中抓到包了</p><p><img src="/images/1202_13.jpg"></p><p><img src="/images/1202_14.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>解决方案</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解决方案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年年终回顾和2025年展望——对冲风险VS软着陆</title>
    <link href="/2024/11/29/2024%E5%B9%B4%E5%B9%B4%E7%BB%88%E5%9B%9E%E9%A1%BE%E5%92%8C2025%E5%B9%B4%E5%B1%95%E6%9C%9B%E2%80%94%E2%80%94%E5%AF%B9%E5%86%B2%E9%A3%8E%E9%99%A9VS%E8%BD%AF%E7%9D%80%E9%99%86/"/>
    <url>/2024/11/29/2024%E5%B9%B4%E5%B9%B4%E7%BB%88%E5%9B%9E%E9%A1%BE%E5%92%8C2025%E5%B9%B4%E5%B1%95%E6%9C%9B%E2%80%94%E2%80%94%E5%AF%B9%E5%86%B2%E9%A3%8E%E9%99%A9VS%E8%BD%AF%E7%9D%80%E9%99%86/</url>
    
    <content type="html"><![CDATA[<h1 id="2024年年终回顾和2025年展望——对冲风险VS软着陆"><a href="#2024年年终回顾和2025年展望——对冲风险VS软着陆" class="headerlink" title="2024年年终回顾和2025年展望——对冲风险VS软着陆"></a>2024年年终回顾和2025年展望——对冲风险VS软着陆</h1><h2 id="上篇"><a href="#上篇" class="headerlink" title="上篇"></a>上篇</h2><p>正值年底，虽然刚才汇丰一直强调大家不录音不录像，但大概率你挡不住。我在这儿讲话会谨慎一些，非常小心谨慎，大概率会有人透露出去，放到YouTube上，基本上所有见我都说付总我在YouTube上看过你的视频，我说那都是盗版的，靠盗版发财的也不少。</p><p>今天和大家分享的内容基本上都是官方的，回顾会多一点，展望不多，因为这个月展望完了之后下个月怎么办？有些话对我来讲我倒觉得很简单，本质上原来我们是做Hedge Fund出身，所以我们的逻辑框架整体具有极强的延续性，不是说今年去讨论，或者说明年去讨论。</p><p>惯性思维从2016年开始，我一直在跟大家强调这个世界已经完全不一样了。当然经历过过去的几年时间，我相信在座各位应该对这番话的理解变得越发深刻。</p><p>2016年实际上是美国特朗普的第一次大选，我有一个特点，我的特征是如果我觉得什么地方有投资机会，我可能第一时间去一线调研，我不喜欢看YouTube，我也不喜欢在网上扒。当然你会说，现在ChatGPT很强大了，人工智能好像能帮你解决很多问题，但你们有没有想过，可能广泛流传或者广泛传播的很多信息是错的。这一点在2012年当时我从日本做完调研回来之后，我的感悟是最深的。</p><p>当然去日本有一个重要的人物，名字叫本森特，很快大家就会非常熟悉他的，目前来讲应该是特朗普政府提名的美国财长。本森特原来是索罗斯基金实际掌控人，因为索大爷已经年龄很大了，去年的时候才刚刚把基金的业务交给他儿子亚历山大，但在这之前，最主要的几场战役本质上来讲都是本森特在主导。</p><p>2012年当时我从北京去香港约朋友们吃饭的饭局上，当时斯索罗斯基金在香港办公室跟我说，本森特从这儿去了日本。我说OK。我经常说一句话“站在巨人的肩膀上看问题。”</p><p>当然你知道，网民们最可怕的地方是巴菲特“SB”、索罗斯“SB”，我最“牛逼”。你要记住，他们的所有行为一定有很大的变化，很多人可能都不知道，巴菲特第一次去是2011年，我们正在讲福岛核电站泄漏，核废水污染以后海鲜不能吃的时候，一个80多岁的老头顶着核辐射泄漏去日本吃海鲜了，当然他去日本干吗，这其实很关键。</p><p>之后我们跑到日本做完调研回来之后那几年，我陆陆续续跟很多人讲，日本正在发生变化，日本的利率结构都会随之变化的，当然包括日本的证券市场。今年日本股市终于走出这35年了，创下了历史性纪录。</p><p>但网上很多人还在说，我从经济数据里好像没看出什么状况来，这就是我们说的“信息差”，因为有时候你知道人的理解，对社会的理解，对经济的理解带有惯性思维。前几年我经常普及的一点是关于日本的理解，很多人总在想经济增长，有没有一种可能性经济不增长也很爽呢？比如说中国过去三四十年改革开放之后我们习惯的就是经济要增长，经济不增长我们就很难过，你有没有想过一种不增长还会把蛋糕吃多的方法呢？答案是分配，你怎么老想着分工、努力、工作、干活儿、挣钱、增长，有没有另外一种可能性是进行再分配？</p><p>你对日本的理解为什么要增长？用我的话说在过去30年的时间里保持着这块蛋糕没有变，但现在远端利率抬起来的根本原因是因为年轻人可以吃多了，年轻人为什么可以吃多了？你们知道2012年日本的死亡数据是什么吗？你有注意过他的人口结构变化吗？到了今天为止，你突然之间发现日本现在招聘怎么会是应聘的在下面坐着，招聘的在上面站着？放心，中国现在不是招聘的问题，是HR砍人的问题，这种变化的根因到底来自于什么？其实很多人只是惯性思维，你不一定能看懂世界。</p><p>过去40年已经发生翻天覆地的变化了，从2016年开始，中国也不再是过去40年的中国，美国也不再是过去40年的美国，日本也不再是过去40年的日本，东南亚也不再是过去40年的东南亚，你资本运转的逻辑框架都在发生着巨变，而这种时刻下，如果你保持着过去的思维，你并不能理解我在讲什么。</p><p>我只能说，大家一切看缘分，我不需要完全说“付总在胡说，我并不认同”，无所谓的，你能听懂你就听懂，你能早理解你就早理解，早理解你就能顺着这条线Get到2016年之后世界发生的巨变。</p><p>最新的美国大选，特朗普重新上来，但这次上来跟2016年又不一样了，因为他比2016年变的更加右翼化了，2016年大的政治转变本质上就是逆全球化和右翼化。2016年我把我自己的书稿整理过一版，当年也没空没时间把这个东西出版，去年因为我们家孩子回来以后做了传媒公司，原则上来讲我就把书稿送给他作为传媒公司的一部分出版业务去做，这就是大家后来见到的《见证逆潮》。但这本书不完整，全文将近70万字，你们拿到手的只有50万字，中间差不多有20万字被删减掉了，这20万字其实非常关键，涉及到我们对世界大类资产顶层逻辑的核心框架，金字塔究竟是什么？底层是我们的所有资产和市场，市场其实是在框架中最底层的，大家天天想问的房价的上涨、股票价格，这实际上是金字塔中最底层的。</p><p>稍微往上一点有人说宏观经济很重要，尤其是中国2008年次贷危机结束之后，中国的投资人开始发生巨变，2008年金融危机之前，中国大部分投资人讲的是“擒龙大法”，如何抓涨停。但2008年的次贷危机，全球的冲击使得很多从事金融交易、资产交易的人开始意识到，原来全球金融市场是这样的，是联动的。自那一刻起，真正意义上的金融才开始在中国慢慢生根发芽。</p><p>稍微有人开始意识到宏观经济的重要性，当然像现在证监会的首经团队中，36个首经里，我一直说我是那个最不正经的，因为我又不是搞学术的，我也不是搞政府出身的，我是市场一线的，我们对很多问题的理解是完全不同的。</p><p>前两天的时候，在Fox News上，本森特和几个诺贝尔经济学家在那儿争吵关于关税作用的时候，你就突然间发现，一个站在市场角度上的人理解关税作为一个手段到底起到什么样的作用，和那帮老学究们去讲的，甚至跟在座各位在新闻联播上看到的关税描述“美帝国主义打关税，使得老百姓生活在水深火热中”，你会发现好像你聪明点的话就知道好多东西并不对，这就是差异性。这次特朗普组成的第一是实权派，第二是通杀了，可以理解右翼化已经完全没有牵制了，第三上来的全是实干派。你猜后面的结果是什么？这场仗可不好打，比2016年那一届还难拿。</p><p>再往上是什么呢？有人说终于讲到了政治，没错，再往上是政治，民主党、共和党、全球政治的变动。但再往上的顶层，金字塔的最核心是什么东西？实际上是意识形态。</p><p>我教很多研究员说你们在研究世界经济的时候别盲目地做简单的对比，我估计很多研究报告都会犯这样的错误，动不动就做对比，和70年代、80年代做对比，这种对比纯粹写报告凑字数的，换成我的角度，我都不会看完直接撕了就扔垃圾桶了，我其实挺心疼这些券商研究员的，为什么呢？是个事儿就得写个报告，写个报告就得好几万字，好辛苦，结果还没人看。</p><p>顶层断代，也就是大家经常讲的周期性的断代到底是什么？你记住一点，顶层的断代是意识形态，社会政治的发展本质上是群体性意识形态的周期，也就是大家学过的思想政治课中的“左”和“右”，左倾右倾、左派右派、左翼右翼、集体个体，这些东西的变动才是世界经济周期的最大变动。</p><p>当前是什么？大领导讲的那句话很对，百年之未有大变局（百年未有之大变局），基本上就是1929年大萧条到二战后完整一个周期的结束。全球从二战的极端右翼，慢慢发展到中右，再偏向中左，再到差不多这20年左右的极端左翼化，最终导致重新开始右翼，这个世界很有意思，没有任何方向是绝对正确的。</p><p>我一直告诫大家，你们不要在网上争吵，我站在左边，你站在右边，PK，非得讨论出谁最牛逼，谁最正确，没有。就好像你想找个女朋友，又漂亮，腿又长，胸又大，腰又细，还有钱，还特别爱你，你想多了，挑一样就行了，完美主义哪儿有？最终的结果就是在运动的过程中对政治造成影响，进而对经济造成影响，进而对金融市场造成影响，一定记住金字塔的逻辑。</p><p>大部分时间我们不用Care顶层，因为在过去百年，顶层的方向是固定的，就是从极端右翼不断向左翼在运动，所以顶层方向不变的情况下就会形成下面的一套运转逻辑。</p><p>比如说以美国为代表，你们应该看到Ray Dalio关于债务危机的那本书，里面有个利率曲线，二战前我们的利率就是0，到80年代利率达到顶峰，2008年次贷危机到疫情期间利率再次达到0。利率的低点到底是什么意思？为什么在过去的百年历史里，利率的低点总是战争的起点？是有原因的，因为利率的本质实际上就是贫富差距，利率越低的时候，贫富差距越大的，利率越高的时候，贫富差距越小的。</p><p>当然，我们每个人都是屁股决定脑袋，比如大家手上拿着一堆金融资产，拿着一堆杠杆，我可以告诉你，你永远高呼的是低利率是对的，就好像大家对于美国的理解一样，永远认为美国在过去的40年的逻辑就是不能加息，加息就崩溃，崩溃就降息，利率永远是低的，美元永远是Carry的借贷方，但你从来没有想过这个逻辑会变的。</p><p>几年前我跟很多人讲的时候，我说你记住一点，中国从高利率变低利率，海外从低利率变高利率，所谓的几毛档还动不动说付总说了高利率是多少，4-5都是高利率。低利率是多少？0、1、2有多大区别吗？没有的，这是关键的点。有人说非得纠，把我的话直接变成了付总说的，中国不会加息，永远降息，美国永远加息不会降息，降一点加一点，加一点降一点，这不很正常吗？比如特朗普上来了，明年有没有另外一种意外性呢？比如说降了50，降了25，大概回到4.75，5的水平了，突然间又抬回到5.25了，这不正常吗？4和5的纠结不重要，重要的是他不会再回到0、1、2了，这是很关键的。</p><p>对于劳动力来讲，利率是很关键的，如果利率的抬升来自于劳动收入的增长，这是好事情。你想想中国，你把时间拨回到20年前，利率高不高？那时候你难受吗？不难受。现在利率低不低？低，你难受吗？你难受。为什么？所以你要知道是通过劳动获得收入还是通过资本杠杆获得收入的，你对利率的感觉完全是反的。</p><p>但是整体社会去讨论贫富的时候，贫富主要讨论来自于劳动价值，简单讲，天天外面送外卖跑滴滴的，他们就是失去的一代，在过去的二三十年里，靠劳动力的就是被淘汰的一代，没办法，这是社会发展的必然结果。但是当这种矛盾压力大了，就会转化成社会矛盾，甚至可以通过选票转化成对政治的影响，对意识形态的影响。所以贫富到极端的时候一定会进行修正，无论是极左的贫富还是极右的贫富，都会最终产生矛盾，这就是社会运转的规律。</p><p>过去百年发生的这一轮大周期就是完整的周期，到2016年表面上看叫中美贸易战，表面上看是中美两个大国之间所谓的对抗和博弈，其实是全球各个国家内部的矛盾展示，对内是内部的分配，对外是外部的分配。在这个背景下，战争的风险将加大。</p><p>前两天，我们也看到了，人类历史上第一次使用了洲际弹道导弹，无非就是前面没挂核弹头而已，仅此。你觉得这个东西离你还很远吗？我们这一代可以说是幸福的一代，但我们这一代也将经历不常见的百年之未有大变局了。</p><p>很多人在思考这个世界的时候，真的不要以为我们现在还能回到过去，回不去了，那个全世界包容融合的，不断左翼化推进的，全球化不断推进的路径，这个时代彻底在2016年已经开始结束了。</p><p>2016年很多人判断是错误的，总觉得2016年只是一场贸易战，那时候我从华盛顿调研两周回来以后，我跟很多人讲，不是贸易战，不是说哪个党派，民主党、共和党上来对中国就会温和的，不会的，两党的共识，他两者之间只存在着我比你左一点，我比你右一点，但咱俩都是往右的。美国政治的变化核心在于不管民主党和共和党，对中国的压力都是一样的，只不过是他俩谁压力多一点谁压力少一点，谁在外交上压力多一点，谁在经济上压力多一点，仅此而已。</p><p>对中国来讲现在也麻烦，在过去的80年代、90年代，西方在不断包容融合右翼化，同时当时的中国也在不断地往右走，当然此处不是指的中国的右倾。注意西方右翼概念和中国完全反的，你们不要觉得是错误的，如果你觉得错误的，你先了解了解什么是左派右派、左倾右倾、左翼右翼。如果你不能理解这个东西，你肯定对左和右在中国和西方的框架里完全是颠倒的。</p><p>中国也是朝着包容、融合的，所以我们才有了非常好的入市、WTO、改革开放等一系列的操作。我经常说家庭中女生是天生右翼，右翼有一个典型特征，右翼可以叫民粹，可以叫国家主义，可以叫爱国主义，极端右翼可以叫纳粹。但右翼的特征很明显，“我没错，都是你的错”，这就是右翼。</p><p>家庭中女同志天生带有，当然我不是歧视各位女士，这是你们DNA里带的，两个X里带的，如果家庭中男生是左翼，家庭是幸福的，什么意思呢？“老婆，没事儿没事儿，都是我的错”，男生是个左翼，家庭很好，左+右。</p><p>如果男女都是左翼，这简直是幸福无比了，男生回家了，女生把拖鞋一放说“老婆你打会儿游戏，我正做饭呢，一会儿做好了叫你洗手吃饭”，这个男同志真的去打游戏了，吃完饭了说“你歇一会儿，看会儿剧，我来把碗洗了。”你可千万别当个大直男，锅一甩又去玩儿了，不行，时间长了，她会右翼化的。</p><p>此时你也表现出左翼特征，你家庭就是融合的。家里如果两个右翼就完蛋了，都是你的错我没错，凭什么说是我的错？就是你的错，就是你做错了。直男碰上女生，一般来讲没啥好组合，两个右翼就是战争，打架到离婚。</p><p>不要认为这是在讨论家庭、婚姻，同样在讨论国家，同样在讨论全球。当国家和国家之间的组合出现统统左翼化的时候，就是包容、融合、全球化共同增长的俱佳的历史环境，当全是右翼化的时候，就是战争。</p><p>我们现在的大麻烦在哪儿？就在这儿。全世界在过去5、6年时间里已经陆陆续续都在右翼化了，右翼化的特征，政治的重要性已经体现出来了，选票回归传统的特征已经体现出来了，反移民的特征已经体现出来了。</p><p>我之前说过，这两年全球著名的交易就是“多美国，空加拿大”，原因就是加拿大的小土豆放了那么多印度裔进来，就完蛋了，加拿大的核心矛盾是什么？经济增长创造了五个蛋糕，原本加拿大的国民可以一人吃一个，现在放了10个阿X进来，加拿大问题是分配，当分配不够的时候，一定会趋于保守，一定会趋于右翼化，一定会趋于反移民。</p><p>各国都一样，70年代80年代的时候，英国那时候有过排华，现在又开始反穆斯林了，这正常。世界的动荡不是简简单单表现在单纯的资产上，前两天英国又出台了新的政策，你只要非英国国民的，原则上来讲要交遗产税的，英国政府也要收你的遗产税。我之前跟很多富人说，别天天琢磨避税了，包容融合的时候藏点私房钱是没事儿的，当都右翼化的时候，你再藏私房钱你就完蛋了，现在全世界的大麻烦是什么？找个税率低的地方该缴的缴。当年特朗普上来的时候20%只要你愿意回流美国，全部合法化，你看有多少资本往回回流？所以你们知道左翼和右翼大概的框架和特征，这才是我那本书里的真正精髓，但被删掉了。</p><p>你把它理解了，你对应的穿透到经济上，穿透到利率上，穿透到资产上，你会门清儿的，这就是大类资产的精髓，真正的精髓。你要问这东西谁创造的，索罗斯那批人，本森特那批人，整体框架大家都是一样的。</p><p>我到底在讲什么？其实我就是在讲回顾，因为从那一刻开始，几个问题就在陆陆续续暴露。美国在进行重构，特朗普上来以后方向继续重构，这里面其实就涉及到民主党为什么是错的，民主党的很多政策为什么是极端左翼，左翼政策不一定是对的，右翼为什么会使得美国进入到增长通胀利率的环境。</p><p>包括有些华人带有意识形态，我只能说一句话，我们作为全球投资人，最佳的选择是没有任何意识形态，对我来讲，我非常清楚左有左的问题，右有右的问题，左有左的好处，右有右的好处，我不会站在任何一侧。我的答案是全世界选择往左走，我就知道我的交易路径是什么，全世界选择往右走，我也同样知道我的交易路径是什么，但我绝对不会站队说谁是绝对正确的，否则的话就会压错宝。世界有时候不一定按照我们的意识走，美国的这次大选也是典型的结果，其实我也没想到，美国右翼化的速度会这么快，推进速度会如此迅速。本来想的是民主党还能够撑一撑，但现在来看基本上是完败的。</p><p>对于中国来讲，当前我们面临的问题不仅仅是外患的问题，还包括了内忧。综合在一起，会有一个非常奇特的答案，之前很多人问我中国到底和日本一不一样？网上这句话炒的纷纷扬扬的，有人说中国就是会走日本的老路，有人说中国不会走日本的老路，你要问我正确的答案，我会告诉你这个问题没有任何意义，为什么？太泛了，如果拆的细一点我能回答你。比如你要问中国的居民部门和日本的居民部门一不一样？我的答案是一样；中国的企业部门跟当年日本的企业部门一样不一样？我的答案是不一样；中国的政府部门和当年日本的政府部门一不一样？我的答案是不一样；中国的金融机构跟当年日本的金融机构不一样？不一样；中国当前面临的国际环境和当时90年日本面临的国际环境一不一样？不一样。</p><p>你说最后的答案是什么？如果站在纯居民角度来讲，我可以告诉你99.99%可以复刻，但如果站在大的国际环境上来讲，可能得到的是完全不同于日本的最终答案。用我的话说，你是说一样还是不一样呢？没有意义。</p><p>所以我大部分时间给你们分拆的是日本居民部门和中国居民部门的比对。而日本的企业部门、金融部门、发展模型我也给大家分享过，去年你们应该都知道了，巴菲特买三井、三菱、丸红、伊藤忠商社，大笔发行日元债券购入到日本的三井、三菱、丸红、伊藤忠这些资产中，他到底在干吗？</p><p>那时候第一财经找我说付总你去讲讲巴菲特为什么买，我发现很多评论人员单纯在讲三井、三菱、丸红、伊藤忠资产怎么样，稍微聪明点的会讲到当年的商社们是日本的海外资产，是日本Carry trade套息交易的主要收入端。再聪明一点的会讲到巴菲特在参与日本过去40年存量财富的再分配。</p><p>我可能明年把我们家小儿子送到日本去，我跟他讲的很清楚，我不需要你去学习人工智能、AI，为啥呢？你好像没那么聪明，也不是IT技术男，你把日语学好，能考上应庆就不错了，那里面都是一些日本传统贵族的姑娘，你娶一个就行了，最好她们家都是80岁90岁的，你就躺赢就行，等她们家80岁90岁的明后年一挂，房是你的，股权是你的，土地是你的，财富是你的，存款是你的，咱们就参与日本存量40年财富再分配。巴菲特是用钱去参与，我们用人参与，本质上都一样，你买股票，我把儿子嫁过去，这都是参与财富存量分配。</p><p>你们要明白日本的核心究竟是什么？日本的核心是参与分配，而不是参与增长。很多人不太理解，因为他在国内没参与过分配，永远都是增长处在哪个环节，我距离权力近一点，资源近一点，资本近一点，我就多吃点，卖劳动力的就少吃点。当经济增长增速不够的时候，最底层就没饭吃了。经济增长5，可能各个阶层的体感是完全不同的，所以网上会有些人说经济数据造假，真的造假了吗？也许没有。5代表的是整体的蛋糕，而你的体感仅仅代表你的阶层。</p><p>在过去几年中国经济的调研中，我们到底做对了什么？ </p><h2 id="中篇"><a href="#中篇" class="headerlink" title="中篇"></a>中篇</h2><p>在过去几年中国经济的调研中，我们到底做对了什么？</p><p>第一，在2020年疫情后，那时候长白山论坛我跟大家讲的很清楚，我说的非常赤裸裸，中国居民资产负债表出现问题，那时候券商们都很Happy，因为他们永远需要Happy，只能做多。</p><p>但对于我们做Hedge Fund出身的来讲，我可不能这么做，我这么做我就完蛋了，我的钱在里头。10月8日之后，有人在里头吗？千万别自己麻醉自己，那都扯淡。网上一般来讲，拿所谓的这种东西蒙蒙别人可以，你自己信了就完蛋了，就跟当时“6000点不是梦，1万点刚起步”，记住那话是说给散户听的，你信了那你就完了。核心是什么？从我们的角度非常明确地大家，大家的预期很高，但现实很残酷。</p><p>那两年跟各家公募基金每个季度做交流的时候，他们没法去理解现在的经济情况，比如说那时候我跟他们讲网约车司机、外卖，那两年我大量的调研样本参数是底层。经济增长消费扩张升级的时候，调研样本是富人先进五星级酒店，富人先买超跑，富人先吃海鲜，然后你的样本参数是下沉的，到最后是老百姓吃上海鲜，老百姓开上汽车，老百姓进五星级酒店。</p><p><font color="red">但是当经济收缩的时候，倒过来的，第一步先收缩的是底层</font>。我前几年我说每年现在新增几千万的网约车司机，你们都没有想想人从哪儿来的吗？有人说了，农村劳动力进城，我说都啥年代了，还农村劳动力进城，这又不是你当年搞大规模基建城镇化建设的时候缺农民工，把农村劳动力大规模转移过来。现在的农村你去看看，哪儿还有劳动力，除了老弱病残幼以外，还有劳动力吗？<font color="red">你就没想想这两年突然激增的两千万的网约车司机这些人从哪儿来的？答案很简单，中产阶级的陨落</font>。只不过是你的阶层不一样，你看的问题不一样。</p><p>很多人的调研很有问题的，很多人说美国通胀导致美国居民部门水深火热，我问他为什么？他说你看我打电话问了我在美国的朋友，他们都很惨。我说那你美国朋友的样本是个什么状态？他一描述，我说那当然惨了，他们以前爽的时候是老公在中国挣着通胀的钱，老婆在那边花着通缩的钱，享受着社会福利保障体系，还不交税。现在倒过来变成了老公在国内挣不着钱了，海外人家上门给你弄个草皮清理一下要多收你50美金一小时，你的钱没增长，花的钱多了，你当然难受。我要是那个铲草皮的，我会告诉你那点通胀算个屁，5块钱的三明治涨到7.5元，翻了50%，对我来讲不重要，重要的是我从你们家弄个草皮，挣50多一个小时，劳动价值提升了。从事劳动的人就很舒服，从事单纯支出的人来讲你就难受了。</p><p>你要调研的样本是一样的，前两年的样本收缩的是时候是底层先吃苦，但对宏观经济数据影响不大，你们记住一点。</p><p>我就说网约车司机，如果你在广州做调研，他们的特征就是有钱没钱，今天都吃龙江猪脚饭。但注意，北京北四环的网约车司机吃的中午盒饭到多少钱吗？15块钱送瓶水，还带锅包肉，猪肉炖粉条子，耙子肉，嘎嘎香。但你记住一点，千万别问肉多少年，问你就吃不下了，因为基本上都是80年陈酿拉菲，一定是冻肉，一定是冻了20年、10年以上的肉，不然怎么那么便宜。</p><p>所以你们也不要瞧不起预制菜，我觉得预制菜很好，没有预制菜老百姓日子更苦，有预制菜老百姓好一点，为啥？12块钱能吃饱，还能吃上肉，吃上足够的蛋白质。</p><p>你就记住一点，当你都吃12块钱了，你还注意肉多少年吗？现在统计中国在讲需求的时候很有意思，我从来不会用一个数字，从来不会用中国的CPI，中国的CPI一直有一个大的问题，当年宏观经济数据设立的时候中国老百姓第一目标是解决吃穿，解决温饱，所以对我们来讲，物价中的菜价、猪肉价格、粮食价格、油价波动，我们看的比天都大。</p><p>那时候一般来讲，领导们下去做慰问的时候，第一件事儿都是去家里掀锅，动作都很标准，打开锅看看你吃啥，这个动作其实就是因为当年我们的重要问题是解决老百姓的吃穿住行，所以我第一件事情就关注你吃的情况。但改革开放下来以后，到现在为止，吃如果都成问题，那就是大问题了。</p><p>为什么不用数据？因为数据中这部分的波动很大，这部分的波动已经跟需求没关系了。比如说城市里洪涝，那蔬菜价格那几天就会暴涨，那种变动其实影响已经不重要了。</p><p>我们现在讲需求，比如中国经济从2019年获得大问题，非常麻烦，你们不要觉得现在的经济问题是现在，是2019年就开始了，在今年是恶化的，所以今年的情况你们都不知道有多严峻，数据里已经告诉你，非常严峻，而在调研的时候更严峻。</p><p>8、9月份的时候，必须转向，那时候很多人不理解，因为过去的一年大家都养成了一种习惯，这也是右翼化的特征，右翼化的特征就是我没错都是你的错，我不许你说我错。你想想，家里的老婆你敢说她错吗？到最后男生就是出门抽烟，不吭。</p><p>过去几年我们的右翼特征当中体现出来的，大家都有一种习惯，国内经济不许说不行，谁说不行谁就是叛徒，谁说不行谁就是不爱国，谁说不行就网上攻击他。问题是诞生了另外一种生意，什么生意？你们懂得，你只要说这东西遥遥领先，8000块钱的东西就能卖18000。</p><p>在我的角度看很简单，这是社会的整体意识形态变动的核心，但是真正可怕的是如果大家都不去讲，到了关键的时间点上，会使得所有的信息反馈形成谬论性错误，最后你们会发现，连决策层都做出错误判断，那就完蛋了。</p><p>到最后谁是那个误国误民的，历史会有正确评价。最上头在关键的时刻该做调研，该让你发声，还是要发声的。8、9月份到底中国发生了什么事情？大部分人在当时并不了解，8月27日开始，你们关注一下所有的金融峰会和论坛上，全部让你敞开了讲中国经济的核心问题。</p><p>当然只是说我当时在大湾区论坛上讲话时间不够长，大家传播更为广泛，但不是说我胆大讲。当时下午讲完之后，晚上就有朋友发“付总，这能讲吗？”我说“如果能讲，你要想想为啥？”24小时都不到，大概12小时左右，第二天早上易纲同志在上海的外滩金融论坛上马上跟你讲当前中国经济的核心问题，通缩的风险，以及经济有效需求不足，所有人从8月份到9月份，用的词都是一模一样的，中国经济当前核心问题有效需求不足。其实我想说，有效需求从2019年开始就在下降了，而此次的有效需求非常麻烦，可以说是我们改革开放之后的百年之未有大变局。</p><p>我在9月初的时候，提的政策建议里，我都没有用“解决”，我用的是“对冲”。9月11日我怕大家对这个事儿理解不深刻，当时演讲的原题目是要注意有效需求问题，赶快出政策对冲，9月11日我把东西又给你写出来，再讲了一遍。</p><p>但那时候会发现社会上的整体风气依旧沉浸在“不许说我们不行，我们挺好的”。到现在为止，现实情况是什么？你觉得资本市场起来这一下，猛冲这一下跟经济好有关系吗？恰恰出现的情况是经济差才来了这么一下，而不是经济好。现在出的所有政策有没有达到目标呢？有一讲一，没有。能不能达到对冲的目标呢？我觉得对冲一点点，解决肯定不可能，因为你如果仔细地了解这次有效需求的复杂性，意思是告诉你这事儿挺难，因为里面掺杂了中短长期的因素。其实在疫情后，我们当时就做出中国国内经济的预期很高但现实很差的根因也来自于有效需求背后的矛盾。</p><p>有谁记得前两年我在各个公开演讲中，一直跟你强调国内经济的核心变量是什么吗？我老跟你们讲到人口的问题，老跟你讲到老龄化的问题，几年前跟你们讲到现在为止，通过金融市场、资本市场、银行背后的数据大概都能看明白到底发生了什么，老龄化对于中国、韩国、日本都不是好事儿。</p><p>西方经济研究中研究移民政策，中国、韩国、日本研究人口出生，因为这几个国家的历史决定了他不会有大规模移民的。你别动不动就来一句，老龄化了人口出生少了，北欧怎么怎么样，好家伙，你这一刀切出去，你玩过《文明》吗？马上《文明》就要上新了，大家可以Steam上下载玩一玩，开局资源要素是不一样的，最后你组成的文明和帝国发展战略也是不同的，别动不动做瞎对比，没用的，这就是中国经济的大问题。</p><p>这是所有这次有效需求的组合，包括下面我们对的政策建议，不用看了，意义不大。</p><p>核心的就用这两张图够了，很简单。</p><p>第一，我不会用CPI这个数字就是因为里面含了实际上已经跟现在有效需求没太大关系的。用的什么呢？把高清大图放大到2007年之后，我们用的是扣除食品和能源以后的通胀。简单讲，我要关心的是老百姓吃饱饭以后没事儿干的价格，你没事儿干的价格高，就说明你的有需求好，你没事儿干的价格低，就说明你有效需求差，就这么简单。至于吃饭这件事情，非常容易解决，龙江猪脚饭。</p><p>说实话，你们点20块钱30块钱的外卖，成本价格就4块钱，4块钱你都吃的嘎嘎香，可以想想，食品工业发展到现在为止，防腐剂、添加剂一加，成本是很低的。当然了，做不到既要又要还要，既便宜，又好吃，还健康，还得是厨子现割肉现做，你想多了，你要想吃现割肉现做，你掏50，我去你家做，你就掏5块，那就是预制菜。你们要明白，这是解决吃喝拉撒很重要的因素。有的时候，左右两边不可共同都有，健康和便宜不可能同时存在的，所以健康很贵的。</p><p>大家先看放大版的数字，2019年是整个平台的顶峰期，2019年后的典型特征是总需求曲线一直在降。10月份的数字是负的，没有疫情，没有2008年金融危机的外需崩塌，从2002—2024年，长达22年的时间里，在没有任何重大风险的情况下，中国第一次出现了有效需求为负。负数啥意思？非常简单，中产阶级节衣缩食，这个宏观数据就告诉你这个答案。</p><p>刚才我讲了，底层老百姓是一点点往上反馈的，不会很快地作用到宏观经济数据里，所以你们在疫情后看到的这个数字大平台还没有快速往下掉，但当时的底层（网约车司机、送外卖）其实一点点在痛苦，但那时候去金融机构做路演，他们都没有这种感觉。今年所有金融机构都觉得很痛苦的原因是啥？因为他们被裁员了，他们被降本增效了，他们被要求奖金退回了，板子打到了他们的阶层之后，他们开始感受到了痛苦。你知道这代表什么吗？今年经济为什么从3月份之后这个数字一路掉下来，答案非常简单，今年的大麻烦是中产阶级陨落。</p><p>别说今年了，这两年底层慢慢“拼多多”，现在应该是中产阶级开始“拼多多”，今年最好的样本参数调研应该是隔壁的杭州，其实上海也可以做调研，差不多。3月份降本裁员裁老张，6月份降本裁员裁老李，我就问你老王怎么办？回家跟媳妇开个香槟庆祝一下，老张、老李被裁了，我没被裁，是这样吗？现实的情况是回家赶紧跟老婆算账，国际学校多少钱，孩子多少钱，面膜多少钱，健身房多少钱，该花的不该花的多少钱，房贷欠了多少钱，一算账列一个数字，假设被裁员怎么办？算完跟老婆说，你的面膜SPA中心别去了，李佳琦的直播间拍一个糊脸上差不多。然后你开始节衣缩食收缩，你的收缩是要命的。记住一点，中产阶级的收缩对整个宏观经济是冲击最大的。</p><p>底层真的是今天干个活儿，跑跑，有钱挣没钱挣都得吃个龙江猪脚饭，反正也不贵。多挣钱了，跑个单王，跟老板说“龙江猪脚饭加个蛋”，今天各位在外卖平台上给打赏10块钱就是龙江猪脚饭加个蛋来个腿。</p><p>我没有太多投资的群，但我会潜伏在全国外卖小哥、网约车司机的群里，因为他们是我广大调研阶层的样本参数。我甚至还有个样本参数是全国最大的美容连锁店的老板，我经常拿他当调研样本，为啥？他背后的2000多家店，以及店后面的那些女人们，那就是标准的消费调研样本参数，他的生意好经济就好，他的生意差经济就差。杭州今年上半年应该有500家美容店要转让，你们有谁要的我给你们搭个线。你们会要吗？你要知道，不管是正宫娘娘还是非正宫娘娘，都没钱了，她背后的男人们都没钱了。</p><p>你说消费降级吗？其实不仅仅是降级，你们一定要记住，这个大周期的结束很可怕的，因为这是大部分中国投资人里第一次经历这样的周期。</p><p>中国证券市场反应非常精准，不要再看上证综指，那个意义不大的，我们经常讲有结构性行情，一点错没有，结果里对经济、政策的反应非常准确，不是不准确，是非常准确。所以说你真正在这几年对宏观经济的理解，就是告诉你一句话，没有增量，就是结构，对结构怎么把握？这里的结构可不是40年前的结构。</p><p>前两天我跟一家公司说了一句话，黑色线是PPI，相信在座各位都明白，PPI是什么呢？简单讲就是企业利润，PPI为负，大家就是在拼命地价格战、竞争，我卷你，你卷我，上游卷完卷下游，下游卷完卷客户，卷到最后就卷到谁能活着，这就是PPI为负的答案。</p><p>中国这二十多年来，从2002年开始，我们的经济从来没有遇到大问题的根因非常简单，红色线永远存在，上面的红色线存在。</p><p>中国经济的任何供给问题都是有需求在的，有内部需求有外部需求，外部需求是全球化对我们的支撑，内部需求是什么？房地产大佬现在好像在里头踩缝纫机，他当年曾经说过一句经典的话，“什么房地产、供应、需求、土地开发、城镇化，扯淡，就一句话，我们有庞大的80后”。我觉得他说的非常诚恳，因为需求内需到底是啥？本质上就是人口收入的债务函数、杠杆函数。</p><p>所以你就知道，中国内需庞大的一代是谁，就是这批80后。是“文革”之后人口基数最大的那批，可以花3个钱的，可以花过去时，上一代人给你留下的6个口袋。可以花当下时，你的企业老板给你的收入函数。可以花未来时，金融机构给你们的杠杆。你们是花三代的钱，一代的人口高峰，那就是中国内需的所有底牌。中国经济的任何问题都可以由这部分人买单，所有债务问题、经济问题均由这代人买，那就不会有真正意义上的经济的风险。</p><p>比如说2008年，现在也会发现，有些政策跟2008年很像，房地产放开、限购放开、购置税减免、消费补贴、刺激消费，但你们都会发现，还能产生2008年效果吗？能回去吗？我可以明确告诉你，回不去的。</p><p>你们记住一点，那句忽悠了老百姓这几年的一句话叫“做内债不是债”，我不知道谁让这句话传出来的，很多人在那儿喊“内债不是债”，这是我们家祖传对联之一，下句是什么？“内债不是债，只要人还在”横批“万税万税万万税”。任何国家的本币债务就是对自己本国居民的征税权，税等于什么呢？税基×税率，税基等于人口和收入函数，一叠加就是人口收入×税率，这就是税和债务。</p><p>中国现在的化债化什么？要么增加税率，要么增加人口，要么增加收入，人口不增，收入不增，答案只有一个，增税率。那你猜你的遗产税跑得了吗？你猜你的房产税跑得了吗？想啥呢，年轻人不生，咱收不着他们了，那就收老年人的，一样的。你要知道，债务不会像你想的“内债不是债”，你想多了，本质是税源。</p><p>政府债务驱动的投资行为只要能收到税，所有投资行为理论上都是合理的，2008年两个经济学家在那儿讨论高铁到底应不应该修，当时他们俩的讨论中我站后者，当时应该修，因为修不修就看能不能征到税，但他俩的计算方式是不一样的。其中一个是按照标准的市场经济去计算，市场经济计算税就是这个项目能不能挣钱，杭州到上海这条高铁修完了，成本核算完，二等票需要150元，老百姓能不能承担得起，能承担得起能运营得起就会项目回本。所以他经常挂在嘴边的口号就是如果项目不能挣钱，那原则上高铁是浪费的，就是纯纯的债。他这句话在当年是不对的，因为中国非常奇特，中国的税分为间接和直接的，你刚才所有的成本核算是直接税，但中国的特色是直接税上减免，增收间接税。这就给中国老百姓一种很好的感觉，我们的高铁又快又好还便宜，成本150的票价，我们只需要60就能坐了，老百姓觉得生活便利。</p><p>你咋那么天真和可爱呢？我就问你，剩下的65块钱谁掏？然后就来一句，内债不是债，这钱国家掏。咋可能呢？这钱谁掏？你们知道为什么所有基础设施一定跟着城镇化走吗？一定建在新城吗？一定高铁内新城的土地很便宜，圈完了之后，三通一平做完了，十字格一画，土地一卖，盖上房子，80后1万块钱2万块钱买房子，什么意思？这叫间接税，我们是间接收税补直接。</p><p>核心是什么？核心就是只要能收上间接税，所有的投资政府基建全能做，间接税收不下来，项目就完蛋了。你们猜中国以后还会有大规模基建吗？我可以明确告诉你不会有了，只有修修补补，因为最大的税源税基没了，这就是2015、2016年中国经济里暴露出来的最大问题。</p><p>知道是什么吗？年轻人，你们咋不生了呢？你不生我咋办？你不生税咋办？当时的人口拐点，大规模老龄化开启，年轻人不再生育，这将是巨大的麻烦，因为我们所有债务的兜底没了，谁给我们兜？此时很简单，去海外收税，所以大家就明白，我们要走国际化，国际化的本质就是向海外征税。政府、企业、金融均向居民征税，记住一点，企业征税就是所谓的商品通胀，1块钱的东西卖2块钱，就是向居民部门收1块钱的税，但国内PPI持续为负，代表着企业征不上来税，企业恶性循环，企业债务严峻。PPI为正，代表着企业可以通过通胀、价格转移的方式向居民转移，也就是向你征税。</p><p>只要居民部门在，通过供给端的调整，都会带来周期性的PPI恢复，简单讲，供给侧改革一搞，房地产一推，老百姓一买单，企业的债务就不是债务了。所有政府的债务、企业部门的债务、金融部门的债务，只要居民部门能扛得动，都不是债。</p><p>你们知道现在的大问题是什么吗？我现在说了某一个行业，你知道有些人犯的巨大错误是什么？到现在为止跟我讲，付总PPI为负很正常，市场化竞争，优胜劣汰，弱者淘汰，强者赢家通吃。我说现在不是的，现在会出现一种情况，都得死。他没懂，在这个图里你们看得懂吗？</p><p>一是，看2011—2015年周期里，2008年4万亿基建，加杠杆，把有效需求扩的非常好，那时候政策一出，绝对管用。现在很多官员犯的错误是觉得老百姓还是曾经的老百姓，还用同样的政策。当年的政策是我准备50万孝敬丈母娘准备买房子，结果你跟我说首付只需要40万，那你知道年轻人怎么做吗？40万首付，10万装修，还是花50万。现在的情况是什么吗？告诉他不需要50万，只需要499，年轻人说我不缺那10万，我现在缺那40万。</p><p>杠杆到头，消费是完全两个概念，用加杠杆的方式刺激经济，这个手段将失效，我现在唯一投票的全部是降杠杆刺激经济政策，比如说降低存量房贷利率，这是扎扎实实的降杠杆，说白了是银行吐出钱来给在座各位每个月可以少还800、1000。但你还是说降低首付比例，大爷快来，加杠杆哦，我可以告诉你，加不动了，这就是核心。当年产能加上去以后供给过剩，主要是旧产能，出现36个月PPI，企业恶性竞争，破产倒闭，银行压力巨大。我们干了供给侧改革，然后行政性出清一部分产能，其实是转移到新产能上去了，使得供需把需求再一刺激，老百姓买单。</p><p>当年的大问题是这儿是一个妹子，白富美，下面是俩小帅哥，俩帅哥在那儿竞争，优胜劣汰，一个把一个淘汰之后，最终迎娶白富美，因为白富美需要一个帅哥，所以你们俩金正，胜者为王。这句话，充分的市场竞争后胜者为王，假设前提是需求不变，经济的这点活儿放到自媒体、网上真的搞坏了。充分的市场竞争后，胜者为王，赢者通吃的假设前提是需求不变，也就是妹子在，你俩竞争。</p><p>知道现在的数字啥意思吗？红色线没了，0，PPI如果扣掉疫情期间，持续从2019年之后为负，两个小伙子在那儿PK，目标是胜者为王，最后卷完了，剩下一个，摇头一看，妹子呢？你们等着看吧，这件事情必然是两三年后某些行业必然发生的，会真以为是胜者为王？你的大环境是什么环境？是有效需求面临着中长周期的收缩和调整，这种情况下市场如此恶性竞争和卷是没有赢家的，最后会爆发危机的。我把这话送给某些企业的董事长们。</p><p>跟往年不一样，往年任何过剩的市场竞争，最终都胜者通吃的原因是因为居民部门有效需求永远在，永远能加杠杆，永远能为你的企业产能和利润买单。最后只剩下一条路，你们知道是什么路吗？因为这条红色的线只代表着内需，如果国内的姑娘没了，就要迎娶海外白富美，所以他只剩下一条路，出海。这也是网上很多网友们很开心的，我们就是要出海，我们就是要拿下国际市场。</p><p>现在国际环境是什么样？是不是20年前、30年前全球往左翼包容融合的大环境，能让你出去迎娶白富美。当然日本的三井、三菱、丸红、伊藤忠等等，在90年之后就是出海迎娶白富美，问题是我们现在能不能？我相信大家心里都有杆秤，“想不想”跟在未来的大环境上“能不能”将形成激烈的碰撞，如果不能，国内没有有效需求给你怎么办？</p><p>现在所有经济问题是两个都存在，供给过剩也存在，有效需求不足也存在，我们需要解决问题，答案是必须提振内需，内需的核心就是进行再分配。政府和居民之间进行再分配，贫富之间进行再分配，债务和杠杆之间进行再分配，如果不做，那我们就是35年日本。日本35年周期怎么来的，你们最终知道答案了吧？还不知道，我都把儿子送过去了，你们还不懂再分配是什么意思吗？日本战争后获取所有资源要素（岗位、职务、薪资），战争后的第一代和第二代，到了2012年开始死亡，代际分配，老同志们死了，年轻人吃的蛋糕就自然多了，就这么简单了。</p><p>你如果能理解到这个的变动，你就能自然地理解到我在说日本经济的核心到底是什么，是代际分配，不是增长，光增长不分配那就是富着恒富、穷着恒穷。这话翻译到股市上你们知道是什么吗？上市公司不分红没增长的话，答案永远是富着恒富、穷着恒穷。00后指望着炒股来分60后的财产，你想多了，你还不如去萧山当个上门女婿来得更快一点，还不用努力，把自己倒腾的帅帅的，嫁进萧山豪门，财富代际再分配，躺赢，何必要天天炒股累死累活的，心里想着我能干掉60后，那都活成精了，你能干成他？换手跑的比你还快，一边喊着“年轻人快上啊，人生唯一一次机会，此次不all in梭哈，未来就没机会了。”他一边all in着，咱们一边换着手撤，让他们站在高高的山冈上。</p><p>市场跟经济是一样的，创造增量的同时也要进行分配，不配没有任何意义。有些事儿都是本质一样的，这就是中国经济当前最大的问题。 </p><h2 id="下篇"><a href="#下篇" class="headerlink" title="下篇"></a>下篇</h2><p>2006年供给侧改革，我提醒大家一句，有几个错误的观点特别强调一下。为啥说错误的？这观点用我的话说一定咱们要知道，不一定要让老百姓知道。</p><p>举个简单的例子，股票市场创造财富效应，用此来改变国运，这是不是外面经常听到的声音？你想啥呢？房子如果没有收入和租金的回报率和住的功能，那换句话说房子不创造自身价值的情况下，纯换手，依旧答案是富着恒富、穷着恒穷，能创造短期财富效应吗？能，就像2015、2016年我跟你们举过的例子，满仓all in梭哈，融资杠杆伞形都上，然后你发现股票一个涨停一个涨停，账户里全是钱，出门给老婆买了个包，财富效应。</p><p>然后呢？跌停的时候你知道你后悔买啥吗？你后悔股票没卖掉，放心股票卖不掉的，因为开盘就跌停了。你真正后悔的是，我没给老婆买这包就对了。我经常劝他们，辛苦你给你老婆买了包，因为她至少还剩个包。你要当时没买这个包，你连这个包都不剩了。</p><p>这种换手的游戏只有结果是富着恒富、穷着恒穷，而且后果会越来越差，中国就是典型的这个逻辑。不要把泡沫当成家庭财富去忽悠老百姓，这是扯淡的，背离收入的，背离企业增长和股息分红的，这种东西咱都心知肚明，就是为了来换手的，你把它当成家庭财富配置，会死人的，最后对经济会造成今年这种情况。</p><p>换手的时候你看着消费很爽，比如说我这儿给你举的房子，中国的房子上涨幅度最大的真的不是2008—2015年，恰恰是2015、2016年股灾之后房价是最猛的，那时候北京我记得最清楚，2009年炒房的时候，亚运村是17500，2015年年终的时候亚运村房价是25000，2019年亚运村的房价是10万，黑色线是同比上涨，70个大中型城市同比上涨，同比上涨+长时间累计就是房价涨幅最大的时候，所以我们就是2015、2016年那一波，房价带来了大家的消费预期和希望，但从这张图上你们可以非常明显地看到消费背离了收入，这种消费就是大家讲的建立在财富效应上的，但此时的财富并不是收入支撑起来的。</p><p>问题就来了，四年前五年前我拍过一些短视频，跟平台合作让我拍些短视频，我当时就讲得很清楚，<font color="red">房子如果纯换手，到底是什么东西？我200万买的房子，600万卖给年轻人，我拿走的就是年轻人未来40年青春的当期现金折现。我可以为我的未来40年潇洒了，他背上这40年的债务，他要还的。如果没有收入的增长，他要硬硬地还40年，他就是失去的，我替他多活40年了，就这么简单</font>。</p><p>股票价格也一样，咱们交换的叫时间价值，我是大股东，我现在拿走，我现在Happy，把你套在里面套10年，10年后能不能解套呢？也许解套了，你觉得你开心吗？你丢了10年。金融资产交换成本你们一定要注意时间函数，没有时间函数都是扯淡。</p><p>问题就在于，如果收入不增长，纯换，短期内创造的财富效应毕竟等于另外一批人短期内累积的债务。换句话说，我们爽了，他的债务达到一定程度的时候会造成全面的坍塌，整个资产不可能持续的，他买的房子800万买的时候，指望800万买，1000万卖给下一个年轻人，结果发现没年轻人了，下一个年轻人接不动1000万了，此时他的资产负债表就开始恶化了，消费开始出现断崖式的回归，这就是2019年后的结果。2019年后开始逐层断崖往下走，向着真实的收入回归。</p><p>千万不敢跟老百姓讲把股票、房子当成家庭财富，<font color="red">过去有年轻人的时候，他才是我们的财富，不管通过股票还是通过房子，年轻人就是所有人财富的来源</font>。说实话，中国的房地产涨了差不多20年的根本原因是啥？有一讲一，凭良心讲，任何的房子年轻人能买走，我们就拿走财富了，我的房子就是他们的负债，咱们所有人在吃的就一条东西，就是<strong>居民部门杠杆率</strong>，所有人吃的就是这根红色线。</p><p>有些研究员说，中国现在居民部门杠杆率比海外低，因为他单纯的对比数字。我可以告诉你不低了，你知道原因是什么吗？我们的杠杆背后没有高福利，高福利国家70%，低福利国家60%，你跟我说60%比70%低，你自己实际的杠杆压力到底是多少，你心里没点数吗？你的教育、医疗、养老，上有老下有小，你需要花多少钱你心里没点数吗？你是社会福利70年代80年代建立起来国家的居民部门杠杆率吗？不是的。从各种现象上去观察，这个杠杆率到头了。</p><p>资本市场很聪明，从2002年一直到现在，长达18、20年左右的时间，交易中国的消费升级，不管上证综指是3000点还是3500，不重要，消费板块大周期就是中国居民部门80后加杠杆这一带。</p><p>从2019、2020年开始，我对中国消费的所有教育逻辑就是：一是消费会发生结构性的变化，这种变化实际上是代际的变化；二是消费开始降级。</p><p>那时候我演讲中讲的那句话，咖啡不再是喝完20喝30，喝完30喝40，喝完40喝50，而是开始喝9.9买一赠一，年轻人开始周四攒个肯德基优惠券。</p><p><font color="red">年轻人开始发生消费型变化</font>，比如我们家孩子喝茶，我看他们喝茶马上告诉我老婆，把囤的普洱的茶饼全甩卖。为啥？我们家姑娘怎么喝茶知道吗？去她办公室，红茶绿茶普洱，你说红茶，东方树叶拿出来拧开，连水都不用，倒壶里，卡哇伊的小杯子往那儿一放，往那儿一倒，请。她不会给你拿个饼搓半天，然后再一泡，那是上一代人。</p><p>日本当年经济顶峰期的时候，做日本的清酒和威士忌，结果1990年之后真正火起来的是三得利、Jim Beam嗨棒。年轻人说1000块钱的酒，啥酒？我要的就是10块钱，口味偏甜，RIO喝起来微醺，能醉吗？能，行了。我的社交场景已经变了，我不会有请客吃饭坐在那儿了，我的消费场景已经变成俩孩子往那儿一坐，看电竞比赛直播。</p><p>这种年代已经到了，你可千万不要以为没到，你囤的邮票、木头，你记住一点，<strong>没得传承的，还囤邮票，我家儿子都不知道邮票长啥样</strong>？他倒知道小马宝莉值钱，这就是时代的变化，消费在发生结构性变化及总量上的变化。</p><p>中国的资本市场对经济的反应是完全准确的，你们可以看看整个的板块指数，房地产结束了，居民部门的食品、饮料、消费、零售结束了。新能源汽车到底结没结束，我的答案是你们等着瞧。其实现在只有一个板块在扩张，半导体。</p><p>你们看懂啥意思了吗？银行的对联叫“只做锦上添花，绝不雪中送炭”，横批“我家银行”。你要是经营不善，我们家第一个干的事儿是抽贷。“内债不是债，只要税还在”，还有一个秘诀是关于中国特色的经济，海外没有的，我们是非市场经济下的“J、Q、K”。</p><p>“J”是什么意思？大爷快来。“Q”，大爷，投点钱吧，把钱圈住。“K”是出去，KO。中国能够高速经济发展实际上和这只手有密切关系，大家炒股票都知道，经济越差的时候，你炒的是这只手动不动，有人问中国的股市跟经济到底有没有关系，我可以告诉你，两头是反向关系，中间是正向关系。</p><p>两头反向关系就是经济越差，这只手会出动，你会有反向关系，中间一定重新回归到跟经济相关，然后再往那头，过于亢奋了，也是行政关系。举个例子，2015、2016年当时非常典型，我发了个微博，最后一个月，我说你们谁爱玩谁玩，我们要撤了，拜拜了您。当然好处我没做空中国，我做空了香港，我要是做空中国我就回不来了。</p><p>那时候我跑到江浙沪调研当时的伞形信托场外融资配置，证监会一出政策，我说很简单，你们谁爱玩谁玩，老子撤了，根本原因这只手才是关键，你现在的市场什么6000点不是梦，10000点刚起步，你哪一条支持了？债务杠杆再一撤，游戏就崩了，赶紧跑。你们不觉得这玩意要出事？那也是手，不是经济，中间这一段才是正常经济发展，而中国的指数编制将决定了大部分时间经济反映出来的是结构，不是增量。现在出来个A500，是想试图让A500类似标普那样能反映总量加结构。</p><p>JQK什么意思呢？中国非常奇特，在投资的过程中，只做JQ环节，绝不做K。JQ环节是什么呢？行业有没有崛起呢？没有。行业有没有国家主义的意义呢？有。你们一定要记住一点，我们是右翼，右翼的产业政策全是偏向于国家主义的，所以说国家主义干任何事情不是要挣钱，要的是有，你们记住这句话。所以JQ的所有目的是为了政绩，是为了有。</p><p>老股民都懂，看新闻联播炒股的逻辑是啥，你告诉我你看新闻联播是炒经济吗？你看新闻联播炒股就是炒的他哪儿没有他想要，你就投。这时候是没有证伪的，而他会倾注所有资源给你，倾注土地、税收、地方引导基金，倾注一切资源，股市也是资源，用来融资的，会把一切资源给你，你是最爽的。而你一旦做到了遥遥领先，他的政治目的达到以后，就会把你甩到市场上进行市场经济的KO，此时你们就会发现PPI的秘密。你们就会发现PPI的周期性，PPI的周期性很简单，你如果把PPI里的行业再分一下，生产资料、生活资料，再细拆就会发现周期性和政策的关系。</p><p>啥东西呢？我没有，就会让PPI为正，我倾注一切资源和方式可以让你在里头挣到钱，而且不需要竞争。但我一旦达到目的，把你扔到市场经济的时候，你们会迅速发展，如果是正式的市场经济，竞争波动会比较温和的，也就是说稍微一有点钱挣，就有人进来了，就会烫平，周期拉的比较长，需要30年才能崛起一个大型企业。</p><p>但在中国不是，中国是5年，产业链就要做到全球遥遥领先，在JQ的保护期内，大家都可以活，但同样会造成很多“大家”，一旦保护期一到，扔到市场经济的时候，你们就会发现大家就变成了非自己人，开始PK、竞争、内卷，PPI开始转负，就这么简单。然后一轮产业过剩，开始淘汰，政府驱动再引导新的产业。用这种前浪推后浪的方式，推动整个产业各个环节的周期缩短到五年，但是代价就是很多行业会以很快的速度进入到PPI为负，而所有能到PPI为负的产业，最后能活下来都得感谢有自己的负债端，居民部门能买单，一旦内需不够还这么搞，就会出危机，就是现在这种状态。</p><p>老百姓的投资是说你看新能源渗透率到了多少多少了，老百姓开的越来越多了，怎么股票一直跌呢？这就是他的错误，他没有理解政策到底什么时候投资，成熟的时候是不能投的，因为能放给市场的时候一定不那么挣钱了，不放给市场的时候一定是特别挣钱的。</p><p>当然，这里面还牵扯到一点就是当年供给侧改革，你们可能都没有人会想到供给侧改革跟当年的股灾和楼市是有高度关系的。当年周兴涛（音）在市的时候，2015年底2016年初在上海搞了个会议让我讲供给侧改革，我说供给侧改革很简单，1997年朱镕基总理翻一下，供给侧改革这个词就来自于那儿。中国这一轮所有的起点是2002年，PPI为正，核心CPI为正，有效需求为正，持续到了2012年，供给开始过剩，但有效需求可以继续加杠杆，在这儿就是供给矛盾，2009年供需双落，这就是中国这一轮从2012年开始的大周期的末端。</p><p>上一次末端是什么时间呢？改革开放一直到90年代末，2000年初。出门京东上150块钱买《朱镕基总理答记者问》，三卷本，里面所有的事儿都发生过，房地产泡沫、金融经济危机，鼓励老百姓要有信心。你知道当年怎么鼓励老百姓有信心吗？“心若在，梦就在，大不了从头再来”，刘欢同志从此从那儿活起来的，那就是当年鼓励你们有信心。</p><p>把年轻人的失业率不能拉那么高，你们知道当年怎么做的吗？大学本科扩招，因为我们的年轻失业率统计上是不统计在校生的。把你都赶到大学里，失业率就能往后延三年。</p><p><font color="red">今年清北附交本硕的比例是多少吗？1比3，5000本科，15000硕士，当然，当年那种政策最后直接结果造成的什么？曾经本科很值钱，然后本科不值钱。我大概率觉得以后硕士可能也不咋值钱了，如果三年后经济的问题还不基础，我估计开始鼓励你们读博了，读到30岁再开始就业吧。在座家里有孩子的，你孩子不是富二代的，就别卷了，富二代就更不用卷了。用我的话说，想清楚了，后面卷学历没什么太大价值了</font>。</p><p>当年还干过啥？银行风险，四大资产管理公司处理不良，供给侧改革，化债，股票和政府化债。如果你想知道股票市场到底用来干啥的，请品品当年。2002—2004年，经济已经恢复了，A股跌到2004年的原因是啥？都有，所以你们知道债务到底怎么化吗？答案非常简单，所有的债务记住上下联，“只要人还在，啥债都能化”。只要人不在，这债怎么化？税率。量收不上来，就抓率。以前有人说中国是高税率，是居民部门高税率，企业部门低税率，因为各种退税、补贴给你的是低税率的，大家要懂得，该抓税率的时候要抓税率，不然是不够的。这一段大周期到现在为止进入到末端，这就是当前最麻烦的点以及外围环境。</p><p>海外我就不分析了，因为你倒过去就OK了，你把过去的40年倒过来就是海外正在慢慢发生变化，产业在回归，贸易关系在重塑。我这两天刚从新加坡回来，新加坡、东南亚、马来西亚、印度尼西亚、越南，开句玩笑话说，2016年之后真的是受益于你俩人打架，因为他们在走正向反馈和循环，他的正向反馈循环就是我们转移的。</p><p>最后送大家一句话，这张图是全球很重要的，当财政需要扩张，当利率在下降，你们可以想想财政花钱短期内挣不到，国内经济的有效需求不够，储蓄过剩，投资回报率下降，利率下降，在这种背景下，汇率就代表着你的实际回报率以及本币购买力，是减弱的。所以新兴市场一般来讲，如果出现这种状况一是利差会推着汇率贬值；二是政府的债务会推着汇率的贬值，会导致资本流出，会导致你需要加息去应对，但一加息，经济崩，资本进一步流出，这就是新兴市场危机。</p><p>注意，新兴市场危机不单纯是美国加息，这是很多人错误的认知。我可以告诉你，中国以前从来不会崩，因为不管老美加到几，中国的投资回报率都远远高于老美的话，我不会有新兴市场危机的，本质上是对内投资回报率和债务。</p><p>大家老是讲一句，老美加息就会收割别人。我开句玩笑话说，你如果没有借那么多钱，且投资回报率很强，他加息对你没影响。有一讲一，老讲成阴谋论，不是左就是右了，是偏颇的，我们站在中立的角度看，左有左的问题，右有右的问题，两边都有。</p><p>全世界在低利率和政府财政扩张情况下能保证汇率稳定的只有欧美、日本，他采用的模式很简单，自己家里不能挣钱，又要保证自己的信用和币值的稳定，答案就是我可以作为资本方到海外挣钱，这也是全球化必然在当年会发生的路径，拿海外的carry trading套利资产作为背书，支撑汇率。</p><p>我可不认为《广场协议》把日本打败了，你去日本访问，他们会告诉你日本当年的官员都是偏国家主义的右翼，因为从二战后过来的，他们在写自己所有回忆录的时候都说，我们日本发展的挺好，我们的政策没有错，都怪美帝国主义。你想想，哪个右翼会写本书说我错了，你们家老婆会说自己错了吗？想多了，怎么着都得说你错了。当年你们看日本官员书的时候，就会形成错误的右翼认知，原来是美帝国主义把日本打败的，而他不会去反思自己的问题。日本中立的这批人相反在做历史分析和回顾的时候，那个答案更准确。</p><p>在那个背景下，《广场协议》以后日元大幅度升值，日本形成了低息日元，强势汇率，什么意思？到海外去，购买海外资产吧，日元carry trading套息，到海外去形成，这就是日本的三井、三菱、丸红、伊藤忠，他们承载了日本海外所有财富。而更关键的是日本政府债务用于了对那一代居民的补偿，教育、医疗、养老对你们的支撑。当然，没有增长了，所以他的内心是痛苦的，肉体不痛苦，所以日本是内心痛苦，肉体不痛苦，答案就是抑郁症、焦虑症、自杀森林，如果肉体痛苦，那就不是自杀，那是杀别人。</p><p>在这种背景下，财政转向、利率下降，carry trading套息，用海外资产兜住，形成汇率，这就是当年很著名的，日本只要国内有地震，全球资产就会马上出现抛售潮，日元套息交易会迅速支撑日本，重要的就是这部分资产会回流。</p><p>美国也是一样，1980年后，美元套息交易，所以全球就形成了低利率美元、借贷美元，永远借贷，美国不能加息，永远降息，美元永远是借贷方，不是投资方。这种背景下，用他的财政扩张和低利率，支撑汇率的就是美元的跨国资产，也就是美股里的所有上市公司和跨国企业。</p><p>但是他造成的结果是，三井、三菱、丸红、伊藤忠富了，老百姓穷了，也不叫穷，就是不增长了。老美也是同样的道理，跨国企业高管富了，老百姓穷了，而老百姓最终会用选票红脖子投出特朗普进行逆转。逆转了游戏就颠倒了，低利率就会回归，套利会回归，产业会回归，债务会下降，汇率会走向，就这个逻辑。</p><p>中国也想这么干，但做不到，我们现在的问题是利率低又不能低到那么低，财政想帮老百姓又不能真的帮到老百姓，汇率升值，我不知道当年有多少人你们咋想的升到5块6块，不是指2016年，是指这两年突然间有人说人民币将来升到5块4块，你靠啥升？你用什么升？现在说白了就是一种平衡，利率不能那么低，财政不能那么扩，汇率不能那么贬，三者之间找平衡点。比如说2的利率，对应的就是7-7.3的汇率，财政对应的就是能救救地方政府。如果明年打贸易战，变的更加严峻了，那利率可以更低点，比如破2，汇率可以往上放一下，7.3-7.6，7.3-7.8，财政可以再扩一点，这是我们现在手上唯一剩下的牌，怎么可能一次给你打出去呢？咋打，打出去以后没有海外市场给你做背书，我们就是新兴市场了。这个游戏就是现在国内的逻辑，止和稳，没有刺激，靠啥刺激？你对国内所有资产理解透了，大概率也就是明年的一些东西了。</p><p>说句实在话，全球这两年战争风险不断加大，某些资产计入的可不是利率、汇率、货币，某些资产在计入的是战争和脱钩，此处请参考俄罗斯。</p><h3 id="现场提问"><a href="#现场提问" class="headerlink" title="现场提问"></a>现场提问</h3><p>时间原因，留几分钟给大家提问。</p><ul><li><blockquote><p>现场提问：付总我问一个问题，您刚才也在报告里提到了，这么大的人口国家，也到了1万美金以上的人均收入，结构性机会会在哪些行业或者哪些领域里有？</p></blockquote></li></ul><p>付鹏：你就记住一点，<strong>你现在要么做富的，要么做穷的</strong>，放弃中产吧，这就是答案，做富的不受影响。比如说刚才的奢侈品，富的是啥？各位女士们，记住一点，只买爱马仕，香奈儿、LV、GUCCI、Prada通通放弃，从新品到二手都会崩的，这叫富的。</p><p>穷的怎么做？杭州已经开始了，香奈儿一个包一天租金25，二奢已经都玩不转了，现在玩的都是租一天25，干吗呢？租给名媛们拍拍照打打卡，这就是极致的两头。优衣库，要么就往上走，要么就是升级到始祖鸟，要么就往下降级到优衣库，不过现在年轻人更猛，他们都觉得优衣库贵，这都没辙了，我发现优衣库在国内的销售数据在下降。为啥呢？年轻人一问，优衣库挺贵，这没法去理解了，优衣库。就是往两头，中间的部分不做。</p><p>第二，<strong>年轻人的生意做，老年人的生意做，40多岁中年不做</strong>，因为他基本上是上有老下有小，还着债，苦哈哈的中年牛马，这部分放弃。年轻人做就是他的兴趣爱好会发生很大的变化，他们不一样，不管有钱没钱，他们的兴趣爱好完全不一样。比如动漫、游戏、二次元，就像年轻人买包，我们家姑娘买啥包？什么LV、GUCCI、爱马仕统统不买，人家买“痛包”，知道啥是痛包吗？知道里面塞一堆吧唧是啥东西吗？这就是他们那个时代的消费。</p><p>老年人你们知道做什么吗？老年人记住一点，人生中最后一刻花钱，一定是最后一个房子，ICU病房。中间60、70岁你也没啥好花的，我一直鼓励中国应该尽早退休，趁着这代人有财富的，能花的时候让他花，把岗位职务让出来给年轻人。你真学日本，老着站着，年轻的上不去，你会发现该花的没花还在工作，该挣的挣不着，时间就拖了，中国也一样，放弃中间。</p><p>剩下的是什么呢？国家让你干哪些产业你就干，而且一定干早期，早期干完，后期一定过剩，干早期，达到顶峰的时候就是市场热度极高，要名有名，要利有利的时候，撤。</p><ul><li><blockquote><p>现场提问：半导体到了吗？</p></blockquote></li></ul><p>付鹏：没到，很简单，我们还没宣布我们“遥遥领先”，着啥急。会不惜一切代价，哪怕10个公司中有9个是骗子，他都认，这没办法，你必须明白国家主义的特征。</p><ul><li><blockquote><p>现场提问：感谢付总，想问关于海外资产配置的问题，个人在海外资产美股、美债、新兴市场的债券和股票，有什么建议？</p></blockquote></li></ul><p>付鹏：新兴市场的债券就是中国，原则上你购买他。比如说你们配置型的会配新兴市场债券，我们投机倒把型的直接在新兴市场放高利贷，任何新兴市场早期第一件事情都进去放贷。2015年去越南，我原来是做小米总代的，干着干着开始放贷，为什么？中国早些年也是放贷的，新兴市场有个特征，金融体系不完善的情况下，央行和银行的利率并不能正确地反映经济周期的资本供应和需求，所以说银行的利率一定低于实际经济的投资回报率。</p><p>我们的“搬运工”直接搬到最高的利率上就可以了，放小贷违约率很低的，现在在中国敢放贷吗？</p><p>举个例子，在座各位2分有没有人借钱给我，你们大概第一反应是2分，你要我本金的吧？但把时间倒回10年前，2分，开发商问你借，你借不借？那时候你们担心违约吗？不担心，原因跟你放多少息没关系，是对经济的判断，我可以告诉你，新兴市场在这个维度上就是当年的中国。</p><p>人家的员工00后就是00后，2015年有一些产业转移跟我们去越南，我跟老板说的很清楚，你不要觉得越南劳动力成本低，不低的。他说这不是挺便宜的，我说加班是要给加班费的，4点59是必须下班的，工会真会罢工的。中国劳动力成本低的原因是啥？牛马可以随便压榨，这才是劳动力低的根因。</p><p>这两年又有些企业想往回迁的原因是啥？越南这两年年轻人动不动就罢工，罢工了人家工会就上，你不给加薪人家就不干的，老板拿着没辙的，中国老板很不适应，就想迁回来。我说你也别迁了，因为中国的00后们也很快崛起了，他们整顿职场已经开始了。</p><p>这两天香港闹的很凶的是华为的HR招聘，一样的道理，这个时代到了。</p><p>新兴市场的债券，本质上确实是高息的，这很好，美股美债就不用说了，美元资产的投资回报率你自然琢磨去，当然美股明年会有点特殊，因为今年创造奇迹了，今年是美股的奇迹年，你们可能都没注意过回报率、波动率、估值，高估值，低波动，高回报，这三种组合理论上不会同时出现的，但今年同时出现了，是绝对异常的。这就是前几年我跟你讲的，你们必须要明白人工智能已经开始了。前几年我说美股会从人工智能的集中到慢慢扩散，很多人说不可能，他对股市结构的理解不够深刻的。</p><p>当然今年最辉煌的一仗就是英伟达闪崩之前我们明确告诉国内所有的公募基金，你们要注意英伟达场外杠杆，那天晚上崩了，崩完了之后，第二天晚上马上做了将近8000人的直播，跟各家公募基金说，这就是波动率的高点，因为经济没有问题，市场没有问题，其实就是过低的波动率带来很多人加了杠杆，把这帮人干掉就完了。</p><p>当时新加坡有些朋友给我打电话说付总这怎么办？我说你今天晚上把保证金补上，明天就能活，补不上死的就是你。这跟英伟达、人工智能没任何关系，妥妥的就是爆杠杆，爆完了就完了，我们也爆完，去完杠杆，英伟达重新回到3万亿，现在是这种情况。但这种组合明年应该不会持续，高估值、低波动、高回报，不会。明年要么保持着高估值，保持着低波动，回报率就得下降，要么就是保持着高波动，回报率下降，高估值，要么就是直接杀估值，我目前看还看不到杀估值的路径，杀杠杆是有可能的，杀估值的可能性不大，产业的中期早期估值都是偏高的。到明年去看，美股确实不太一样。</p><p>但我还是那句话，大部分时间你要琢磨琢磨百年美股为啥都是上涨的，是有原因的。对于老百姓来讲，美股不是因为它高的所以高了，是防止高波动就行了，你只要防止高波动，大部分时间就是让你定投了，这没啥选的。</p><p>还有一点，记住，巴菲特是资产管理，不是大散户，老百姓一理解巴菲特持有那么多现金，是不是美股要崩了？现金是啥？是零波动率4.5%股息的股票，你去品品这句话就OK了，在资产组合中你就是评估资值、波动、回报率，当三者之间异常的时候，你的比重会调到0波动率的股息，4.5%的股票上，这就是现金，千万别把巴菲特搞成大散户，说巴菲特买现金说因为美股要崩，做做短视频蒙蒙老百姓可以，咱们自己就别这么干了，这大概就是美股。</p>]]></content>
    
    
    <categories>
      
      <category>沉思录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>认知</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爱回收检测小区垃圾房垃圾状态接口</title>
    <link href="/2024/11/29/%E7%88%B1%E5%9B%9E%E6%94%B6%E6%A3%80%E6%B5%8B%E5%B0%8F%E5%8C%BA%E5%9E%83%E5%9C%BE%E6%88%BF%E5%9E%83%E5%9C%BE%E7%8A%B6%E6%80%81%E6%8E%A5%E5%8F%A3/"/>
    <url>/2024/11/29/%E7%88%B1%E5%9B%9E%E6%94%B6%E6%A3%80%E6%B5%8B%E5%B0%8F%E5%8C%BA%E5%9E%83%E5%9C%BE%E6%88%BF%E5%9E%83%E5%9C%BE%E7%8A%B6%E6%80%81%E6%8E%A5%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="爱回收检测小区垃圾房垃圾状态接口"><a href="#爱回收检测小区垃圾房垃圾状态接口" class="headerlink" title="爱回收检测小区垃圾房垃圾状态接口"></a>爱回收检测小区垃圾房垃圾状态接口</h1><p>针对微信小程序抓包，输入微信headers信息和小区爱回收垃圾房的id，可以实时检测垃圾状态，一般来说分为三种：满仓、即将满仓和可投递。</p><p>下面是js源码和演示画面截图。</p><h2 id="JS源码"><a href="#JS源码" class="headerlink" title="JS源码"></a>JS源码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;ui&quot;</span>;<br><br><span class="hljs-keyword">const</span> headers = &#123;<br>    <span class="hljs-string">&#x27;Host&#x27;</span>: <span class="hljs-string">&#x27;dubai-mp.aihuishou.com&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-Device-Id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 MicroMessenger/7.0.20.1781(0x6700143B) NetType/WIFI MiniProgramEnv/Windows WindowsWechat/WMPF WindowsWechat(0x63090c11)XWEB/11529&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-App-Version&#x27;</span>: <span class="hljs-string">&#x27;7.11.3&#x27;</span>,<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json;charset=UTF-8&#x27;</span>,<br>    <span class="hljs-string">&#x27;Xweb_xhr&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-Token&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-Sign2&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-Timestamp&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-Session-Id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;Ahs-App-Id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;*/*&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="hljs-string">&#x27;cross-site&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>    <span class="hljs-string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,<br>    <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;https://servicewechat.com/wx7e490492b4c23e98/890/page-frame.html&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,<br>    <span class="hljs-string">&#x27;Connection&#x27;</span>: <span class="hljs-string">&#x27;close&#x27;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> ads = [<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]; <span class="hljs-comment">//垃圾站点id</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkStationStatus</span>(<span class="hljs-params">ad</span>) &#123;<br>    <span class="hljs-keyword">let</span> jsonData = &#123;<br>        <span class="hljs-attr">cityId</span>: <span class="hljs-number">218</span>,<br>        <span class="hljs-attr">stationCode</span>: ad,<br>    &#125;;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">let</span> response = http.<span class="hljs-title function_">postJson</span>(<span class="hljs-string">&#x27;https://dubai-mp.aihuishou.com/dubai-gateway/afl-station/station-by-code&#x27;</span>, jsonData, &#123; <span class="hljs-attr">headers</span>: headers &#125;);<br><br>        <span class="hljs-keyword">if</span> (response.<span class="hljs-property">statusCode</span> == <span class="hljs-number">200</span>) &#123;<br>            <span class="hljs-keyword">let</span> data = response.<span class="hljs-property">body</span>.<span class="hljs-title function_">json</span>();<br>            <span class="hljs-keyword">let</span> stationName = data.<span class="hljs-property">data</span>.<span class="hljs-property">stationName</span>;<br>            <span class="hljs-keyword">let</span> status = data.<span class="hljs-property">data</span>.<span class="hljs-property">status</span>;<br>            <span class="hljs-keyword">let</span> title = status.<span class="hljs-property">title</span>;<br>            <span class="hljs-keyword">let</span> detailTitle = status.<span class="hljs-property">detailTitle</span>;<br><br>            <span class="hljs-keyword">let</span> result = <span class="hljs-string">&#x27;地点: &#x27;</span> + stationName + <span class="hljs-string">&#x27;, 垃圾房状态: &#x27;</span> + title + <span class="hljs-string">&#x27; - &#x27;</span> + detailTitle;<br>            <span class="hljs-title function_">toast</span>(result); <span class="hljs-comment">// 直接显示每个请求的结果</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-title function_">toast</span>(<span class="hljs-string">&#x27;请求失败: &#x27;</span> + ad + <span class="hljs-string">&#x27;, 状态码: &#x27;</span> + response.<span class="hljs-property">statusCode</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>        <span class="hljs-title function_">toast</span>(<span class="hljs-string">&#x27;请求出错: &#x27;</span> + ad + <span class="hljs-string">&#x27;, 错误信息: &#x27;</span> + error.<span class="hljs-property">message</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">showResultsSequentially</span>(<span class="hljs-params"></span>) &#123;<br>    ads.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">ad, index</span>) =&gt;</span> &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            threads.<span class="hljs-title function_">start</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                <span class="hljs-title function_">checkStationStatus</span>(ad); <span class="hljs-comment">// 在子线程中执行请求</span><br>            &#125;);<br>        &#125;, <span class="hljs-number">2000</span> * index); <span class="hljs-comment">// 每个请求之间延迟 2 秒</span><br>    &#125;);<br>&#125;<br><br><span class="hljs-comment">// 创建一个简单的 UI 界面，并设置按钮为粉色且居中</span><br>ui.<span class="hljs-title function_">layout</span>(<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">vertical</span> <span class="hljs-attr">gravity</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;checkBtn&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;检查站点状态&quot;</span> <span class="hljs-attr">w</span>=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-attr">h</span>=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-attr">textColor</span>=<span class="hljs-string">&quot;#FFFFFF&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#FF69B4&quot;</span>/&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">vertical</span>&gt;</span></span><br>);<br><br><span class="hljs-comment">// 将广告数组输出，并显示 2 秒</span><br>ui.<span class="hljs-property">checkBtn</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>   <br>    <span class="hljs-comment">// 等待 2 秒钟后逐一处理请求并展示结果</span><br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">showResultsSequentially</span>(); <span class="hljs-comment">// 逐个请求</span><br>    &#125;, <span class="hljs-number">2000</span>); <span class="hljs-comment">// 延迟 2 秒</span><br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><img src="C:\Users\韦磊\AppData\Roaming\Typora\typora-user-images\image-20241129085140194.png" alt="image-20241129085140194" style="zoom: 33%;" /><img src="C:\Users\韦磊\AppData\Roaming\Typora\typora-user-images\image-20241129085210426.png" alt="image-20241129085210426" style="zoom:50%;" />]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大麦python源码参考</title>
    <link href="/2024/11/19/%E5%A4%A7%E9%BA%A6python%E6%BA%90%E7%A0%81/"/>
    <url>/2024/11/19/%E5%A4%A7%E9%BA%A6python%E6%BA%90%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="大麦python源码参考"><a href="#大麦python源码参考" class="headerlink" title="大麦python源码参考"></a>大麦python源码参考</h1><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><h3 id="Automatic-ticket-purchase-py"><a href="#Automatic-ticket-purchase-py" class="headerlink" title="Automatic_ticket_purchase.py"></a>Automatic_ticket_purchase.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">__Author__ = &quot;MakiNaruto&quot;</span><br><span class="hljs-string">__Version__ = &quot;2.1.0&quot;</span><br><span class="hljs-string">__Description__ = &quot;&quot;</span><br><span class="hljs-string">__Created__ = 2022/2/14 10:37 下午</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> tools<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> requests <span class="hljs-keyword">import</span> session<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DaMaiTicket</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># 登录信息</span><br>        <span class="hljs-variable language_">self</span>.login_cookies = &#123;&#125;<br>        <span class="hljs-variable language_">self</span>.session = session()<br>        <span class="hljs-variable language_">self</span>.login_id: <span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;account&#x27;</span>  <span class="hljs-comment"># 大麦网登录账户名</span><br>        <span class="hljs-variable language_">self</span>.login_password: <span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;password&#x27;</span>  <span class="hljs-comment"># 大麦网登录密码</span><br>        <span class="hljs-comment"># 以下为抢票必须的参数</span><br>        <span class="hljs-variable language_">self</span>.item_id: <span class="hljs-built_in">int</span> = <span class="hljs-number">610820299671</span>  <span class="hljs-comment"># 商品id</span><br>        <span class="hljs-variable language_">self</span>.viewer: <span class="hljs-built_in">list</span> = [<span class="hljs-string">&#x27;viewer1&#x27;</span>]  <span class="hljs-comment"># 在大麦网已填写的观影人</span><br>        <span class="hljs-variable language_">self</span>.buy_nums: <span class="hljs-built_in">int</span> = <span class="hljs-number">1</span>  <span class="hljs-comment"># 购买影票数量, 需与观影人数量一致</span><br>        <span class="hljs-variable language_">self</span>.ticket_price: <span class="hljs-built_in">int</span> = <span class="hljs-number">180</span>  <span class="hljs-comment"># 购买指定票价</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step1_get_order_info</span>(<span class="hljs-params">self, item_id, commodity_param, ticket_price=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        获取点击购买所必须的参数信息</span><br><span class="hljs-string">        :param item_id:             商品id</span><br><span class="hljs-string">        :param commodity_param:     获取商品购买信息必须的参数</span><br><span class="hljs-string">        :param ticket_price:        购买指定价位的票</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ticket_price:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;票价未填写, 请选择票价&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>        commodity_param.update(&#123;<span class="hljs-string">&#x27;itemId&#x27;</span>: item_id&#125;)<br>        headers = &#123;<br>            <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;detail.damai.cn&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;98&quot;, &quot;Google Chrome&quot;;v=&quot;98&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>            <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;*/*&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-origin&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;no-cors&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;script&#x27;</span>,<br>            <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://detail.damai.cn/item.htm&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        &#125;<br><br>        response = <span class="hljs-variable language_">self</span>.session.get(<span class="hljs-string">&#x27;https://detail.damai.cn/subpage&#x27;</span>, headers=headers, params=commodity_param)<br>        ticket_info = json.loads(response.text.replace(<span class="hljs-string">&#x27;null(&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;__jp0(&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)[:-<span class="hljs-number">1</span>])<br>        all_ticket_sku = ticket_info[<span class="hljs-string">&#x27;perform&#x27;</span>][<span class="hljs-string">&#x27;skuList&#x27;</span>]<br>        sku_id_sequence = <span class="hljs-number">0</span><br>        sku_id = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">if</span> ticket_price:<br>            <span class="hljs-keyword">for</span> index, sku <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(all_ticket_sku):<br>                <span class="hljs-keyword">if</span> sku.get(<span class="hljs-string">&#x27;price&#x27;</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">float</span>(sku.get(<span class="hljs-string">&#x27;price&#x27;</span>)) == <span class="hljs-built_in">float</span>(ticket_price):<br>                    sku_id_sequence = index<br>                    sku_id = sku.get(<span class="hljs-string">&#x27;skuId&#x27;</span>)<br>                    <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> ticket_info, sku_id_sequence, sku_id<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step2_click_buy_now</span>(<span class="hljs-params">self, ex_params, sku_info</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        点击立即购买</span><br><span class="hljs-string">        :param ex_params:   点击立即购买按钮所发送请求的必须参数</span><br><span class="hljs-string">        :param sku_info:    购买指定商品信息及数量信息</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;buy.damai.cn&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;99&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>            <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.74 Safari/537.36&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-site&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;navigate&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-user&#x27;</span>: <span class="hljs-string">&#x27;?1&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;document&#x27;</span>,<br>            <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://detail.damai.cn/&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span><br>        &#125;<br>        params = &#123;<br>            <span class="hljs-string">&#x27;exParams&#x27;</span>: json.dumps(ex_params),<br>            <span class="hljs-string">&#x27;buyParam&#x27;</span>: sku_info,<br>            <span class="hljs-string">&#x27;buyNow&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>            <span class="hljs-string">&#x27;spm&#x27;</span>: <span class="hljs-string">&#x27;a2oeg.project.projectinfo.dbuy&#x27;</span><br>        &#125;<br><br>        response = <span class="hljs-variable language_">self</span>.session.get(<span class="hljs-string">&#x27;https://buy.damai.cn/orderConfirm&#x27;</span>, headers=headers,<br>                                    params=params, cookies=<span class="hljs-variable language_">self</span>.login_cookies)<br>        result = re.search(<span class="hljs-string">&#x27;window.__INIT_DATA__[\s\S]*?&#125;;&#x27;</span>, response.text)<br>        <span class="hljs-variable language_">self</span>.login_cookies.update(<span class="hljs-variable language_">self</span>.session.cookies)<br>        <span class="hljs-keyword">try</span>:<br>            submit_order_info = json.loads(result.group().replace(<span class="hljs-string">&#x27;window.__INIT_DATA__ = &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)[:-<span class="hljs-number">1</span>])<br>            submit_order_info.update(&#123;<span class="hljs-string">&#x27;output&#x27;</span>: json.loads(submit_order_info.get(<span class="hljs-string">&#x27;output&#x27;</span>))&#125;)<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;获取购买必备参数异常，请重新解析response返回的参数&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-built_in">print</span>(result.group())<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> submit_order_info<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step2_click_confirm_select_seats</span>(<span class="hljs-params">self, project_id, perform_id, seat_info, sku_info</span>):<br>        <span class="hljs-string">&quot;&quot;&quot; 选座购买，点击确认选座 &quot;&quot;&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;buy.damai.cn&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>            <span class="hljs-string">&#x27;cache-control&#x27;</span>: <span class="hljs-string">&#x27;max-age=0&#x27;</span>,<br>            <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn/&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;document&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;navigate&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-site&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-user&#x27;</span>: <span class="hljs-string">&#x27;?1&#x27;</span>,<br>            <span class="hljs-string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>            <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>,<br>        &#125;<br><br>        params = &#123;<br>            <span class="hljs-string">&#x27;exParams&#x27;</span>: json.dumps(&#123;<span class="hljs-string">&#x27;damai&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>                                    <span class="hljs-string">&#x27;channel&#x27;</span>: <span class="hljs-string">&#x27;damai_app&#x27;</span>,<br>                                    <span class="hljs-string">&#x27;umpChannel&#x27;</span>: <span class="hljs-string">&#x27;10002&#x27;</span>,<br>                                    <span class="hljs-string">&#x27;atomSplit&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>                                    <span class="hljs-string">&#x27;seatInfo&#x27;</span>: seat_info,<br>                                    <span class="hljs-string">&#x27;serviceVersion&#x27;</span>: <span class="hljs-string">&#x27;2.0.0&#x27;</span>&#125;).replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>),<br>            <span class="hljs-string">&#x27;buyParam&#x27;</span>: sku_info,<br>            <span class="hljs-string">&#x27;buyNow&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>            <span class="hljs-string">&#x27;projectId&#x27;</span>: project_id,<br>            <span class="hljs-string">&#x27;performId&#x27;</span>: perform_id,<br>            <span class="hljs-string">&#x27;spm&#x27;</span>: <span class="hljs-string">&#x27;a2oeg.selectseat.bottom.dbuy&#x27;</span>,<br>        &#125;<br><br>        response = requests.get(<span class="hljs-string">&#x27;https://buy.damai.cn/orderConfirm&#x27;</span>, params=params, cookies=<span class="hljs-variable language_">self</span>.login_cookies,<br>                                headers=headers)<br>        <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>            result = re.search(<span class="hljs-string">&#x27;window.__INIT_DATA__[\s\S]*?&#125;;&#x27;</span>, response.text)<br>            <span class="hljs-variable language_">self</span>.login_cookies.update(<span class="hljs-variable language_">self</span>.session.cookies)<br>            <span class="hljs-keyword">try</span>:<br>                submit_order_info = json.loads(result.group().replace(<span class="hljs-string">&#x27;window.__INIT_DATA__ = &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)[:-<span class="hljs-number">1</span>])<br>                submit_order_info.update(&#123;<span class="hljs-string">&#x27;output&#x27;</span>: json.loads(submit_order_info.get(<span class="hljs-string">&#x27;output&#x27;</span>))&#125;)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;获取购买必备参数异常，请重新解析response返回的参数&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>                <span class="hljs-built_in">print</span>(result.group())<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>            <span class="hljs-keyword">return</span> submit_order_info<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step3_submit_order</span>(<span class="hljs-params">self, submit_order_info, viewer, seat_info=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        提交订单所需参数信息</span><br><span class="hljs-string">        :param submit_order_info:   最终确认订单所需的所有信息。</span><br><span class="hljs-string">        :param viewer:  指定观演人进行购票</span><br><span class="hljs-string">        :param seat_info:  座位id</span><br><span class="hljs-string">        :return:</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        headers = &#123;<br>            <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;buy.damai.cn&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;98&quot;, &quot;Google Chrome&quot;;v=&quot;98&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;application/json, text/plain, */*&#x27;</span>,<br>            <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/json;charset=UTF-8&#x27;</span>,<br>            <span class="hljs-string">&#x27;x-requested-with&#x27;</span>: <span class="hljs-string">&#x27;XMLHttpRequest&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>            <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.109 Safari/537.36&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>            <span class="hljs-string">&#x27;origin&#x27;</span>: <span class="hljs-string">&#x27;https://buy.damai.cn&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-origin&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>            <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,<br>            <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://buy.damai.cn/orderConfirm?&#x27;</span>,<br>            <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        &#125;<br><br>        params = (<br>            (<span class="hljs-string">&#x27;feature&#x27;</span>, <span class="hljs-string">&#x27;&#123;&quot;returnUrl&quot;:&quot;https://orders.damai.cn/orderDetail&quot;,&quot;serviceVersion&quot;:&quot;1.8.5&quot;&#125;&#x27;</span>),<br>            (<span class="hljs-string">&#x27;submitref&#x27;</span>, <span class="hljs-string">&#x27;undefined&#x27;</span>),<br>        )<br>        dm_viewer_pc = <span class="hljs-built_in">str</span>([k <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> submit_order_info.get(<span class="hljs-string">&#x27;data&#x27;</span>).items()])<br>        dm_viewer_pc_id_search = re.search(<span class="hljs-string">&#x27;dmViewerPC_[0-9]*&#x27;</span>, dm_viewer_pc)<br>        <span class="hljs-keyword">if</span> dm_viewer_pc_id_search:<br>            dm_viewer_pc_id = dm_viewer_pc_id_search.group()  <span class="hljs-comment"># 获取到观演人的 key</span><br>            user_list = submit_order_info[<span class="hljs-string">&#x27;data&#x27;</span>][dm_viewer_pc_id][<span class="hljs-string">&#x27;fields&#x27;</span>][<span class="hljs-string">&#x27;dmViewerList&#x27;</span>]<br>            all_available_user = [name.get(<span class="hljs-string">&#x27;viewerName&#x27;</span>) <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> user_list]<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">set</span>(viewer).intersection(<span class="hljs-built_in">set</span>(all_available_user))) != <span class="hljs-built_in">len</span>(viewer):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;请检查输入的观演人信息与大麦网观演人信息是否一致&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>            <span class="hljs-keyword">for</span> user <span class="hljs-keyword">in</span> user_list:<br>                <span class="hljs-keyword">if</span> user.get(<span class="hljs-string">&#x27;viewerName&#x27;</span>) <span class="hljs-keyword">in</span> viewer:<br>                    user[<span class="hljs-string">&#x27;isUsed&#x27;</span>] = <span class="hljs-literal">True</span><br>            <span class="hljs-comment"># 若为选座购买, 则需要添加座位id。</span><br>            <span class="hljs-keyword">if</span> seat_info:<br>                seat_info = [seat.get(<span class="hljs-string">&#x27;seatId&#x27;</span>) <span class="hljs-keyword">for</span> seat <span class="hljs-keyword">in</span> seat_info]<br>                seat_index = <span class="hljs-number">0</span><br>                <span class="hljs-keyword">for</span> user <span class="hljs-keyword">in</span> user_list:<br>                    <span class="hljs-keyword">if</span> seat_index &gt; <span class="hljs-built_in">len</span>(viewer) - <span class="hljs-number">1</span>:<br>                        <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">if</span> user.get(<span class="hljs-string">&#x27;viewerName&#x27;</span>) <span class="hljs-keyword">in</span> viewer:<br>                        user[<span class="hljs-string">&#x27;seatId&#x27;</span>] = seat_info[seat_index]<br>                        seat_index += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;该场次不需要指定观演人&quot;</span>)<br><br>        submit_order_info = json.dumps(submit_order_info)<br>        response = <span class="hljs-variable language_">self</span>.session.post(<span class="hljs-string">&#x27;https://buy.damai.cn/multi/trans/createOrder&#x27;</span>,<br>                                     headers=headers,<br>                                     params=params,<br>                                     data=submit_order_info,<br>                                     cookies=<span class="hljs-variable language_">self</span>.login_cookies)<br>        buy_status = json.loads(response.text)<br>        <span class="hljs-keyword">if</span> buy_status.get(<span class="hljs-string">&#x27;success&#x27;</span>) <span class="hljs-keyword">is</span> <span class="hljs-literal">True</span> <span class="hljs-keyword">and</span> buy_status.get(<span class="hljs-string">&#x27;module&#x27;</span>).get(<span class="hljs-string">&#x27;alipayOrderId&#x27;</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;抢票成功, 请前往 大麦网-&gt;我的大麦-&gt;交易中心-&gt;订单管理 确认订单&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;alipayOrderId: &#x27;</span>, buy_status.get(<span class="hljs-string">&#x27;module&#x27;</span>).get(<span class="hljs-string">&#x27;alipayOrderId&#x27;</span>))<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;支付宝支付链接: &#x27;</span>, buy_status.get(<span class="hljs-string">&#x27;module&#x27;</span>).get(<span class="hljs-string">&#x27;alipayWapCashierUrl&#x27;</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(<span class="hljs-variable language_">self</span>.viewer) != <span class="hljs-variable language_">self</span>.buy_nums:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;购买数量与实际观演人数量不符&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">if</span> os.path.exists(<span class="hljs-string">&#x27;cookies.pkl&#x27;</span>):<br>            cookies = tools.load_cookies()<br>            <span class="hljs-variable language_">self</span>.login_cookies.update(cookies)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;account&#x27;</span> == args.mode.lower():<br>            <span class="hljs-variable language_">self</span>.login_cookies = tools.account_login(<span class="hljs-string">&#x27;account&#x27;</span>, <span class="hljs-variable language_">self</span>.login_id, <span class="hljs-variable language_">self</span>.login_password)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.login_cookies = tools.account_login(<span class="hljs-string">&#x27;qr&#x27;</span>)<br><br>        login_status = tools.check_login_status(<span class="hljs-variable language_">self</span>.login_cookies)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> login_status:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;登录失败, 请检查登录账号信息。若使用保存的cookies，则删除cookies文件重新尝试&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-keyword">elif</span> login_status <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;cookies.pkl&#x27;</span>):<br>            tools.save_cookies(<span class="hljs-variable language_">self</span>.login_cookies)<br><br>        commodity_param, ex_params = tools.get_api_param()<br><br>        submit_order_info = <span class="hljs-string">&#x27;&#x27;</span><br>        buy_serial_number = <span class="hljs-string">&#x27;&#x27;</span><br>        seat_info = <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            ticket_info, sku_id_sequence, sku_id = <span class="hljs-variable language_">self</span>.step1_get_order_info(<span class="hljs-variable language_">self</span>.item_id, commodity_param,<br>                                                                             ticket_price=<span class="hljs-variable language_">self</span>.ticket_price)<br>            ticket_sku_status = ticket_info[<span class="hljs-string">&#x27;skuPagePcBuyBtn&#x27;</span>][<span class="hljs-string">&#x27;skuBtnList&#x27;</span>][sku_id_sequence][<span class="hljs-string">&#x27;btnText&#x27;</span>]<br>            <span class="hljs-keyword">if</span> ticket_sku_status == <span class="hljs-string">&#x27;即将开抢&#x27;</span>:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">elif</span> ticket_sku_status == <span class="hljs-string">&#x27;缺货登记&#x27;</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;手慢了，该票价已经售空: &#x27;</span>, ticket_sku_status, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>            <span class="hljs-keyword">elif</span> ticket_sku_status == <span class="hljs-string">&#x27;立即购买&#x27;</span>:<br>                buy_serial_number = <span class="hljs-string">&#x27;&#123;&#125;_&#123;&#125;_&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-variable language_">self</span>.item_id, <span class="hljs-variable language_">self</span>.buy_nums, sku_id)<br>                submit_order_info = <span class="hljs-variable language_">self</span>.step2_click_buy_now(ex_params, buy_serial_number)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">elif</span> ticket_sku_status == <span class="hljs-string">&#x27;选座购买&#x27;</span>:<br>                <span class="hljs-comment"># 获取选座购买必备的数据信息。</span><br>                city_id, project_id, item_id, perform_id = tools.get_select_seat_params(<span class="hljs-variable language_">self</span>.item_id)<br>                stand_id, seat_price_list = tools.get_seat_dynamic_info(<span class="hljs-variable language_">self</span>.login_cookies, project_id, item_id,<br>                                                                        perform_id)<br>                api_address = tools.get_select_seat_api(<span class="hljs-variable language_">self</span>.login_cookies, perform_id, city_id)<br>                buy_serial_number = <span class="hljs-string">&#x27;&#123;&#125;_&#123;&#125;_&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-variable language_">self</span>.item_id, <span class="hljs-variable language_">self</span>.buy_nums, sku_id)<br>                api_address += <span class="hljs-built_in">str</span>(stand_id) + <span class="hljs-string">&#x27;.json&#x27;</span><br>                response = requests.get(api_address)<br>                <span class="hljs-keyword">if</span> response.status_code != <span class="hljs-number">200</span>:<br>                    <span class="hljs-keyword">return</span><br>                <span class="hljs-comment"># 获取全部的座位信息</span><br>                all_seats_info = json.loads(response.text)<br>                <span class="hljs-comment"># 获取可售的座位信息</span><br>                valuable_info = tools.get_valuable_seat_id(<span class="hljs-variable language_">self</span>.login_cookies, project_id, perform_id, city_id,<br>                                                           stand_id)<br>                <span class="hljs-comment"># 获取 指定抢票价格的 sku_id, price_id</span><br>                sku_id, price_id = <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>                <span class="hljs-keyword">for</span> sku_info <span class="hljs-keyword">in</span> seat_price_list:<br>                    <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.ticket_price == <span class="hljs-built_in">int</span>(sku_info.get(<span class="hljs-string">&#x27;salePrice&#x27;</span>)):<br>                        sku_id = sku_info.get(<span class="hljs-string">&#x27;skuId&#x27;</span>)<br>                        price_id = sku_info.get(<span class="hljs-string">&#x27;priceId&#x27;</span>)<br>                        <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> sku_id <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> price_id:<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;获取sku_id失败&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>                    <span class="hljs-keyword">return</span><br><br>                <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">                过滤无效座位信息，仅留下符合条件的座位id</span><br><span class="hljs-string">                1. 仅保留目标价位下的座位id(暂时只支持一种目标价位)</span><br><span class="hljs-string">                2. 过滤掉不可售的座位id。</span><br><span class="hljs-string">                &quot;&quot;&quot;</span><br>                valuable_seat = tools.format_valuable_seatid(all_seats_info, valuable_info, price_id)<br>                <span class="hljs-comment"># 挑选座位</span><br>                seat_info = tools.pick_seat(valuable_seat, stand_id, <span class="hljs-variable language_">self</span>.buy_nums)<br>                submit_order_info = <span class="hljs-variable language_">self</span>.step2_click_confirm_select_seats(project_id, perform_id, seat_info,<br>                                                                          buy_serial_number)<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> buy_serial_number <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> submit_order_info:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;获取购票所需信息失败&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-variable language_">self</span>.step3_submit_order(submit_order_info, <span class="hljs-variable language_">self</span>.viewer, seat_info)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;manual to this script&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--mode&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, default=<span class="hljs-string">&#x27;account&#x27;</span>, required=<span class="hljs-literal">False</span>,<br>                        <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;account: account login， QR: Scan QR code login&#x27;</span>)<br>    args = parser.parse_args()<br>    a = DaMaiTicket()<br>    a.run()<br></code></pre></td></tr></table></figure><h3 id="signcode-js"><a href="#signcode-js" class="headerlink" title="signcode.js"></a>signcode.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">calcaulate</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params">e, t</span>) &#123;<br>        <span class="hljs-keyword">return</span> e &lt;&lt; t | e &gt;&gt;&gt; <span class="hljs-number">32</span> - t<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">e, t</span>) &#123;<br>        <span class="hljs-keyword">var</span> n, r, o, i, a;<br>        <span class="hljs-keyword">return</span> o = <span class="hljs-number">2147483648</span> &amp; e,<br>            i = <span class="hljs-number">2147483648</span> &amp; t,<br>            a = (<span class="hljs-number">1073741823</span> &amp; e) + (<span class="hljs-number">1073741823</span> &amp; t),<br>            (n = <span class="hljs-number">1073741824</span> &amp; e) &amp; (r = <span class="hljs-number">1073741824</span> &amp; t) ? <span class="hljs-number">2147483648</span> ^ a ^ o ^ i : n | r ? <span class="hljs-number">1073741824</span> &amp; a ? <span class="hljs-number">3221225472</span> ^ a ^ o ^ i : <span class="hljs-number">1073741824</span> ^ a ^ o ^ i : a ^ o ^ i<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">e, r, o, i, a, s, u</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(<span class="hljs-title function_">t</span>(e = <span class="hljs-title function_">n</span>(e, <span class="hljs-title function_">n</span>(<span class="hljs-title function_">n</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, n</span>) &#123;<br>            <span class="hljs-keyword">return</span> e &amp; t | ~e &amp; n<br>        &#125;(r, o, i), a), u)), s), r)<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">e, r, o, i, a, s, u</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(<span class="hljs-title function_">t</span>(e = <span class="hljs-title function_">n</span>(e, <span class="hljs-title function_">n</span>(<span class="hljs-title function_">n</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, n</span>) &#123;<br>            <span class="hljs-keyword">return</span> e &amp; n | t &amp; ~n<br>        &#125;(r, o, i), a), u)), s), r)<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params">e, r, o, i, a, s, u</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(<span class="hljs-title function_">t</span>(e = <span class="hljs-title function_">n</span>(e, <span class="hljs-title function_">n</span>(<span class="hljs-title function_">n</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, n</span>) &#123;<br>            <span class="hljs-keyword">return</span> e ^ t ^ n<br>        &#125;(r, o, i), a), u)), s), r)<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">e, r, o, i, a, s, u</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">n</span>(<span class="hljs-title function_">t</span>(e = <span class="hljs-title function_">n</span>(e, <span class="hljs-title function_">n</span>(<span class="hljs-title function_">n</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, n</span>) &#123;<br>            <span class="hljs-keyword">return</span> t ^ (e | ~n)<br>        &#125;(r, o, i), a), u)), s), r)<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> t, n = <span class="hljs-string">&quot;&quot;</span>, r = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (t = <span class="hljs-number">0</span>; <span class="hljs-number">3</span> &gt;= t; t++)<br>            n += (r = <span class="hljs-string">&quot;0&quot;</span> + (e &gt;&gt;&gt; <span class="hljs-number">8</span> * t &amp; <span class="hljs-number">255</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>)).<span class="hljs-title function_">substr</span>(r.<span class="hljs-property">length</span> - <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">return</span> n<br>    &#125;<br><br>    <span class="hljs-keyword">var</span> u, l, c, g, h, f, d, p, m, v;<br>    <span class="hljs-keyword">for</span> (v = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t, n = e.<span class="hljs-property">length</span>, r = n + <span class="hljs-number">8</span>, o = <span class="hljs-number">16</span> * ((r - r % <span class="hljs-number">64</span>) / <span class="hljs-number">64</span> + <span class="hljs-number">1</span>), i = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(o - <span class="hljs-number">1</span>), a = <span class="hljs-number">0</span>, s = <span class="hljs-number">0</span>; n &gt; s;)<br>            a = s % <span class="hljs-number">4</span> * <span class="hljs-number">8</span>,<br>                i[t = (s - s % <span class="hljs-number">4</span>) / <span class="hljs-number">4</span>] = i[t] | e.<span class="hljs-title function_">charCodeAt</span>(s) &lt;&lt; a,<br>                s++;<br>        <span class="hljs-keyword">return</span> a = s % <span class="hljs-number">4</span> * <span class="hljs-number">8</span>,<br>            i[t = (s - s % <span class="hljs-number">4</span>) / <span class="hljs-number">4</span>] = i[t] | <span class="hljs-number">128</span> &lt;&lt; a,<br>            i[o - <span class="hljs-number">2</span>] = n &lt;&lt; <span class="hljs-number">3</span>,<br>            i[o - <span class="hljs-number">1</span>] = n &gt;&gt;&gt; <span class="hljs-number">29</span>,<br>            i<br>    &#125;(e = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>        e = e.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\r\n/g</span>, <span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;&quot;</span>, n = <span class="hljs-number">0</span>; n &lt; e.<span class="hljs-property">length</span>; n++) &#123;<br>            <span class="hljs-keyword">var</span> r = e.<span class="hljs-title function_">charCodeAt</span>(n);<br>            <span class="hljs-number">128</span> &gt; r ? t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(r) : r &gt; <span class="hljs-number">127</span> &amp;&amp; <span class="hljs-number">2048</span> &gt; r ? (t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(r &gt;&gt; <span class="hljs-number">6</span> | <span class="hljs-number">192</span>),<br>                t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">63</span> &amp; r | <span class="hljs-number">128</span>)) : (t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(r &gt;&gt; <span class="hljs-number">12</span> | <span class="hljs-number">224</span>),<br>                t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(r &gt;&gt; <span class="hljs-number">6</span> &amp; <span class="hljs-number">63</span> | <span class="hljs-number">128</span>),<br>                t += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">63</span> &amp; r | <span class="hljs-number">128</span>))<br>        &#125;<br>        <span class="hljs-keyword">return</span> t<br>    &#125;(e)),<br>        f = <span class="hljs-number">1732584193</span>,<br>        d = <span class="hljs-number">4023233417</span>,<br>        p = <span class="hljs-number">2562383102</span>,<br>        m = <span class="hljs-number">271733878</span>,<br>        u = <span class="hljs-number">0</span>; u &lt; v.<span class="hljs-property">length</span>; u += <span class="hljs-number">16</span>)<br>            l = f,<br>            c = d,<br>            g = p,<br>            h = m,<br>            d = <span class="hljs-title function_">a</span>(d = <span class="hljs-title function_">a</span>(d = <span class="hljs-title function_">a</span>(d = <span class="hljs-title function_">a</span>(d = <span class="hljs-title function_">i</span>(d = <span class="hljs-title function_">i</span>(d = <span class="hljs-title function_">i</span>(d = <span class="hljs-title function_">i</span>(d = <span class="hljs-title function_">o</span>(d = <span class="hljs-title function_">o</span>(d = <span class="hljs-title function_">o</span>(d = <span class="hljs-title function_">o</span>(d = <span class="hljs-title function_">r</span>(d = <span class="hljs-title function_">r</span>(d = <span class="hljs-title function_">r</span>(d = <span class="hljs-title function_">r</span>(d, p = <span class="hljs-title function_">r</span>(p, m = <span class="hljs-title function_">r</span>(m, f = <span class="hljs-title function_">r</span>(f, d, p, m, v[u + <span class="hljs-number">0</span>], <span class="hljs-number">7</span>, <span class="hljs-number">3614090360</span>), d, p, v[u + <span class="hljs-number">1</span>], <span class="hljs-number">12</span>, <span class="hljs-number">3905402710</span>), f, d, v[u + <span class="hljs-number">2</span>], <span class="hljs-number">17</span>, <span class="hljs-number">606105819</span>), m, f, v[u + <span class="hljs-number">3</span>], <span class="hljs-number">22</span>, <span class="hljs-number">3250441966</span>), p = <span class="hljs-title function_">r</span>(p, m = <span class="hljs-title function_">r</span>(m, f = <span class="hljs-title function_">r</span>(f, d, p, m, v[u + <span class="hljs-number">4</span>], <span class="hljs-number">7</span>, <span class="hljs-number">4118548399</span>), d, p, v[u + <span class="hljs-number">5</span>], <span class="hljs-number">12</span>, <span class="hljs-number">1200080426</span>), f, d, v[u + <span class="hljs-number">6</span>], <span class="hljs-number">17</span>, <span class="hljs-number">2821735955</span>), m, f, v[u + <span class="hljs-number">7</span>], <span class="hljs-number">22</span>, <span class="hljs-number">4249261313</span>), p = <span class="hljs-title function_">r</span>(p, m = <span class="hljs-title function_">r</span>(m, f = <span class="hljs-title function_">r</span>(f, d, p, m, v[u + <span class="hljs-number">8</span>], <span class="hljs-number">7</span>, <span class="hljs-number">1770035416</span>), d, p, v[u + <span class="hljs-number">9</span>], <span class="hljs-number">12</span>, <span class="hljs-number">2336552879</span>), f, d, v[u + <span class="hljs-number">10</span>], <span class="hljs-number">17</span>, <span class="hljs-number">4294925233</span>), m, f, v[u + <span class="hljs-number">11</span>], <span class="hljs-number">22</span>, <span class="hljs-number">2304563134</span>), p = <span class="hljs-title function_">r</span>(p, m = <span class="hljs-title function_">r</span>(m, f = <span class="hljs-title function_">r</span>(f, d, p, m, v[u + <span class="hljs-number">12</span>], <span class="hljs-number">7</span>, <span class="hljs-number">1804603682</span>), d, p, v[u + <span class="hljs-number">13</span>], <span class="hljs-number">12</span>, <span class="hljs-number">4254626195</span>), f, d, v[u + <span class="hljs-number">14</span>], <span class="hljs-number">17</span>, <span class="hljs-number">2792965006</span>), m, f, v[u + <span class="hljs-number">15</span>], <span class="hljs-number">22</span>, <span class="hljs-number">1236535329</span>), p = <span class="hljs-title function_">o</span>(p, m = <span class="hljs-title function_">o</span>(m, f = <span class="hljs-title function_">o</span>(f, d, p, m, v[u + <span class="hljs-number">1</span>], <span class="hljs-number">5</span>, <span class="hljs-number">4129170786</span>), d, p, v[u + <span class="hljs-number">6</span>], <span class="hljs-number">9</span>, <span class="hljs-number">3225465664</span>), f, d, v[u + <span class="hljs-number">11</span>], <span class="hljs-number">14</span>, <span class="hljs-number">643717713</span>), m, f, v[u + <span class="hljs-number">0</span>], <span class="hljs-number">20</span>, <span class="hljs-number">3921069994</span>), p = <span class="hljs-title function_">o</span>(p, m = <span class="hljs-title function_">o</span>(m, f = <span class="hljs-title function_">o</span>(f, d, p, m, v[u + <span class="hljs-number">5</span>], <span class="hljs-number">5</span>, <span class="hljs-number">3593408605</span>), d, p, v[u + <span class="hljs-number">10</span>], <span class="hljs-number">9</span>, <span class="hljs-number">38016083</span>), f, d, v[u + <span class="hljs-number">15</span>], <span class="hljs-number">14</span>, <span class="hljs-number">3634488961</span>), m, f, v[u + <span class="hljs-number">4</span>], <span class="hljs-number">20</span>, <span class="hljs-number">3889429448</span>), p = <span class="hljs-title function_">o</span>(p, m = <span class="hljs-title function_">o</span>(m, f = <span class="hljs-title function_">o</span>(f, d, p, m, v[u + <span class="hljs-number">9</span>], <span class="hljs-number">5</span>, <span class="hljs-number">568446438</span>), d, p, v[u + <span class="hljs-number">14</span>], <span class="hljs-number">9</span>, <span class="hljs-number">3275163606</span>), f, d, v[u + <span class="hljs-number">3</span>], <span class="hljs-number">14</span>, <span class="hljs-number">4107603335</span>), m, f, v[u + <span class="hljs-number">8</span>], <span class="hljs-number">20</span>, <span class="hljs-number">1163531501</span>), p = <span class="hljs-title function_">o</span>(p, m = <span class="hljs-title function_">o</span>(m, f = <span class="hljs-title function_">o</span>(f, d, p, m, v[u + <span class="hljs-number">13</span>], <span class="hljs-number">5</span>, <span class="hljs-number">2850285829</span>), d, p, v[u + <span class="hljs-number">2</span>], <span class="hljs-number">9</span>, <span class="hljs-number">4243563512</span>), f, d, v[u + <span class="hljs-number">7</span>], <span class="hljs-number">14</span>, <span class="hljs-number">1735328473</span>), m, f, v[u + <span class="hljs-number">12</span>], <span class="hljs-number">20</span>, <span class="hljs-number">2368359562</span>), p = <span class="hljs-title function_">i</span>(p, m = <span class="hljs-title function_">i</span>(m, f = <span class="hljs-title function_">i</span>(f, d, p, m, v[u + <span class="hljs-number">5</span>], <span class="hljs-number">4</span>, <span class="hljs-number">4294588738</span>), d, p, v[u + <span class="hljs-number">8</span>], <span class="hljs-number">11</span>, <span class="hljs-number">2272392833</span>), f, d, v[u + <span class="hljs-number">11</span>], <span class="hljs-number">16</span>, <span class="hljs-number">1839030562</span>), m, f, v[u + <span class="hljs-number">14</span>], <span class="hljs-number">23</span>, <span class="hljs-number">4259657740</span>), p = <span class="hljs-title function_">i</span>(p, m = <span class="hljs-title function_">i</span>(m, f = <span class="hljs-title function_">i</span>(f, d, p, m, v[u + <span class="hljs-number">1</span>], <span class="hljs-number">4</span>, <span class="hljs-number">2763975236</span>), d, p, v[u + <span class="hljs-number">4</span>], <span class="hljs-number">11</span>, <span class="hljs-number">1272893353</span>), f, d, v[u + <span class="hljs-number">7</span>], <span class="hljs-number">16</span>, <span class="hljs-number">4139469664</span>), m, f, v[u + <span class="hljs-number">10</span>], <span class="hljs-number">23</span>, <span class="hljs-number">3200236656</span>), p = <span class="hljs-title function_">i</span>(p, m = <span class="hljs-title function_">i</span>(m, f = <span class="hljs-title function_">i</span>(f, d, p, m, v[u + <span class="hljs-number">13</span>], <span class="hljs-number">4</span>, <span class="hljs-number">681279174</span>), d, p, v[u + <span class="hljs-number">0</span>], <span class="hljs-number">11</span>, <span class="hljs-number">3936430074</span>), f, d, v[u + <span class="hljs-number">3</span>], <span class="hljs-number">16</span>, <span class="hljs-number">3572445317</span>), m, f, v[u + <span class="hljs-number">6</span>], <span class="hljs-number">23</span>, <span class="hljs-number">76029189</span>), p = <span class="hljs-title function_">i</span>(p, m = <span class="hljs-title function_">i</span>(m, f = <span class="hljs-title function_">i</span>(f, d, p, m, v[u + <span class="hljs-number">9</span>], <span class="hljs-number">4</span>, <span class="hljs-number">3654602809</span>), d, p, v[u + <span class="hljs-number">12</span>], <span class="hljs-number">11</span>, <span class="hljs-number">3873151461</span>), f, d, v[u + <span class="hljs-number">15</span>], <span class="hljs-number">16</span>, <span class="hljs-number">530742520</span>), m, f, v[u + <span class="hljs-number">2</span>], <span class="hljs-number">23</span>, <span class="hljs-number">3299628645</span>), p = <span class="hljs-title function_">a</span>(p, m = <span class="hljs-title function_">a</span>(m, f = <span class="hljs-title function_">a</span>(f, d, p, m, v[u + <span class="hljs-number">0</span>], <span class="hljs-number">6</span>, <span class="hljs-number">4096336452</span>), d, p, v[u + <span class="hljs-number">7</span>], <span class="hljs-number">10</span>, <span class="hljs-number">1126891415</span>), f, d, v[u + <span class="hljs-number">14</span>], <span class="hljs-number">15</span>, <span class="hljs-number">2878612391</span>), m, f, v[u + <span class="hljs-number">5</span>], <span class="hljs-number">21</span>, <span class="hljs-number">4237533241</span>), p = <span class="hljs-title function_">a</span>(p, m = <span class="hljs-title function_">a</span>(m, f = <span class="hljs-title function_">a</span>(f, d, p, m, v[u + <span class="hljs-number">12</span>], <span class="hljs-number">6</span>, <span class="hljs-number">1700485571</span>), d, p, v[u + <span class="hljs-number">3</span>], <span class="hljs-number">10</span>, <span class="hljs-number">2399980690</span>), f, d, v[u + <span class="hljs-number">10</span>], <span class="hljs-number">15</span>, <span class="hljs-number">4293915773</span>), m, f, v[u + <span class="hljs-number">1</span>], <span class="hljs-number">21</span>, <span class="hljs-number">2240044497</span>), p = <span class="hljs-title function_">a</span>(p, m = <span class="hljs-title function_">a</span>(m, f = <span class="hljs-title function_">a</span>(f, d, p, m, v[u + <span class="hljs-number">8</span>], <span class="hljs-number">6</span>, <span class="hljs-number">1873313359</span>), d, p, v[u + <span class="hljs-number">15</span>], <span class="hljs-number">10</span>, <span class="hljs-number">4264355552</span>), f, d, v[u + <span class="hljs-number">6</span>], <span class="hljs-number">15</span>, <span class="hljs-number">2734768916</span>), m, f, v[u + <span class="hljs-number">13</span>], <span class="hljs-number">21</span>, <span class="hljs-number">1309151649</span>), p = <span class="hljs-title function_">a</span>(p, m = <span class="hljs-title function_">a</span>(m, f = <span class="hljs-title function_">a</span>(f, d, p, m, v[u + <span class="hljs-number">4</span>], <span class="hljs-number">6</span>, <span class="hljs-number">4149444226</span>), d, p, v[u + <span class="hljs-number">11</span>], <span class="hljs-number">10</span>, <span class="hljs-number">3174756917</span>), f, d, v[u + <span class="hljs-number">2</span>], <span class="hljs-number">15</span>, <span class="hljs-number">718787259</span>), m, f, v[u + <span class="hljs-number">9</span>], <span class="hljs-number">21</span>, <span class="hljs-number">3951481745</span>),<br>            f = <span class="hljs-title function_">n</span>(f, l),<br>            d = <span class="hljs-title function_">n</span>(d, c),<br>            p = <span class="hljs-title function_">n</span>(p, g),<br>            m = <span class="hljs-title function_">n</span>(m, h);<br>    <span class="hljs-keyword">return</span> (<span class="hljs-title function_">s</span>(f) + <span class="hljs-title function_">s</span>(d) + <span class="hljs-title function_">s</span>(p) + <span class="hljs-title function_">s</span>(m)).<span class="hljs-title function_">toLowerCase</span>()<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="tools-py"><a href="#tools-py" class="headerlink" title="tools.py"></a>tools.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">__Author__ = &quot;MakiNaruto&quot;</span><br><span class="hljs-string">__Version__ = &quot;2.1.0&quot;</span><br><span class="hljs-string">__Description__ = &quot;&quot;</span><br><span class="hljs-string">__Created__ = 2022/5/02 14:16</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> execjs<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> platform<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<br><span class="hljs-keyword">from</span> selenium.webdriver.support.wait <span class="hljs-keyword">import</span> WebDriverWait<br><span class="hljs-keyword">from</span> selenium.webdriver.support <span class="hljs-keyword">import</span> expected_conditions <span class="hljs-keyword">as</span> EC<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save_cookies</span>(<span class="hljs-params">login_cookies</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 保存cookies &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cookies.pkl&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fw:<br>        pickle.dump(login_cookies, fw)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load_cookies</span>():<br>    <span class="hljs-string">&quot;&quot;&quot; 读取保存的cookies &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cookies.pkl&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> fr:<br>            cookies = pickle.load(fr)<br>        <span class="hljs-keyword">return</span> cookies<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;加载cookies失败&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span> * <span class="hljs-number">10</span>)<br>        <span class="hljs-built_in">print</span>(e)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check_login_status</span>(<span class="hljs-params">login_cookies</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 检测是否登录成功 &quot;&quot;&quot;</span><br>    personal_title = <span class="hljs-string">&#x27;我的大麦-个人信息&#x27;</span><br><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;passport.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;cache-control&#x27;</span>: <span class="hljs-string">&#x27;max-age=0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;99&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.83 Safari/537.36&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-origin&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;navigate&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-user&#x27;</span>: <span class="hljs-string">&#x27;?1&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;document&#x27;</span>,<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://passport.damai.cn/login?ru=https://passport.damai.cn/accountinfo/myinfo&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>    &#125;<br><br>    response = requests.get(<span class="hljs-string">&#x27;https://passport.damai.cn/accountinfo/myinfo&#x27;</span>,<br>                            headers=headers,<br>                            cookies=login_cookies)<br>    personal_info = BeautifulSoup(response.text, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>    <span class="hljs-keyword">if</span> personal_info.title.text == personal_title:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">account_login</span>(<span class="hljs-params">login_type: <span class="hljs-built_in">str</span>, login_id=<span class="hljs-literal">None</span>, login_password=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    登录大麦网</span><br><span class="hljs-string"></span><br><span class="hljs-string">    :param login_id:</span><br><span class="hljs-string">    :param login_password:</span><br><span class="hljs-string">    :param login_type:  选择哪种方式进行登录</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    damai_title = <span class="hljs-string">&#x27;大麦网-全球演出赛事官方购票平台-100%正品、先付先抢、在线选座！&#x27;</span><br><br>    login_url = <span class="hljs-string">&#x27;https://passport.damai.cn/login&#x27;</span><br>    option = webdriver.ChromeOptions()  <span class="hljs-comment"># 默认Chrome浏览器</span><br>    <span class="hljs-comment"># 关闭开发者模式, window.navigator.webdriver 控件检测到你是selenium进入，若关闭会导致出现滑块并无法进入。</span><br>    option.add_experimental_option(<span class="hljs-string">&#x27;excludeSwitches&#x27;</span>, [<span class="hljs-string">&#x27;enable-automation&#x27;</span>])<br>    option.add_argument(<span class="hljs-string">&#x27;--disable-blink-features=AutomationControlled&#x27;</span>)<br>    <span class="hljs-comment"># option.add_argument(&#x27;headless&#x27;)               # Chrome以后台模式进行，注释以进行调试</span><br>    <span class="hljs-comment"># option.add_argument(&#x27;window-size=1920x1080&#x27;)  # 指定分辨率</span><br>    <span class="hljs-comment"># option.add_argument(&#x27;no-sandbox&#x27;)             # 取消沙盒模式</span><br>    <span class="hljs-comment"># option.add_argument(&#x27;--disable-gpu&#x27;)          # 禁用GPU加速</span><br>    <span class="hljs-comment"># option.add_argument(&#x27;disable-dev-shm-usage&#x27;)  # 大量渲染时候写入/tmp而非/dev/shm</span><br>    <span class="hljs-keyword">if</span> platform.system().lower() == <span class="hljs-string">&#x27;linux&#x27;</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_linux&#x27;</span>)<br>    <span class="hljs-keyword">elif</span> platform.system().lower() == <span class="hljs-string">&#x27;windows&#x27;</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_windows&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_mac&#x27;</span>)<br><br>    driver = webdriver.Chrome(chromedriver, options=option)<br>    driver.set_page_load_timeout(<span class="hljs-number">60</span>)<br>    driver.get(login_url)<br>    <span class="hljs-keyword">if</span> login_type == <span class="hljs-string">&#x27;account&#x27;</span>:<br>        driver.switch_to.frame(<span class="hljs-string">&#x27;alibaba-login-box&#x27;</span>)  <span class="hljs-comment"># 切换内置frame，否则会找不到元素位置</span><br>        driver.find_element_by_name(<span class="hljs-string">&#x27;fm-login-id&#x27;</span>).send_keys(login_id)<br>        driver.find_element_by_name(<span class="hljs-string">&#x27;fm-login-password&#x27;</span>).send_keys(login_password)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;password-login&#x27;</span>).send_keys(Keys.ENTER)<br>    WebDriverWait(driver, <span class="hljs-number">180</span>, <span class="hljs-number">0.5</span>).until(EC.title_contains(damai_title))<br><br>    login_cookies = &#123;&#125;<br>    <span class="hljs-keyword">if</span> driver.title != damai_title:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;登录异常，请检查页面登录提示信息&#x27;</span>)<br>    <span class="hljs-keyword">for</span> cookie <span class="hljs-keyword">in</span> driver.get_cookies():<br>        login_cookies[cookie[<span class="hljs-string">&#x27;name&#x27;</span>]] = cookie[<span class="hljs-string">&#x27;value&#x27;</span>]<br>    <span class="hljs-keyword">if</span> check_login_status(login_cookies):<br>        <span class="hljs-keyword">return</span> login_cookies<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_api_param</span>():<br>    <span class="hljs-string">&quot;&quot;&quot; 获取请求大麦API所必须的一些参数, 可能大麦网js代码更新后需要修改此函数内的代码以重新获得参数信息 &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">format_param</span>(<span class="hljs-params">context</span>):<br>        param = []<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> context.split(<span class="hljs-string">&#x27;,&#x27;</span>):<br>            k, v = line.split(<span class="hljs-string">&#x27;:&#x27;</span>)<br>            param.append(<span class="hljs-string">&#x27;&quot;&#123;&#125;&quot;:&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(k, v))<br>        param = json.loads(<span class="hljs-string">&#x27;&#123;&#x27;</span> + <span class="hljs-string">&#x27;,&#x27;</span>.join(param) + <span class="hljs-string">&#x27;&#125;&#x27;</span>)<br>        <span class="hljs-keyword">return</span> param<br><br>    js_code_define = requests.get(<br>        <span class="hljs-string">&quot;https://g.alicdn.com/damai/??/vue-pc/0.0.70/vendor.js,vue-pc/0.0.70/perform/perform.js&quot;</span>).text<br>    <span class="hljs-comment"># 获取商品SKU的API参数</span><br>    commodity_param = re.search(<span class="hljs-string">&#x27;getSkuData:function.*?\|\|&quot;&quot;&#125;&#125;&#x27;</span>, js_code_define).group()<br>    commodity_param = re.search(<span class="hljs-string">&#x27;data:&#123;.*?\|\|&quot;&quot;&#125;&#125;&#x27;</span>, commodity_param).group()<br>    commodity_param = commodity_param.replace(<span class="hljs-string">&#x27;data:&#123;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>). \<br>        replace(<span class="hljs-string">&#x27;this.vmSkuData.privilegeId||&quot;&quot;&#125;&#125;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&quot;&#x27;</span>). \<br>        replace(<span class="hljs-string">&#x27;itemId:e&#x27;</span>, <span class="hljs-string">&#x27;itemId:&quot;&quot;&#x27;</span>)<br>    commodity_param = format_param(commodity_param)<br>    <span class="hljs-comment"># 获取订单购买用户的API参数</span><br>    ex_params = re.search(<span class="hljs-string">&#x27;,i=Z&#125;else&#123;.*?;e&amp;&amp;&#x27;</span>, js_code_define).group()<br>    ex_params = re.search(<span class="hljs-string">&#x27;&#123;.*&#125;&#x27;</span>, ex_params).group()<br>    ex_params = ex_params.replace(<span class="hljs-string">&#x27;&#123;var u=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)[<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>    ex_params = format_param(ex_params)<br>    <span class="hljs-keyword">return</span> commodity_param, ex_params<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_sign_code</span>(<span class="hljs-params">h5_token: <span class="hljs-built_in">str</span>, time_stamp, api_param</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    返回请求选座信息接口必备的sign信息</span><br><span class="hljs-string"></span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    node = execjs.get()<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;signcode.js&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        js_file = f.read()<br>    js_exec = node.<span class="hljs-built_in">compile</span>(js_file)<br>    param1 = <span class="hljs-string">&#x27;&#123;&#125;&amp;&#123;&#125;&amp;12574478&amp;&#x27;</span>.<span class="hljs-built_in">format</span>(h5_token, time_stamp)<br><br>    context = param1 + api_param<br>    sign_code = js_exec.call(<span class="hljs-string">&#x27;calcaulate&#x27;</span>, context)<br>    <span class="hljs-keyword">return</span> sign_code<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_select_seat_params</span>(<span class="hljs-params">item_id, data_id=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 获取座位信息的必备参数 &quot;&quot;&quot;</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;detail.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;*/*&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://detail.damai.cn/item.htm?spm=a2oeg.home.card_1.ditem_1.591b23e1qozgyw&amp;id=671100996170&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;script&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;no-cors&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-origin&#x27;</span>,<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>,<br>    &#125;<br><br>    params = &#123;<span class="hljs-string">&quot;itemId&quot;</span>: item_id,<br>              <span class="hljs-string">&quot;dataId&quot;</span>: data_id,<br>              <span class="hljs-string">&quot;dataType&quot;</span>: <span class="hljs-number">4</span>,<br>              <span class="hljs-string">&quot;apiVersion&quot;</span>: <span class="hljs-number">2.0</span>,<br>              <span class="hljs-string">&quot;dmChannel&quot;</span>: <span class="hljs-string">&quot;damai_pc&quot;</span>,<br>              <span class="hljs-string">&quot;bizCode&quot;</span>: <span class="hljs-string">&quot;ali.china.damai&quot;</span>,<br>              <span class="hljs-string">&quot;scenario&quot;</span>: <span class="hljs-string">&quot;itemsku&quot;</span><br>              &#125;<br><br>    response = requests.get(<span class="hljs-string">&#x27;https://detail.damai.cn/subpage&#x27;</span>, headers=headers, params=params)<br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        result = json.loads(response.text[<span class="hljs-number">5</span>:-<span class="hljs-number">1</span>])<br>        item_basic_info = result.get(<span class="hljs-string">&#x27;itemBasicInfo&#x27;</span>)<br>        city_id = item_basic_info.get(<span class="hljs-string">&#x27;nationalStandardCityId&#x27;</span>)<br>        project_id = item_basic_info.get(<span class="hljs-string">&#x27;projectId&#x27;</span>)<br>        item_id = item_basic_info.get(<span class="hljs-string">&#x27;itemId&#x27;</span>)<br>        perform_id = result.get(<span class="hljs-string">&#x27;perform&#x27;</span>).get(<span class="hljs-string">&#x27;performId&#x27;</span>)<br>        <span class="hljs-keyword">return</span> city_id, project_id, item_id, perform_id<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_seat_dynamic_info</span>(<span class="hljs-params">cookies, project_id, item_id, perform_id</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 获取 standId, 用于获取所有座位信息 &quot;&quot;&quot;</span><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>        <span class="hljs-comment"># Requests sorts cookies= alphabetically</span><br>        <span class="hljs-comment"># &#x27;cookie&#x27;: &#x27;cna=QAvhGhruGS4CAXx+ibfGKnY/; t=1ff77fc3f03114d784e6055f2e58128e; damai.cn_email=23964951@qq.com; damai.cn_nickName=MakiNaruto; munb=4031179480; xlly_s=1; cookie2=109b25aa6388dfbc71b8d6cb05dbb154; _tb_token_=3e87e37a17bde; _samesite_flag_=true; _hvn_login=18; csg=21db6663; damai.cn_user=SHm/AXRMF7mxpN8uip9sNS+4EH/qiS5ef3Q/K/+slykinDgISXh0XsCSZVMGSCKgGxb2+Rjuqig=; damai.cn_user_new=SHm%2FAXRMF7mxpN8uip9sNS%2B4EH%2FqiS5ef3Q%2FK%2F%2BslykinDgISXh0XsCSZVMGSCKgGxb2%2BRjuqig%3D; h5token=3936e2bf88964af2a37c20b092c61c75_1_1; damai_cn_user=SHm%2FAXRMF7mxpN8uip9sNS%2B4EH%2FqiS5ef3Q%2FK%2F%2BslykinDgISXh0XsCSZVMGSCKgGxb2%2BRjuqig%3D; loginkey=3936e2bf88964af2a37c20b092c61c75_1_1; user_id=108050604; _m_h5_tk=2ef39e419fe42af48f9fb3adc7e043df_1651324694423; _m_h5_tk_enc=a442fe5379084c1830b4418f456f7fb3; tfstk=c4McBWjbVz_B4DFoOKwXCmEadKORZ9Wa-AkSUn0_9Hotq0MPi_CPTJd2qrYBu11..; l=eBgKXWFnLg3Eg5F3BOfwourza77OSIRAguPzaNbMiOCPOTfp5_f1W6qQzd89C3GNh6zeR3J8Iu2zBeYBcSvEdvNX0cWf96Hmn; isg=BEhIJmYUvgYlEtLl2khALh8EGbBa8az7J9rUOgL5lEO23ehHqgF8i95bVb2tbWTT&#x27;,</span><br>        <span class="hljs-string">&#x27;origin&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn/&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-site&#x27;</span>,<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>,<br>    &#125;<br>    h5_token = cookies.get(<span class="hljs-string">&#x27;_m_h5_tk&#x27;</span>).split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>    time_stamp = <span class="hljs-built_in">int</span>(datetime.now().timestamp() * <span class="hljs-number">1000</span>)<br>    api_param = json.dumps(&#123;<span class="hljs-string">&#x27;projectId&#x27;</span>: project_id,<br>                            <span class="hljs-string">&#x27;performanceId&#x27;</span>: perform_id,<br>                            <span class="hljs-string">&#x27;itemId&#x27;</span>: item_id,<br>                            <span class="hljs-string">&#x27;hasPromotion&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>                            <span class="hljs-string">&#x27;dmChannel&#x27;</span>: <span class="hljs-string">&#x27;pc@damai_pc&#x27;</span>&#125;).replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    sign_code = get_sign_code(h5_token, time_stamp, api_param)<br><br>    params = &#123;<br>        <span class="hljs-string">&#x27;jsv&#x27;</span>: <span class="hljs-string">&#x27;2.6.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;appKey&#x27;</span>: <span class="hljs-string">&#x27;12574478&#x27;</span>,<br>        <span class="hljs-string">&#x27;t&#x27;</span>: time_stamp,<br>        <span class="hljs-string">&#x27;sign&#x27;</span>: sign_code,<br>        <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;originaljson&#x27;</span>,<br>        <span class="hljs-string">&#x27;dataType&#x27;</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<br>        <span class="hljs-string">&#x27;v&#x27;</span>: <span class="hljs-string">&#x27;1.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;H5Request&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiCreep&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiFlood&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;api&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.wireless.seat.dynamicinfo&#x27;</span>,<br>        <span class="hljs-string">&#x27;data&#x27;</span>: api_param,<br>    &#125;<br><br>    response = requests.get(<span class="hljs-string">&#x27;https://mtop.damai.cn/h5/mtop.damai.wireless.seat.dynamicinfo/1.0/&#x27;</span>, params=params,<br>                            cookies=cookies, headers=headers)<br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        result = json.loads(response.text).get(<span class="hljs-string">&#x27;data&#x27;</span>)<br>        stand_id = result.get(<span class="hljs-string">&#x27;standColorList&#x27;</span>)[<span class="hljs-number">0</span>].get(<span class="hljs-string">&#x27;standId&#x27;</span>)<br>        seat_price_list = result.get(<span class="hljs-string">&#x27;priceList&#x27;</span>)<br>        <span class="hljs-keyword">return</span> stand_id, seat_price_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_select_seat_api</span>(<span class="hljs-params">cookies, perform_id, city_id</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 得到请求所有座位信息的api地址 &quot;&quot;&quot;</span><br>    h5_token = cookies.get(<span class="hljs-string">&#x27;_m_h5_tk&#x27;</span>).split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>    time_stamp = <span class="hljs-built_in">int</span>(datetime.now().timestamp() * <span class="hljs-number">1000</span>)<br>    api_param = json.dumps(&#123;<span class="hljs-string">&quot;cityId&quot;</span>: city_id,<br>                            <span class="hljs-string">&quot;pfId&quot;</span>: <span class="hljs-number">2147483647</span> ^ <span class="hljs-built_in">int</span>(perform_id),<br>                            <span class="hljs-string">&quot;excludestatus&quot;</span>: <span class="hljs-literal">True</span>,<br>                            <span class="hljs-string">&quot;svgEncVer&quot;</span>: <span class="hljs-string">&quot;1.0&quot;</span>,<br>                            <span class="hljs-string">&quot;dmChannel&quot;</span>: <span class="hljs-string">&quot;pc@damai_pc&quot;</span>&#125;).replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    sign_code = get_sign_code(h5_token, time_stamp, api_param)<br>    headers = &#123;<br>        <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>        <span class="hljs-string">&#x27;origin&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn/&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-site&#x27;</span>,<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>,<br>    &#125;<br><br>    params = &#123;<br>        <span class="hljs-string">&#x27;jsv&#x27;</span>: <span class="hljs-string">&#x27;2.6.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;appKey&#x27;</span>: <span class="hljs-string">&#x27;12574478&#x27;</span>,<br>        <span class="hljs-string">&#x27;t&#x27;</span>: time_stamp,<br>        <span class="hljs-string">&#x27;sign&#x27;</span>: sign_code,<br>        <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;originaljson&#x27;</span>,<br>        <span class="hljs-string">&#x27;dataType&#x27;</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<br>        <span class="hljs-string">&#x27;v&#x27;</span>: <span class="hljs-string">&#x27;1.3&#x27;</span>,<br>        <span class="hljs-string">&#x27;H5Request&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiCreep&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiFlood&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;api&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.wireless.project.getB2B2CAreaInfo&#x27;</span>,<br>        <span class="hljs-string">&#x27;data&#x27;</span>: api_param,<br>    &#125;<br>    response = requests.get(<span class="hljs-string">&#x27;https://mtop.damai.cn/h5/mtop.damai.wireless.project.getb2b2careainfo/1.3/&#x27;</span>,<br>                            headers=headers, params=params, cookies=cookies)<br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        api_text = json.loads(response.text).get(<span class="hljs-string">&#x27;data&#x27;</span>).get(<span class="hljs-string">&#x27;result&#x27;</span>)<br>        api_info = json.loads(api_text).get(<span class="hljs-string">&#x27;seatQuYu&#x27;</span>)<br>        api_address = api_info.get(<span class="hljs-string">&#x27;resourcesPath&#x27;</span>)<br>        seat_price_list = api_info.get(<span class="hljs-string">&#x27;seatPriceList&#x27;</span>)<br>        <span class="hljs-keyword">return</span> api_address<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_valuable_seat_id</span>(<span class="hljs-params">cookies, project_id, perform_id, city_id, stand_id</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 获取可用的座位信息 &quot;&quot;&quot;</span><br>    h5_token = cookies.get(<span class="hljs-string">&#x27;_m_h5_tk&#x27;</span>).split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>    time_stamp = <span class="hljs-built_in">int</span>(datetime.now().timestamp() * <span class="hljs-number">1000</span>)<br>    api_param = json.dumps(&#123;<span class="hljs-string">&quot;cityId&quot;</span>: city_id,<br>                            <span class="hljs-string">&quot;pfId&quot;</span>: <span class="hljs-number">2147483647</span> ^ <span class="hljs-built_in">int</span>(perform_id),<br>                            <span class="hljs-string">&quot;standIds&quot;</span>: stand_id,<br>                            <span class="hljs-string">&quot;channel&quot;</span>: <span class="hljs-number">100100010001</span>,<br>                            <span class="hljs-string">&quot;projectId&quot;</span>: project_id,<br>                            <span class="hljs-string">&quot;lessFirst&quot;</span>: <span class="hljs-literal">True</span>,<br>                            <span class="hljs-string">&quot;dmChannel&quot;</span>: <span class="hljs-string">&quot;pc@damai_pc&quot;</span>&#125;).replace(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    sign_code = get_sign_code(h5_token, time_stamp, api_param)<br><br>    headers = &#123;<br>        <span class="hljs-string">&#x27;authority&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span>,<br>        <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh,en;q=0.9,en-US;q=0.8,zh-CN;q=0.7&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>        <span class="hljs-string">&#x27;origin&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn&#x27;</span>,<br>        <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://seatsvc.damai.cn/&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua&#x27;</span>: <span class="hljs-string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="hljs-string">&#x27;?0&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="hljs-string">&#x27;&quot;macOS&quot;&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;cors&#x27;</span>,<br>        <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;same-site&#x27;</span>,<br>        <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;</span>,<br>    &#125;<br><br>    params = &#123;<br>        <span class="hljs-string">&#x27;jsv&#x27;</span>: <span class="hljs-string">&#x27;2.6.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;appKey&#x27;</span>: <span class="hljs-string">&#x27;12574478&#x27;</span>,<br>        <span class="hljs-string">&#x27;t&#x27;</span>: time_stamp,<br>        <span class="hljs-string">&#x27;sign&#x27;</span>: sign_code,<br>        <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;originaljson&#x27;</span>,<br>        <span class="hljs-string">&#x27;dataType&#x27;</span>: <span class="hljs-string">&#x27;json&#x27;</span>,<br>        <span class="hljs-string">&#x27;v&#x27;</span>: <span class="hljs-string">&#x27;1.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;H5Request&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiCreep&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;AntiFlood&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span>,<br>        <span class="hljs-string">&#x27;api&#x27;</span>: <span class="hljs-string">&#x27;mtop.damai.wireless.seat.queryseatstatus&#x27;</span>,<br>        <span class="hljs-string">&#x27;data&#x27;</span>: api_param<br>    &#125;<br><br>    response = requests.get(<span class="hljs-string">&#x27;https://mtop.damai.cn/h5/mtop.damai.wireless.seat.queryseatstatus/1.0/&#x27;</span>, params=params,<br>                            cookies=cookies, headers=headers)<br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        seat_data = json.loads(response.text)<br>        seat_data = seat_data.get(<span class="hljs-string">&#x27;data&#x27;</span>)<br>        <span class="hljs-keyword">return</span> seat_data<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_seat_dict</span>(<span class="hljs-params">detail, save_dict</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 构建座位层级信息 &quot;&quot;&quot;</span><br>    floor = detail.get(<span class="hljs-string">&#x27;fn&#x27;</span>)<br>    row = detail.get(<span class="hljs-string">&#x27;x&#x27;</span>)<br>    col = detail.get(<span class="hljs-string">&#x27;y&#x27;</span>)<br>    sid = detail.get(<span class="hljs-string">&#x27;sid&#x27;</span>)<br>    <span class="hljs-keyword">if</span> floor <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> save_dict:<br>        save_dict.update(&#123;floor: &#123;&#125;&#125;)<br>    <span class="hljs-keyword">if</span> row <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> save_dict.get(floor):<br>        save_dict[floor].update(&#123;row: &#123;&#125;&#125;)<br>    <span class="hljs-keyword">if</span> col <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> save_dict.get(floor).get(row):<br>        save_dict[floor][row].update(&#123;col: sid&#125;)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">format_valuable_seatid</span>(<span class="hljs-params">all_seats_info, valuable_seats_info, price_id</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 格式化 seatid 相关信息 &quot;&quot;&quot;</span><br>    sid2coordinate = &#123;&#125;<br>    coordinate2sid = &#123;&#125;<br><br>    <span class="hljs-keyword">for</span> detail <span class="hljs-keyword">in</span> all_seats_info.get(<span class="hljs-string">&#x27;seats&#x27;</span>):<br>        create_seat_dict(detail, coordinate2sid)<br>        sid2coordinate.update(&#123;<br>            detail.get(<span class="hljs-string">&#x27;sid&#x27;</span>): &#123;<br>                <span class="hljs-string">&#x27;sid&#x27;</span>: detail.get(<span class="hljs-string">&#x27;sid&#x27;</span>),<br>                <span class="hljs-string">&#x27;plid&#x27;</span>: detail.get(<span class="hljs-string">&#x27;plid&#x27;</span>),<br>                <span class="hljs-string">&#x27;fn&#x27;</span>: detail.get(<span class="hljs-string">&#x27;fn&#x27;</span>),<br>                <span class="hljs-string">&#x27;x&#x27;</span>: detail.get(<span class="hljs-string">&#x27;x&#x27;</span>),<br>                <span class="hljs-string">&#x27;y&#x27;</span>: detail.get(<span class="hljs-string">&#x27;y&#x27;</span>)<br>            &#125;&#125;)<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;noseat&#x27;</span> <span class="hljs-keyword">in</span> valuable_seats_info:<br>        <span class="hljs-comment"># 去除不可用的座位信息</span><br>        noseat_data = valuable_seats_info.get(<span class="hljs-string">&#x27;noseat&#x27;</span>)<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> noseat_data:<br>            sid = line.get(<span class="hljs-string">&#x27;sid&#x27;</span>)<br>            floor = sid2coordinate.get(sid).get(<span class="hljs-string">&#x27;floor&#x27;</span>)<br>            row = sid2coordinate.get(sid).get(<span class="hljs-string">&#x27;row&#x27;</span>)<br>            col = sid2coordinate.get(sid).get(<span class="hljs-string">&#x27;col&#x27;</span>)<br>            coordinate2sid[floor][row].pop(col)<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> coordinate2sid:<br>            <span class="hljs-keyword">if</span> line.get(<span class="hljs-string">&#x27;plid&#x27;</span>) != price_id:<br>                floor = line.get(<span class="hljs-string">&#x27;fn&#x27;</span>)<br>                row = line.get(<span class="hljs-string">&#x27;row&#x27;</span>)<br>                col = line.get(<span class="hljs-string">&#x27;col&#x27;</span>)<br>                coordinate2sid[floor][row].pop(col)<br>        <span class="hljs-keyword">return</span> coordinate2sid<br>    <span class="hljs-keyword">else</span>:<br>        valuable_sid = &#123;&#125;<br>        seat_data = valuable_seats_info.get(<span class="hljs-string">&#x27;seat&#x27;</span>)<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> seat_data:<br>            sid = line.get(<span class="hljs-string">&#x27;sid&#x27;</span>)<br>            detail = sid2coordinate.get(sid)<br>            <span class="hljs-keyword">if</span> detail.get(<span class="hljs-string">&#x27;plid&#x27;</span>) == price_id:<br>                create_seat_dict(detail, valuable_sid)<br>        <span class="hljs-keyword">return</span> valuable_sid<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pick_seat</span>(<span class="hljs-params">valuable_seat, stand_id, buy_nums</span>):<br>    <span class="hljs-string">&quot;&quot;&quot; 简单实现选取座位信息 &quot;&quot;&quot;</span><br>    selected_seats = []<br>    <span class="hljs-keyword">for</span> floor, floor_info <span class="hljs-keyword">in</span> valuable_seat.items():<br>        <span class="hljs-keyword">for</span> row, row_info <span class="hljs-keyword">in</span> floor_info.items():<br>            <span class="hljs-keyword">for</span> col, sid <span class="hljs-keyword">in</span> row_info.items():<br>                selected_seats.append(&#123;<span class="hljs-string">&#x27;seatId&#x27;</span>: sid, <span class="hljs-string">&#x27;standId&#x27;</span>: stand_id&#125;)<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(selected_seats) == buy_nums:<br>                    <span class="hljs-keyword">return</span> selected_seats<br></code></pre></td></tr></table></figure><h3 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">beautifulsoup4</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">4.9</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">requests</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">2.24</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">selenium</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">3.141</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">pyexecjs</span><span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">1.5</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="抢购逻辑"><a href="#抢购逻辑" class="headerlink" title="抢购逻辑"></a>抢购逻辑</h2><h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h3><p>需登录时用到页面，通过selenium打开页面进行登录。其余操作均通过requests进行请求。</p><p>其流程图如下:</p><p><a href="https://github.com/MakiNaruto/Automatic_ticket_purchase/blob/master/images/flow_chart.jpeg"><img src="https://github.com/MakiNaruto/Automatic_ticket_purchase/raw/master/images/flow_chart.jpeg" alt="img" style="zoom: 67%;" /></a></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="1-配置环境"><a href="#1-配置环境" class="headerlink" title="1. 配置环境"></a>1. 配置环境</h4><h5 id="1-1-安装所需要的环境"><a href="#1-1-安装所需要的环境" class="headerlink" title="1.1 安装所需要的环境"></a>1.1 安装所需要的环境</h5><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> -r requirements.txt<br></code></pre></td></tr></table></figure><h5 id="1-2-需要下载与系统安装对应的ChromeDriver驱动并配置-也可以改用其他浏览器驱动-，"><a href="#1-2-需要下载与系统安装对应的ChromeDriver驱动并配置-也可以改用其他浏览器驱动-，" class="headerlink" title="1.2 需要下载与系统安装对应的ChromeDriver驱动并配置(也可以改用其他浏览器驱动)，"></a>1.2 需要下载与系统安装对应的ChromeDriver驱动并配置(也可以改用其他浏览器驱动)，</h5><p>下载地址: <a href="http://chromedriver.storage.googleapis.com/index.html">http://chromedriver.storage.googleapis.com/index.html</a></p><h5 id="1-3-配置驱动路径，默认在项目根目录下。"><a href="#1-3-配置驱动路径，默认在项目根目录下。" class="headerlink" title="1.3 配置驱动路径，默认在项目根目录下。"></a>1.3 配置驱动路径，默认在项目根目录下。</h5><p>例如：windows系统下，则重命名下载的chromedriver，将其重命名为chromedriver_windows</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">account_login</span>():<br>    <span class="hljs-keyword">if</span> platform.system().lower() == <span class="hljs-string">&#x27;linux&#x27;</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_linux&#x27;</span>)<br>    <span class="hljs-keyword">elif</span> platform.system().lower() == <span class="hljs-string">&#x27;windows&#x27;</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_windows&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        chromedriver = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;chromedriver_mac&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="2-运行"><a href="#2-运行" class="headerlink" title="2. 运行"></a>2. 运行</h4><h5 id="2-1-若采取账号方式，修改代码中下面的信息，进行抢票。"><a href="#2-1-若采取账号方式，修改代码中下面的信息，进行抢票。" class="headerlink" title="2.1 若采取账号方式，修改代码中下面的信息，进行抢票。"></a>2.1 若采取账号方式，修改代码中下面的信息，进行抢票。</h5><p>item_id根据地区来确定,每一个城市对应不同的item_id。选择相应地区后将箭头指向的item_id填写到函数内。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>    ...<br>    <span class="hljs-comment"># 若选择账号登录方式，则需要填写</span><br>    <span class="hljs-variable language_">self</span>.login_id: <span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;account&#x27;</span>          <span class="hljs-comment"># 大麦网登录账户名</span><br>    <span class="hljs-variable language_">self</span>.login_password: <span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;password&#x27;</span>   <span class="hljs-comment"># 大麦网登录密码</span><br>    <span class="hljs-comment"># 以下为抢票必须的参数</span><br>    <span class="hljs-variable language_">self</span>.item_id: <span class="hljs-built_in">int</span> = <span class="hljs-number">610820299671</span>        <span class="hljs-comment"># 商品id</span><br>    <span class="hljs-variable language_">self</span>.viewer: <span class="hljs-built_in">list</span> = [<span class="hljs-string">&#x27;viewer1&#x27;</span>]         <span class="hljs-comment"># 在大麦网已填写的观影人</span><br>    <span class="hljs-variable language_">self</span>.buy_nums: <span class="hljs-built_in">int</span> = <span class="hljs-number">1</span>                  <span class="hljs-comment"># 购买影票数量, 需与观影人数量一致</span><br>    <span class="hljs-variable language_">self</span>.ticket_price: <span class="hljs-built_in">int</span> = <span class="hljs-number">180</span>            <span class="hljs-comment"># 购买指定票价</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/MakiNaruto/Automatic_ticket_purchase/blob/master/images/item_id.png"><img src="https://github.com/MakiNaruto/Automatic_ticket_purchase/raw/master/images/item_id.png" alt="image" style="zoom: 33%;" /></a></p><h5 id="2-2-运行"><a href="#2-2-运行" class="headerlink" title="2.2 运行"></a>2.2 运行</h5><p>初次登陆没有cookies，默认登录方式为账号密码登录方式，可改成其他方式进行登录，如扫码或短信登录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 默认登录方式</span><br>python Automatic_ticket_purchase.py<br><span class="hljs-comment"># 指定其他方式登录</span><br>python Automatic_ticket_purchase.py --mode qr<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>源码分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pandas常用教程</title>
    <link href="/2024/11/18/pandas%E5%B8%B8%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2024/11/18/pandas%E5%B8%B8%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="pandas常用教程"><a href="#pandas常用教程" class="headerlink" title="pandas常用教程"></a>pandas常用教程</h1><h2 id="根据条件获取元素索引"><a href="#根据条件获取元素索引" class="headerlink" title="根据条件获取元素索引"></a>根据条件获取元素索引</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">df = pd.DataFrame(&#123;<span class="hljs-string">&#x27;BoolCol&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>],<span class="hljs-string">&#x27;attr&#x27;</span>: [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">22</span>, <span class="hljs-number">44</span>, <span class="hljs-number">66</span>]&#125;,<br>       index=[<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">50</span>])<br><span class="hljs-built_in">print</span>(df)<br>a = df[(df.BoolCol==<span class="hljs-number">3</span>)&amp;(df.attr==<span class="hljs-number">22</span>)].index.tolist()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://blog.csdn.net/xwd18280820053/article/details/72614734">https://blog.csdn.net/xwd18280820053/article/details/72614734</a></li></ul><h2 id="dataframe模糊查询-去重"><a href="#dataframe模糊查询-去重" class="headerlink" title="dataframe模糊查询&amp;去重"></a>dataframe模糊查询&amp;去重</h2><h3 id="数据框模糊查询"><a href="#数据框模糊查询" class="headerlink" title="数据框模糊查询"></a>数据框模糊查询</h3><p>数据框查询使用<code>contains函数+正则表达式</code>来实现。语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[data.列名.<span class="hljs-built_in">str</span>.contains()]<br></code></pre></td></tr></table></figure><p>查询以某某开头的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[data.列名.<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;^某某&#x27;</span>)]<br></code></pre></td></tr></table></figure><p>查询包含某某的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[data.列名.<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;某某&#x27;</span>)]<br></code></pre></td></tr></table></figure><p>查询以某某结尾的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[data.列名.<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;某某$&#x27;</span>)]<br></code></pre></td></tr></table></figure><p><font color="red">上述DataFrame模糊查询是针对某列数据元素格式全为str格式，方可使用该方法！</font></p><p>如果某列数据元素格式不全是str格式，可能存在int格式等等，因此把某列的数据格式统一成str格式就可以了！解决方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[<span class="hljs-string">&#x27;列名&#x27;</span>]=data[<span class="hljs-string">&#x27;列名&#x27;</span>].apply(<span class="hljs-built_in">str</span>)<span class="hljs-comment">#把非字符串格式改为字符串格式</span><br></code></pre></td></tr></table></figure><h3 id="多条件查询"><a href="#多条件查询" class="headerlink" title="多条件查询"></a>多条件查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[data.source.<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;某某|某某1&#x27;</span>)]<br></code></pre></td></tr></table></figure><p>对条件查询结果进行删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">data[-data.source.<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&#x27;某某|某某1&#x27;</span>)]<br></code></pre></td></tr></table></figure><h3 id="数据框去重"><a href="#数据框去重" class="headerlink" title="数据框去重"></a>数据框去重</h3><p>数据框去重使用<code>drop_duplicates</code>函数可以按某列去重，也可以按多列去重。语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">DataFrame.drop_duplicates(subset=<span class="hljs-literal">None</span>,keep=<span class="hljs-string">&#x27;first&#x27;</span>,inplace=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><ul><li>subset：用来指定特定的列。根据指定的列对数据框去重。默认值为None，即DataFrame中一行元素全部相同时才去除。</li><li>keep：对重复值的处理方式。可选参数有first,last,False。默认值first，即保留重复数据第一条。若选last为保留重复数据的最后一条，若选False则删除全部重复数据。</li><li>inplace：是否在原数据集上操作。默认值False，返回新数据框(原数据框不改变)。值为True时直接在原数据视图上删重，没有返回值。</li></ul><h4 id="按某列去重"><a href="#按某列去重" class="headerlink" title="按某列去重"></a>按某列去重</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">data.drop_duplicates(<span class="hljs-keyword">subset</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;列名&#x27;</span>,keep<span class="hljs-operator">=</span><span class="hljs-string">&#x27;first&#x27;</span>,inplace<span class="hljs-operator">=</span><span class="hljs-literal">False</span>)<br>data.drop_duplicates(<span class="hljs-keyword">subset</span><span class="hljs-operator">=</span>[<span class="hljs-string">&#x27;列名&#x27;</span>,<span class="hljs-string">&#x27;列名1&#x27;</span>],keep<span class="hljs-operator">=</span><span class="hljs-string">&#x27;first&#x27;</span>,inplace<span class="hljs-operator">=</span><span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h3 id="参考文献-1"><a href="#参考文献-1" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://blog.csdn.net/m0_54238780/article/details/126414860">https://blog.csdn.net/m0_54238780/article/details/126414860</a></li></ul><h2 id="时间序列相关"><a href="#时间序列相关" class="headerlink" title="时间序列相关"></a>时间序列相关</h2><h3 id="sin或者cos处理时间特征的原因"><a href="#sin或者cos处理时间特征的原因" class="headerlink" title="sin或者cos处理时间特征的原因"></a>sin或者cos处理时间特征的原因</h3><p>在特征工程中，使用正弦（sin）和余弦（cos）函数来处理时间特征是一种常见的做法，主要有以下几个原因：</p><ol><li><strong>循环性（周期性）表示</strong>：时间数据，如小时、星期几、月份等，通常具有周期性。例如，每天的24小时、每周的7天、每年的12个月等。使用正弦和余弦函数可以很好地表示这种周期性，因为这两个函数本身就是周期性的。</li><li><strong>保持连续性和一致性</strong>：如果我们直接使用小时（0到23）、月份（1到12）等作为特征，这会在周期的开始和结束创建不必要的“断点”。比如，23点和0点实际上是连续的，但如果直接使用数值，这种连续性在模型中无法表达。而通过将时间转换为正弦和余弦值，我们可以保证这种连续性（例如，正弦和余弦函数在0和24小时的值是相同的）。</li><li><strong>更好的模型解释性</strong>：使用正弦和余弦转换后的特征可以帮助模型更好地理解和解释时间数据的周期性规律，如一天中的高峰时段、一周中的工作日与周末、一年中的季节变化等。</li><li><strong>避免误导模型</strong>：直接使用原始的时间数字（如小时数）可能会误导模型，使其错误地解释时间值之间的线性关系。通过正弦和余弦转换，可以避免这种误解，帮助模型捕捉到时间的真实周期性特征。</li></ol><p>举个例子，对于小时特征，我们可以这样转换：</p><ul><li>sin 特征：sin(2π * 小时 &#x2F; 24)</li><li>cos 特征：cos(2π * 小时 &#x2F; 24)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;hr_sin&#x27;</span>] = np.sin(df.hr*(<span class="hljs-number">2.</span>*np.pi/<span class="hljs-number">24</span>))<br>df[<span class="hljs-string">&#x27;hr_cos&#x27;</span>] = np.cos(df.hr*(<span class="hljs-number">2.</span>*np.pi/<span class="hljs-number">24</span>))<br>df[<span class="hljs-string">&#x27;mnth_sin&#x27;</span>] = np.sin((df.mnth-<span class="hljs-number">1</span>)*(<span class="hljs-number">2.</span>*np.pi/<span class="hljs-number">12</span>))<br>df[<span class="hljs-string">&#x27;mnth_cos&#x27;</span>] = np.cos((df.mnth-<span class="hljs-number">1</span>)*(<span class="hljs-number">2.</span>*np.pi/<span class="hljs-number">12</span>))<br></code></pre></td></tr></table></figure><p>这样，无论是凌晨0点还是午夜24点，转换后的sin和cos值都是相同的，从而在模型中很好地表示了时间的周期性。</p><h2 id="数据合并-拼接-concat-append-merge"><a href="#数据合并-拼接-concat-append-merge" class="headerlink" title="数据合并&#x2F;拼接(concat&#x2F;append&#x2F;merge)"></a>数据合并&#x2F;拼接(concat&#x2F;append&#x2F;merge)</h2><p>两个表中的数据，要根据关键字段，进行合并。<br>在Excel中可以使用vlookup的方式，在python中可以使用concat或者是merge的方法。</p><h3 id="pd-concat"><a href="#pd-concat" class="headerlink" title="pd.concat"></a>pd.concat</h3><ul><li><p>拼接的对象可以是series，还可以是dataframe</p></li><li><p>拼接对象的个数不受限</p></li><li><p>axis 控制拼接方向（默认上下拼接,<font color="red">既可以上下拼接，又可以左右拼接</font>）</p><ul><li>上下拼接 axis &#x3D;0 ，拼接依据是列名，默认是上下拼接</li><li>左右拼接 axis&#x3D;1，左右拼接的依据是行索引；</li></ul></li><li><p>join 指定拼接方法(默认外连)</p><ul><li>join&#x3D;“inner” 内联,表示保留两个表共有的行索引</li><li>join&#x3D;“outer” 外联,表示保留两个表所有的行索引，默认外连</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#创建需要的数据集：产品表</span><br><span class="hljs-comment">#导入需要的包</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>dict1=&#123;<br>    <span class="hljs-string">&quot;产品编号&quot;</span>:[<span class="hljs-string">&quot;CP13&quot;</span>,<span class="hljs-string">&quot;CP14&quot;</span>,<span class="hljs-string">&quot;CP15&quot;</span>,<span class="hljs-string">&quot;CP16&quot;</span>,<span class="hljs-string">&quot;CP17&quot;</span>],<br>    <span class="hljs-string">&quot;产品名称&quot;</span>:[<span class="hljs-string">&quot;产品A003&quot;</span>,<span class="hljs-string">&quot;产品A004&quot;</span>,<span class="hljs-string">&quot;产品A005&quot;</span>,<span class="hljs-string">&quot;产品A006&quot;</span>,<span class="hljs-string">&quot;产品A007&quot;</span>]<br>&#125;<br>df1 = pd.DataFrame(dict1)<br>df1<br><br><span class="hljs-comment">#创建需要的数据集：详情表</span><br>dict2=&#123;<span class="hljs-string">&quot;订单编号&quot;</span>:[<span class="hljs-string">&quot;20220913&quot;</span>,<span class="hljs-string">&quot;20220914&quot;</span>,<span class="hljs-string">&quot;20220915&quot;</span>,<span class="hljs-string">&quot;20220915&quot;</span>],<br>       <span class="hljs-string">&quot;产品编号&quot;</span>:[<span class="hljs-string">&quot;CP13&quot;</span>,<span class="hljs-string">&quot;CP14&quot;</span>,<span class="hljs-string">&quot;CP15&quot;</span>,<span class="hljs-string">&quot;CP16&quot;</span>],<br>       <span class="hljs-string">&quot;产品销量&quot;</span>:[<span class="hljs-number">13</span>,<span class="hljs-number">24</span>,<span class="hljs-number">45</span>,<span class="hljs-number">32</span>],<br>       <span class="hljs-string">&quot;负责人&quot;</span>:[<span class="hljs-string">&quot;张三&quot;</span>,<span class="hljs-string">&quot;赵六&quot;</span>,<span class="hljs-string">&quot;李八&quot;</span>,<span class="hljs-string">&quot;李八&quot;</span>]&#125;<br>df2 = pd.DataFrame(dict2)<br>df2<br><br>   产品编号    产品名称<br><span class="hljs-number">0</span>  CP13  产品A003<br><span class="hljs-number">1</span>  CP14  产品A004<br><span class="hljs-number">2</span>  CP15  产品A005<br><span class="hljs-number">3</span>  CP16  产品A006<br><span class="hljs-number">4</span>  CP17  产品A007<br><br>       订单编号  产品编号  产品销量 负责人<br><span class="hljs-number">0</span>  <span class="hljs-number">20220913</span>  CP13    <span class="hljs-number">13</span>  张三<br><span class="hljs-number">1</span>  <span class="hljs-number">20220914</span>  CP14    <span class="hljs-number">24</span>  赵六<br><span class="hljs-number">2</span>  <span class="hljs-number">20220915</span>  CP15    <span class="hljs-number">45</span>  李八<br><span class="hljs-number">3</span>  <span class="hljs-number">20220915</span>  CP16    <span class="hljs-number">32</span>  李八<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">pd.concat([df1,df2])<span class="hljs-comment">#默认上下拼接，拼接依据是列名；默认外联，保留两个表都有的索引信息</span><br><br>   产品编号    产品名称      订单编号  产品销量  负责人<br><span class="hljs-number">0</span>  CP13  产品A003       NaN   NaN  NaN<br><span class="hljs-number">1</span>  CP14  产品A004       NaN   NaN  NaN<br><span class="hljs-number">2</span>  CP15  产品A005       NaN   NaN  NaN<br><span class="hljs-number">3</span>  CP16  产品A006       NaN   NaN  NaN<br><span class="hljs-number">4</span>  CP17  产品A007       NaN   NaN  NaN<br><span class="hljs-number">0</span>  CP13     NaN  <span class="hljs-number">20220913</span>  <span class="hljs-number">13.0</span>   张三<br><span class="hljs-number">1</span>  CP14     NaN  <span class="hljs-number">20220914</span>  <span class="hljs-number">24.0</span>   赵六<br><span class="hljs-number">2</span>  CP15     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">45.0</span>   李八<br><span class="hljs-number">3</span>  CP16     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">32.0</span>   李八<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">pd.concat([df1,df2],ignore_index=<span class="hljs-literal">True</span>)<span class="hljs-comment">#重置行索引</span><br><br>   产品编号    产品名称      订单编号  产品销量  负责人<br><span class="hljs-number">0</span>  CP13  产品A003       NaN   NaN  NaN<br><span class="hljs-number">1</span>  CP14  产品A004       NaN   NaN  NaN<br><span class="hljs-number">2</span>  CP15  产品A005       NaN   NaN  NaN<br><span class="hljs-number">3</span>  CP16  产品A006       NaN   NaN  NaN<br><span class="hljs-number">4</span>  CP17  产品A007       NaN   NaN  NaN<br><span class="hljs-number">5</span>  CP13     NaN  <span class="hljs-number">20220913</span>  <span class="hljs-number">13.0</span>   张三<br><span class="hljs-number">6</span>  CP14     NaN  <span class="hljs-number">20220914</span>  <span class="hljs-number">24.0</span>   赵六<br><span class="hljs-number">7</span>  CP15     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">45.0</span>   李八<br><span class="hljs-number">8</span>  CP16     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">32.0</span>   李八<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#左右拼接的依据是行索引  axis默认是0上下拼接，1为左右拼接；默认外联（join = &#x27;outer&#x27;）</span><br>pd.concat([df1,df2],axis=<span class="hljs-number">1</span>) <br><br>   产品编号    产品名称      订单编号  产品编号  产品销量  负责人<br><span class="hljs-number">0</span>  CP13  产品A003  <span class="hljs-number">20220913</span>  CP13  <span class="hljs-number">13.0</span>   张三<br><span class="hljs-number">1</span>  CP14  产品A004  <span class="hljs-number">20220914</span>  CP14  <span class="hljs-number">24.0</span>   赵六<br><span class="hljs-number">2</span>  CP15  产品A005  <span class="hljs-number">20220915</span>  CP15  <span class="hljs-number">45.0</span>   李八<br><span class="hljs-number">3</span>  CP16  产品A006  <span class="hljs-number">20220915</span>  CP16  <span class="hljs-number">32.0</span>   李八<br><span class="hljs-number">4</span>  CP17  产品A007       NaN   NaN   NaN  NaN<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#join指定了拼接方法，内联，表示保留两个表共有的行索引</span><br>pd.concat([df1,df2],axis=<span class="hljs-number">1</span>,join=<span class="hljs-string">&quot;inner&quot;</span>) <br><br>   产品编号    产品名称      订单编号  产品编号  产品销量 负责人<br><span class="hljs-number">0</span>  CP13  产品A003  <span class="hljs-number">20220913</span>  CP13    <span class="hljs-number">13</span>  张三<br><span class="hljs-number">1</span>  CP14  产品A004  <span class="hljs-number">20220914</span>  CP14    <span class="hljs-number">24</span>  赵六<br><span class="hljs-number">2</span>  CP15  产品A005  <span class="hljs-number">20220915</span>  CP15    <span class="hljs-number">45</span>  李八<br><span class="hljs-number">3</span>  CP16  产品A006  <span class="hljs-number">20220915</span>  CP16    <span class="hljs-number">32</span>  李八<br></code></pre></td></tr></table></figure><h3 id="df-append"><a href="#df-append" class="headerlink" title="df.append"></a>df.append</h3><p>和concat上下拼接的结果类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">df1.append(df2) <br><br>   产品编号    产品名称      订单编号  产品销量  负责人<br><span class="hljs-number">0</span>  CP13  产品A003       NaN   NaN  NaN<br><span class="hljs-number">1</span>  CP14  产品A004       NaN   NaN  NaN<br><span class="hljs-number">2</span>  CP15  产品A005       NaN   NaN  NaN<br><span class="hljs-number">3</span>  CP16  产品A006       NaN   NaN  NaN<br><span class="hljs-number">4</span>  CP17  产品A007       NaN   NaN  NaN<br><span class="hljs-number">0</span>  CP13     NaN  <span class="hljs-number">20220913</span>  <span class="hljs-number">13.0</span>   张三<br><span class="hljs-number">1</span>  CP14     NaN  <span class="hljs-number">20220914</span>  <span class="hljs-number">24.0</span>   赵六<br><span class="hljs-number">2</span>  CP15     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">45.0</span>   李八<br><span class="hljs-number">3</span>  CP16     NaN  <span class="hljs-number">20220915</span>  <span class="hljs-number">32.0</span>   李八<br></code></pre></td></tr></table></figure><h3 id="pd-merge"><a href="#pd-merge" class="headerlink" title="pd.merge()"></a>pd.merge()</h3><ul><li><p>拼接对象是dataframe或者series，<strong>左表必须是dataframe</strong></p></li><li><p>拼接的数量只能是两个</p></li><li><p><font color="red">拼接方向只能左右拼</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#left_on写左表进行拼接的字段，right_on写右表要进行拼接的字段</span><br>pd.merge(df1,df2,left_on=<span class="hljs-string">&quot;产品编号&quot;</span>,right_on=<span class="hljs-string">&quot;产品编号&quot;</span>,how = <span class="hljs-string">&#x27;right&#x27;</span>)<br><br>   产品编号    产品名称      订单编号  产品销量 负责人<br><span class="hljs-number">0</span>  CP13  产品A003  <span class="hljs-number">20220913</span>    <span class="hljs-number">13</span>  张三<br><span class="hljs-number">1</span>  CP14  产品A004  <span class="hljs-number">20220914</span>    <span class="hljs-number">24</span>  赵六<br><span class="hljs-number">2</span>  CP15  产品A005  <span class="hljs-number">20220915</span>    <span class="hljs-number">45</span>  李八<br><span class="hljs-number">3</span>  CP16  产品A006  <span class="hljs-number">20220915</span>    <span class="hljs-number">32</span>  李八<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#若两表拼接字段名完全一样，可写一个on</span><br>pd.merge(df1,df2,on=<span class="hljs-string">&quot;产品编号&quot;</span>)<br><br>   产品编号    产品名称      订单编号  产品销量 负责人<br><span class="hljs-number">0</span>  CP13  产品A003  <span class="hljs-number">20220913</span>    <span class="hljs-number">13</span>  张三<br><span class="hljs-number">1</span>  CP14  产品A004  <span class="hljs-number">20220914</span>    <span class="hljs-number">24</span>  赵六<br><span class="hljs-number">2</span>  CP15  产品A005  <span class="hljs-number">20220915</span>    <span class="hljs-number">45</span>  李八<br><span class="hljs-number">3</span>  CP16  产品A006  <span class="hljs-number">20220915</span>    <span class="hljs-number">32</span>  李八<br></code></pre></td></tr></table></figure></li></ul><h3 id="df-join"><a href="#df-join" class="headerlink" title="df.join"></a>df.join</h3><p>和concat左右拼接的结果类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">df1.join(df2, lsuffix=<span class="hljs-string">&#x27;_b&#x27;</span>, rsuffix=<span class="hljs-string">&#x27;_a&#x27;</span>)<br><br>  产品编号_b    产品名称      订单编号 产品编号_a  产品销量  负责人<br><span class="hljs-number">0</span>   CP13  产品A003  <span class="hljs-number">20220913</span>   CP13  <span class="hljs-number">13.0</span>   张三<br><span class="hljs-number">1</span>   CP14  产品A004  <span class="hljs-number">20220914</span>   CP14  <span class="hljs-number">24.0</span>   赵六<br><span class="hljs-number">2</span>   CP15  产品A005  <span class="hljs-number">20220915</span>   CP15  <span class="hljs-number">45.0</span>   李八<br><span class="hljs-number">3</span>   CP16  产品A006  <span class="hljs-number">20220915</span>   CP16  <span class="hljs-number">32.0</span>   李八<br><span class="hljs-number">4</span>   CP17  产品A007       NaN    NaN   NaN  NaN<br></code></pre></td></tr></table></figure><h3 id="比较异同"><a href="#比较异同" class="headerlink" title="比较异同"></a>比较异同</h3><img src="C:\Users\韦磊\Desktop\表合并.png" alt="表合并" style="zoom: 33%;" /><h3 id="参考文献-2"><a href="#参考文献-2" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://blog.csdn.net/one_bird_/article/details/126805418">https://blog.csdn.net/one_bird_/article/details/126805418</a></li></ul><h2 id="DataFrame增删改查"><a href="#DataFrame增删改查" class="headerlink" title="DataFrame增删改查"></a>DataFrame增删改查</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br> <br>df = pd.DataFrame(<br>    data = [<br>        [<span class="hljs-string">&#x27;lisa&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-number">22</span>],<br>        [<span class="hljs-string">&#x27;joy&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-number">22</span>],<br>        [<span class="hljs-string">&#x27;tom&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;21&#x27;</span>]],index = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],columns = [<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>])<span class="hljs-comment">#测试数据。</span><br>df<br><br>   name sex age<br><span class="hljs-number">1</span>  lisa   f  <span class="hljs-number">22</span><br><span class="hljs-number">2</span>   joy   f  <span class="hljs-number">22</span><br><span class="hljs-number">3</span>   tom   m  <span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><h3 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h3><h4 id="按列增加"><a href="#按列增加" class="headerlink" title="按列增加"></a>按列增加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">citys = [<span class="hljs-string">&#x27;ny&#x27;</span>,<span class="hljs-string">&#x27;zz&#x27;</span>,<span class="hljs-string">&#x27;xy&#x27;</span>]<br>df.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;city&#x27;</span>,citys) <span class="hljs-comment">#在第0列，加上column名称为city，值为citys的数值。</span><br><br>jobs = [<span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;AI&#x27;</span>,<span class="hljs-string">&#x27;teacher&#x27;</span>]<br>df[<span class="hljs-string">&#x27;job&#x27;</span>] = jobs <span class="hljs-comment">#默认在df最后一列加上column名称为job，值为jobs的数据。</span><br><br>df.loc[:,<span class="hljs-string">&#x27;salary&#x27;</span>] = [<span class="hljs-string">&#x27;1k&#x27;</span>,<span class="hljs-string">&#x27;2k&#x27;</span>,<span class="hljs-string">&#x27;2k&#x27;</span>,<span class="hljs-string">&#x27;2k&#x27;</span>,<span class="hljs-string">&#x27;3k&#x27;</span>] <span class="hljs-comment">#在df最后一列加上column名称为salary，值为等号右边数据。</span><br></code></pre></td></tr></table></figure><h4 id="按行增加"><a href="#按行增加" class="headerlink" title="按行增加"></a>按行增加</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[<span class="hljs-number">4</span>] = [<span class="hljs-string">&#x27;zz&#x27;</span>,<span class="hljs-string">&#x27;mason&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-number">24</span>,<span class="hljs-string">&#x27;engineer’]</span><br></code></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><h4 id="df-‘column-name’-和df-row-start-index-row-end-index"><a href="#df-‘column-name’-和df-row-start-index-row-end-index" class="headerlink" title="df[‘column_name’] 和df[row_start_index, row_end_index]"></a>df[‘column_name’] 和df[row_start_index, row_end_index]</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">df[<span class="hljs-string">&#x27;name&#x27;</span>]<br>df[<span class="hljs-string">&#x27;gender&#x27;</span>]<br>df[[<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;gender&#x27;</span>]] <span class="hljs-comment">#选取多列，多列名字要放在list里</span><br>df[<span class="hljs-number">0</span>:]<span class="hljs-comment">#第0行及之后的行，相当于df的全部数据，注意冒号是必须的</span><br>df[:<span class="hljs-number">2</span>]<span class="hljs-comment">#第2行之前的数据（不含第2行）</span><br>df[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<span class="hljs-comment">#第0行</span><br>df[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>] <span class="hljs-comment">#第1行到第2行（不含第3行）</span><br>df[-<span class="hljs-number">1</span>:] <span class="hljs-comment">#最后一行</span><br>df[-<span class="hljs-number">3</span>:-<span class="hljs-number">1</span>] <span class="hljs-comment">#倒数第3行到倒数第1行（不包含最后1行即倒数第1行，这里有点烦躁，因为从前数时从第0行开始，从后数就是-1行开始，毕竟没有-0）</span><br></code></pre></td></tr></table></figure><h4 id="df-loc-index-column"><a href="#df-loc-index-column" class="headerlink" title="df.loc[index,column]"></a>df.loc[index,column]</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># df.loc[index, column_name],选取指定行和列的数据</span><br>df.loc[<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;name&#x27;</span>] <span class="hljs-comment"># &#x27;Snow&#x27;</span><br>df.loc[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>, [<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>]]  <span class="hljs-comment">#选取第0行到第2行，name列和age列的数据, 注意这里的行选取是包含下标的。</span><br>df.loc[[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],[<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>]]  <span class="hljs-comment">#选取指定的第2行和第3行，name和age列的数据</span><br>df.loc[df[<span class="hljs-string">&#x27;gender&#x27;</span>]==<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span>]  <span class="hljs-comment">#选取gender列是M，name列的数据</span><br>df.loc[df[<span class="hljs-string">&#x27;gender&#x27;</span>]==<span class="hljs-string">&#x27;M&#x27;</span>,[<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>]] <span class="hljs-comment">#选取gender列是M，name和age列的数据</span><br></code></pre></td></tr></table></figure><h4 id="iloc-row-index-column-index"><a href="#iloc-row-index-column-index" class="headerlink" title="iloc[row_index, column_index]"></a>iloc[row_index, column_index]</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">df.iloc[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<span class="hljs-comment">#第0行第0列的数据，&#x27;Snow&#x27;</span><br>df.iloc[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<span class="hljs-comment">#第1行第2列的数据，32</span><br>df.iloc[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>],<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<span class="hljs-comment">#第1行和第3行，从第0列到第2列（不包含第2列）的数据</span><br>df.iloc[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]]<span class="hljs-comment">#第1行到第3行（不包含第3行），第1列和第2列的数据</span><br></code></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><h4 id="改行列标题"><a href="#改行列标题" class="headerlink" title="改行列标题"></a>改行列标题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">df.columns = [<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;gender&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>] <span class="hljs-comment">#尽管我们只想把’sex’改为’gender’，但是仍然要把所有的列全写上，否则报错。</span><br><br>df.rename(columns = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;Name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-string">&#x27;Age&#x27;</span>&#125;,inplace = <span class="hljs-literal">True</span>) <span class="hljs-comment">#只修改name和age。inplace若为True，直接修改df，否则，不修改df，只是返回一个修改后的数据。</span><br><br>df.index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;abc&#x27;</span>)<span class="hljs-comment">#把index改为a,b,c.直接修改了df。</span><br><br>df.rename(&#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-number">3</span>:<span class="hljs-string">&#x27;c&#x27;</span>&#125;,axis = <span class="hljs-number">0</span>,inplace = <span class="hljs-literal">True</span>)<span class="hljs-comment">#无返回值，直接修改df的index。</span><br></code></pre></td></tr></table></figure><h4 id="修改数值"><a href="#修改数值" class="headerlink" title="修改数值"></a>修改数值</h4><h5 id="使用loc"><a href="#使用loc" class="headerlink" title="使用loc"></a>使用loc</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df.loc[<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&#x27;aa&#x27;</span> <span class="hljs-comment">#修改index为‘1’，column为‘name’的那一个值为aa。</span><br>df.loc[<span class="hljs-number">1</span>] = [<span class="hljs-string">&#x27;bb&#x27;</span>,<span class="hljs-string">&#x27;ff&#x27;</span>,<span class="hljs-number">11</span>] <span class="hljs-comment">#修改index为‘1’的那一行的所有值。</span><br>df.loc[<span class="hljs-number">1</span>,[<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>]] = [<span class="hljs-string">&#x27;bb&#x27;</span>,<span class="hljs-number">11</span>]    <span class="hljs-comment">#修改index为‘1’，column为‘name’的那一个值为bb，age列的值为11。</span><br></code></pre></td></tr></table></figure><h5 id="使用iloc-row-index-column-index-："><a href="#使用iloc-row-index-column-index-：" class="headerlink" title="使用iloc[row_index, column_index]："></a>使用iloc[row_index, column_index]：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df.iloc[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>] = <span class="hljs-number">19</span><span class="hljs-comment">#修改某一无素</span><br>df.iloc[:,<span class="hljs-number">2</span>] = [<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>] <span class="hljs-comment">#修改一整列</span><br>df.iloc[<span class="hljs-number">0</span>,:] = [<span class="hljs-string">&#x27;lily&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-number">15</span>] <span class="hljs-comment">#修改一整行</span><br></code></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><h4 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">df.drop([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>],axis = <span class="hljs-number">0</span>,inplace = <span class="hljs-literal">False</span>)<span class="hljs-comment">#删除index值为1和3的两行</span><br></code></pre></td></tr></table></figure><h4 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df.drop([<span class="hljs-string">&#x27;name&#x27;</span>],axis = <span class="hljs-number">1</span>,inplace = <span class="hljs-literal">False</span>) <span class="hljs-comment">#删除name列。</span><br><span class="hljs-keyword">del</span> df[<span class="hljs-string">&#x27;name&#x27;</span>] <span class="hljs-comment">#删除name列</span><br>ndf = df.pop(<span class="hljs-string">&#x27;age’)#删除age列，操作后，df都丢掉了age列,age列返回给了ndf。</span><br></code></pre></td></tr></table></figure><h3 id="参考文献-3"><a href="#参考文献-3" class="headerlink" title="参考文献"></a>参考文献</h3><ul><li><a href="https://blog.csdn.net/zhangchuang601/article/details/79583551">https://blog.csdn.net/zhangchuang601/article/details/79583551</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Pandas教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/18/hello-world/"/>
    <url>/2024/11/18/hello-world/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="20cd07f73230f6f312941426ee383293267074cd43d67cda37a0b156004b520d">b0723210a1f2b2162110fd3fcca930d995665aa5795be0f4088d71e3239b2780cccc9032c3f93065a9dd75b899c6adc5f8dad0d1317f7daa851bdab841afab5d2aa33ca0362a34e6d8a59d955c14028b5b5c61b17d86482840f31c05ae46046cd50ed7687837c5d019c446afdf2041bae1883714fa664385cf382a7bd2b0b789bfc8ec4f9fd48bbefeb4522272504273271a9866a17945b639e29163e37cc7005ca18ab0dfb58ef0f3ea7abe04cc8de8da227f253bb8ead558c2ea99cd635ff6ec5582e3acb9b9f397a85ac83ec01044d8de6a7ed1672970ed516ea710012de317c0c81d36e5a2e1ec4ce01e4693beda23989a0b947d2a5837729ff91940d5ca8224c2892db7a761ec87ae0d4f869dd208de8bbc7cabb873b814ab7cbf7ff29054778717d02f8a02ac282e3dbe12108a28718e9edcac44d1292a2b193c4dc86da0c15291ab9c4564249a6c6784891b5d9143458286672c0927ea884067f82b1fbc9cff181974af03a80d0e57ada5588d31e2309143a4e8a62ae2603b4823410d68d5a88162513ac7b614516f286cd45a8ea6d6db9a4a1f1cb6f41a5c85b525dd88cd99a6d7c9c49fc5252bbb41c1046e80e02f8ba4d5916ba6a67a3f60c8011cc71cc7db2ee17133343192f6786a2074e038cd1728cc611ac9b295f30558bed9e7ad4e92d2cf605cbdd2687210a498a4a71beea72c2b2313d3e52c43657610a8f1f7e47bf475c20c329b04bbc059eeee63023e7c0ac275d0b394d160d162879879a09a13838b8f781fa714dfd8993b0452efa2d1e5c6e91d987de687cf7eba829bd9f8954f6f08649c93030f00d03b1419403e75fc8be18fd4eec0f9e96cbeec3005420ad3ac9d7532a52552eb9d04e057dbd89f96090c30beb7363f3b8fd35808c61f92b722e259353563feb28ccb4c2e920207894249527083b645b2d73b3cf5794fb763d5b0812a21704c4173d61559b2d4334b4cbfaa22d6106175e7a8508b526af9080309a4a03237c7daedf26c0fe825ad8e84069c7227e764992fe411dfb680164abf66feaa314ab2bcce8ca752204fd665abdc507e73795ce9ffb9e6cc48bcc41376268e39cf8c088fc4d4fc207aec5290d10e624ceee4bb9264c387451992be0818a3de84183f2b6465e2aec988868383fd6273bd2807fb4f34e52429fa11120293bd45b8799ed5135b24d13015df522c1686d087de7455ec1cf1465529593091aee9aef4b59ea43dec7170d4e58f5aded4f132e23bd396a4e9b96db301a78a969519382727600b454e1fe411b0bfc9d61f13f0a1b3468112c841d6d92f312851019c63559493465c14f25d3fca4e07d945d6d92ef829bbe558bc8673520dea51492e3c9f562829d35e87d61b9329c9145744fb1947dc04773de45a7bfd0176b93f664a26ddf13f6ecfa6026087b3726ff10d73ee0165646b33395adc88857c010075a03694613be48d4abc2e5ec6e6c861f50a35e587be0cd68ce8e7358da2281001077174ac4dae5d0efc4f2ce90b02975668c2c886b05036a584cea7d6cbce998e7747766825d8692dbd72c773eaea7458559d0906889b5cccd061c371456f215ec3616231836287a56ebba3394e5af5c78b6cc10c6bb1936dab57a143ef3ab3273bb021d5fcd560100896bf18140e87971d0b50426da3dc6fe2c49b0db9dfbd1f2cb9cac0965ee53ecd2dbedbf47708617c68991cd744a1564d3f87a88586ea58214e8829f20b061b6a6b6f40fb764a7cffe779e29d03b6167f166cd06896a97332d524ee41943bc0c768fc3aac6b2bf582c6dac7821692a468131b634dd4e0bd31dc902ab00f65ee75ff29bd75ae6e63c188981f513c5bf6fa6a4a2207bf87cf2d065dd803902b70c9bf9203cf42652d0652aa3fc200f9365d2c7ad02e09cc1edf1bd8a3dd4aafa2dfe31fc307d591e530f0239ac823b0ea208ce021bee87c745ceee6292b89450b34470ccc8e44db03fc5dc036d43abc62e0bc78b80f0f55720418b22c97c915d955c6bb07281606f94bebb2a9acc5095e49015f3c93a41ca996b5a0a952074cf0869216a081f4091134f8e06763d8be19ffbec2c33f362fbbf4bc76292306862c27678a07f692cff84c68bc615157e0b4d7490b93b6e63b1120d0788acf031c5151e857372246f38612dc8f86b3c7a882c4a3e5ce13f4ac9baf6f94ef940db493408f1137ed876a2b988f9baf54d107431d7522dcc0c42405c0cc30c57bd609246e280d6be2c7c1e15f16570fd5d05c3b8854d770b388a775903573c9257118ca0d4e5fe47fc8adf9addf5ec6c06fbc88bf249e667398812bf6072e1afdaa6090c1fcbac8877b921803f47113d76f9387f7a0bf106933c1904bc7839723cde2d40181ab44b7b49f656a08b645d4cd03f29d03573e341e5bd5ff84f4a0e36374cb15e3c01cc9e496c3e98dfd692e6b21efe477a56d8746bbc5a86319fbba3258b872fb932698e50040278ffeb7d7ab86ef2eac0f3cc63b1209c4cdfc386ddfe129f87f885f281f0e9f5fb183b4bc27d501d0e15d9e1397f028731ff33211aa05c4176a2b807643bf48c1fb5e941713391e518f122eca95076f37e1998db6de718d2283919cd8039016ec94feef6e828aa790831cc6fe72ecc6316bf0399567ee60f18a382fb2043f8e8a7c911f36406a353e16433662f55757e5c88e21558bc3a9c98adf4ae6acde00f07fa409a75592734382587b51e9e5ec469f8eda7d48c8d67905010bee0c881a3e556d262f5e78de385b790d8ae6c98654f6c20e9287d809285ac0aa76af2356e8e904dc7431e3e52557d7a93b852e0cc212655a1b165712c004c97d1917e6e0fea86e3c19d035a52ec1c618b5aa85e8cd0e121632a16b66086653cc54829f3233aa6bd64edc27baf685170eb81a596b832ce8a25353f91c108d304aa170be54a1c7f8d35fb38c4591390caac39206865bece93e28f390df6017e3382753a4056976c95cbc8a4a41ab1df6973e4c80e5a7189a86bc2e63ecc2baf9cef74d6e865716fe0a16a6bf50b8c09a4104d5a3fcad6754279590fe11d5d0323a60a4ed498cd2027cfe230f8d4d46a17044fe2d03b2d208f3858851f5ef2168203018e2f8cd3292d66002f7b4865cac8ca66ada87c0b2fd693448d7a5715dbfb76c3ae71648b2d1abd13629ec96d85cab2ad019191336ebacc508607544</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
